//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Mercury.Server.Workflows.Activities.SendCorrespondence {
    
    
    [System.Runtime.InteropServices.ComVisible(false)]
    public partial class SendCorrespondence : System.Activities.Activity, System.ComponentModel.ISupportInitialize {
        
        private bool _contentLoaded;
        
        private System.Activities.InOutArgument<Mercury.Server.Workflows.WorkflowManager4> _WorkflowManager;
        
        private System.Activities.InOutArgument<System.Collections.Generic.List<Mercury.Server.Workflows.WorkflowStep>> _WorkflowSteps;
        
        private System.Activities.InArgument<Mercury.Server.Core.Entity.Entity> _Entity;
        
        private System.Activities.InArgument<string> _CorrespondenceName;
        
        private System.Activities.InArgument<bool> _AllowUserSelection;
        
        private System.Activities.InArgument<bool> _AllowAlternateAddress;
        
        private System.Activities.InArgument<Mercury.Server.Core.Entity.EntityAddress> _AlternateAddress;
        
        private System.Activities.InArgument<bool> _AllowSendByFacsimile;
        
        private System.Activities.InArgument<string> _AlternateFaxNumber;
        
        private System.Activities.InArgument<bool> _AllowSendByEmail;
        
        private System.Activities.InArgument<string> _AlternateEmail;
        
        private System.Activities.InArgument<bool> _AllowSendByInPerson;
        
        private System.Activities.InArgument<bool> _AllowCancel;
        
        private System.Activities.InArgument<bool> _AllowHistoricalSendDate;
        
        private System.Activities.InArgument<bool> _AllowFutureSendDate;
        
        private System.Activities.InArgument<System.DateTime> _SendDate;
        
        private System.Activities.InArgument<string> _CorrespondenceMessage;
        
        private System.Activities.InArgument<bool> _AutoSaveCorrespondence;
        
        private System.Activities.OutArgument<Mercury.Server.Core.Entity.EntityCorrespondence> _EntityCorrespondence;
        
        private System.Activities.OutArgument<bool> _ActivityCanceled;
        
        private System.Activities.InArgument<long> _WorkQueueItemId;
        
        private System.Activities.InArgument<string> _Attention;
        
partial void BeforeInitializeComponent(ref bool isInitialized);

partial void AfterInitializeComponent();

        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("XamlBuildTask", "15.0.0.0")]
        public SendCorrespondence() {
            this.InitializeComponent();
        }
        
        public System.Activities.InOutArgument<Mercury.Server.Workflows.WorkflowManager4> WorkflowManager {
            get {
                return this._WorkflowManager;
            }
            set {
                this._WorkflowManager = value;
            }
        }
        
        public System.Activities.InOutArgument<System.Collections.Generic.List<Mercury.Server.Workflows.WorkflowStep>> WorkflowSteps {
            get {
                return this._WorkflowSteps;
            }
            set {
                this._WorkflowSteps = value;
            }
        }
        
        public System.Activities.InArgument<Mercury.Server.Core.Entity.Entity> Entity {
            get {
                return this._Entity;
            }
            set {
                this._Entity = value;
            }
        }
        
        public System.Activities.InArgument<string> CorrespondenceName {
            get {
                return this._CorrespondenceName;
            }
            set {
                this._CorrespondenceName = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowUserSelection {
            get {
                return this._AllowUserSelection;
            }
            set {
                this._AllowUserSelection = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowAlternateAddress {
            get {
                return this._AllowAlternateAddress;
            }
            set {
                this._AllowAlternateAddress = value;
            }
        }
        
        public System.Activities.InArgument<Mercury.Server.Core.Entity.EntityAddress> AlternateAddress {
            get {
                return this._AlternateAddress;
            }
            set {
                this._AlternateAddress = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowSendByFacsimile {
            get {
                return this._AllowSendByFacsimile;
            }
            set {
                this._AllowSendByFacsimile = value;
            }
        }
        
        public System.Activities.InArgument<string> AlternateFaxNumber {
            get {
                return this._AlternateFaxNumber;
            }
            set {
                this._AlternateFaxNumber = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowSendByEmail {
            get {
                return this._AllowSendByEmail;
            }
            set {
                this._AllowSendByEmail = value;
            }
        }
        
        public System.Activities.InArgument<string> AlternateEmail {
            get {
                return this._AlternateEmail;
            }
            set {
                this._AlternateEmail = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowSendByInPerson {
            get {
                return this._AllowSendByInPerson;
            }
            set {
                this._AllowSendByInPerson = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowCancel {
            get {
                return this._AllowCancel;
            }
            set {
                this._AllowCancel = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowHistoricalSendDate {
            get {
                return this._AllowHistoricalSendDate;
            }
            set {
                this._AllowHistoricalSendDate = value;
            }
        }
        
        public System.Activities.InArgument<bool> AllowFutureSendDate {
            get {
                return this._AllowFutureSendDate;
            }
            set {
                this._AllowFutureSendDate = value;
            }
        }
        
        public System.Activities.InArgument<System.DateTime> SendDate {
            get {
                return this._SendDate;
            }
            set {
                this._SendDate = value;
            }
        }
        
        public System.Activities.InArgument<string> CorrespondenceMessage {
            get {
                return this._CorrespondenceMessage;
            }
            set {
                this._CorrespondenceMessage = value;
            }
        }
        
        public System.Activities.InArgument<bool> AutoSaveCorrespondence {
            get {
                return this._AutoSaveCorrespondence;
            }
            set {
                this._AutoSaveCorrespondence = value;
            }
        }
        
        public System.Activities.OutArgument<Mercury.Server.Core.Entity.EntityCorrespondence> EntityCorrespondence {
            get {
                return this._EntityCorrespondence;
            }
            set {
                this._EntityCorrespondence = value;
            }
        }
        
        public System.Activities.OutArgument<bool> ActivityCanceled {
            get {
                return this._ActivityCanceled;
            }
            set {
                this._ActivityCanceled = value;
            }
        }
        
        public System.Activities.InArgument<long> WorkQueueItemId {
            get {
                return this._WorkQueueItemId;
            }
            set {
                this._WorkQueueItemId = value;
            }
        }
        
        public System.Activities.InArgument<string> Attention {
            get {
                return this._Attention;
            }
            set {
                this._Attention = value;
            }
        }
        
        /// <summary>
        /// InitializeComponent
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("XamlBuildTask", "15.0.0.0")]
        public void InitializeComponent() {
            if ((this._contentLoaded == true)) {
                return;
            }
            this._contentLoaded = true;
            bool isInitialized = false;
            this.BeforeInitializeComponent(ref isInitialized);
            if ((isInitialized == true)) {
                this.AfterInitializeComponent();
                return;
            }
            string resourceName = this.FindResource();
            System.IO.Stream initializeXaml = typeof(SendCorrespondence).Assembly.GetManifestResourceStream(resourceName);
            System.Xml.XmlReader xmlReader = null;
            System.Xaml.XamlReader reader = null;
            System.Xaml.XamlObjectWriter objectWriter = null;
            try {
                System.Xaml.XamlSchemaContext schemaContext = XamlStaticHelperNamespace._XamlStaticHelper.SchemaContext;
                xmlReader = System.Xml.XmlReader.Create(initializeXaml);
                System.Xaml.XamlXmlReaderSettings readerSettings = new System.Xaml.XamlXmlReaderSettings();
                readerSettings.LocalAssembly = System.Reflection.Assembly.GetExecutingAssembly();
                readerSettings.AllowProtectedMembersOnRoot = true;
                reader = new System.Xaml.XamlXmlReader(xmlReader, schemaContext, readerSettings);
                System.Xaml.XamlObjectWriterSettings writerSettings = new System.Xaml.XamlObjectWriterSettings();
                writerSettings.RootObjectInstance = this;
                writerSettings.AccessLevel = System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(typeof(SendCorrespondence));
                objectWriter = new System.Xaml.XamlObjectWriter(schemaContext, writerSettings);
                System.Xaml.XamlServices.Transform(reader, objectWriter);
            }
            finally {
                if ((xmlReader != null)) {
                    ((System.IDisposable)(xmlReader)).Dispose();
                }
                if ((reader != null)) {
                    ((System.IDisposable)(reader)).Dispose();
                }
                if ((objectWriter != null)) {
                    ((System.IDisposable)(objectWriter)).Dispose();
                }
            }
            this.AfterInitializeComponent();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("XamlBuildTask", "15.0.0.0")]
        private string FindResource() {
            string[] resources = typeof(SendCorrespondence).Assembly.GetManifestResourceNames();
            for (int i = 0; (i < resources.Length); i = (i + 1)) {
                string resource = resources[i];
                if ((resource.Contains(".SendCorrespondence.g.xaml") || resource.Equals("SendCorrespondence.g.xaml"))) {
                    return resource;
                }
            }
            throw new System.InvalidOperationException("Resource not found.");
        }
        
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033")]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("XamlBuildTask", "15.0.0.0")]
        void System.ComponentModel.ISupportInitialize.BeginInit() {
        }
        
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033")]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("XamlBuildTask", "15.0.0.0")]
        void System.ComponentModel.ISupportInitialize.EndInit() {
            this.InitializeComponent();
        }
    }
}
