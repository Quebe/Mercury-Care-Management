//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace Mercury.Server.Application {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoreObject", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsuranceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Insurer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Entity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSetDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingletonDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Member))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCoverage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentPcp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentTplCob))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberRelationship))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEventDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Claim))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthority))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Permission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Environment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaDemographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaGeographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Action))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTriggerEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRuleDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueGetWorkUserView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemAssignmentHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemSender))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedServiceDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Provider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderAffiliation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderServiceLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Authorization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlLabel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Form))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSectionColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlButton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Activity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreExtensibleObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreConfigurationObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Contract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Program))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Population))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Correspondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegarding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Printer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServer))]
    public partial class CoreObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private string DescriptionField;
        
        private long IdField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorityAccountStamp", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data")]
    public partial class AuthorityAccountStamp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ActionDateField;
        
        private string SecurityAuthorityNameField;
        
        private string UserAccountIdField;
        
        private string UserAccountNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionDate {
            get {
                return this.ActionDateField;
            }
            set {
                if ((this.ActionDateField.Equals(value) != true)) {
                    this.ActionDateField = value;
                    this.RaisePropertyChanged("ActionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAuthorityName {
            get {
                return this.SecurityAuthorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAuthorityNameField, value) != true)) {
                    this.SecurityAuthorityNameField = value;
                    this.RaisePropertyChanged("SecurityAuthorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountId {
            get {
                return this.UserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountIdField, value) != true)) {
                    this.UserAccountIdField = value;
                    this.RaisePropertyChanged("UserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountName {
            get {
                return this.UserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountNameField, value) != true)) {
                    this.UserAccountNameField = value;
                    this.RaisePropertyChanged("UserAccountName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class InsuranceType : Mercury.Server.Application.CoreObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insurer", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class Insurer : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Entity EntityField;
        
        private long EntityIdField;
        
        private string NationalPlanIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalPlanId {
            get {
                return this.NationalPlanIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalPlanIdField, value) != true)) {
                    this.NationalPlanIdField = value;
                    this.RaisePropertyChanged("NationalPlanId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class Entity : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        private string FederalTaxIdField;
        
        private string IdCodeQualifierField;
        
        private string NameFirstField;
        
        private string NameLastField;
        
        private string NameMiddleField;
        
        private string NamePrefixField;
        
        private string NameSuffixField;
        
        private string UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FederalTaxId {
            get {
                return this.FederalTaxIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FederalTaxIdField, value) != true)) {
                    this.FederalTaxIdField = value;
                    this.RaisePropertyChanged("FederalTaxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCodeQualifier {
            get {
                return this.IdCodeQualifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCodeQualifierField, value) != true)) {
                    this.IdCodeQualifierField = value;
                    this.RaisePropertyChanged("IdCodeQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameFirst {
            get {
                return this.NameFirstField;
            }
            set {
                if ((object.ReferenceEquals(this.NameFirstField, value) != true)) {
                    this.NameFirstField = value;
                    this.RaisePropertyChanged("NameFirst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameLast {
            get {
                return this.NameLastField;
            }
            set {
                if ((object.ReferenceEquals(this.NameLastField, value) != true)) {
                    this.NameLastField = value;
                    this.RaisePropertyChanged("NameLast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameMiddle {
            get {
                return this.NameMiddleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameMiddleField, value) != true)) {
                    this.NameMiddleField = value;
                    this.RaisePropertyChanged("NameMiddle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamePrefix {
            get {
                return this.NamePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.NamePrefixField, value) != true)) {
                    this.NamePrefixField = value;
                    this.RaisePropertyChanged("NamePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSuffix {
            get {
                return this.NameSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSuffixField, value) != true)) {
                    this.NameSuffixField = value;
                    this.RaisePropertyChanged("NameSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageLevel", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class CoverageLevel : Mercury.Server.Application.CoreObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class CoverageType : Mercury.Server.Application.CoreObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberService", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices")]
    public partial class MemberService : Mercury.Server.Application.CoreObject {
        
        private bool AddedManuallyField;
        
        private System.DateTime EventDateField;
        
        private long MemberIdField;
        
        private Mercury.Server.Application.Service ServiceField;
        
        private long ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddedManually {
            get {
                return this.AddedManuallyField;
            }
            set {
                if ((this.AddedManuallyField.Equals(value) != true)) {
                    this.AddedManuallyField = value;
                    this.RaisePropertyChanged("AddedManually");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSetDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Defin" +
        "itions")]
    public partial class ServiceSetDefinition : Mercury.Server.Application.CoreObject {
        
        private long DefinitionServiceIdField;
        
        private bool EnabledField;
        
        private long ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DefinitionServiceId {
            get {
                return this.DefinitionServiceIdField;
            }
            set {
                if ((this.DefinitionServiceIdField.Equals(value) != true)) {
                    this.DefinitionServiceIdField = value;
                    this.RaisePropertyChanged("DefinitionServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSingletonDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Defin" +
        "itions")]
    public partial class ServiceSingletonDefinition : Mercury.Server.Application.CoreObject {
        
        private string BillTypeCriteriaField;
        
        private string CustomCriteriaField;
        
        private Mercury.Server.Application.ServiceDataSourceType DataSourceTypeField;
        
        private string DeaClassificationCriteriaField;
        
        private string DiagnosisCriteriaField;
        
        private string DrgCriteriaField;
        
        private string DrugNameCriteriaField;
        
        private bool EnabledField;
        
        private Mercury.Server.Application.EventDateOrder EventDateOrderField;
        
        private string Icd9ProcedureCodeCriteriaField;
        
        private bool IsPcpRequiredCriteriaField;
        
        private string LabLoincCodeCriteriaField;
        
        private long LabMetricIdField;
        
        private string LabNameCriteriaField;
        
        private string LabValueExpressionCriteriaField;
        
        private string LocationCodeCriteriaField;
        
        private Mercury.Server.Application.DateQualifier MemberAgeDateQualifierField;
        
        private int MemberAgeMaximumField;
        
        private int MemberAgeMinimumField;
        
        private string ModifierCodeCriteriaField;
        
        private string NdcCodeCriteriaField;
        
        private string PrincipalDiagnosisCriteriaField;
        
        private string ProcedureCodeCriteriaField;
        
        private string ProviderSpecialtyCriteriaField;
        
        private string RevenueCodeCriteriaField;
        
        private long ServiceIdField;
        
        private string TherapeuticClassificationCriteriaField;
        
        private bool UseMemberAgeCriteriaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillTypeCriteria {
            get {
                return this.BillTypeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.BillTypeCriteriaField, value) != true)) {
                    this.BillTypeCriteriaField = value;
                    this.RaisePropertyChanged("BillTypeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomCriteria {
            get {
                return this.CustomCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomCriteriaField, value) != true)) {
                    this.CustomCriteriaField = value;
                    this.RaisePropertyChanged("CustomCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceDataSourceType DataSourceType {
            get {
                return this.DataSourceTypeField;
            }
            set {
                if ((this.DataSourceTypeField.Equals(value) != true)) {
                    this.DataSourceTypeField = value;
                    this.RaisePropertyChanged("DataSourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeaClassificationCriteria {
            get {
                return this.DeaClassificationCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DeaClassificationCriteriaField, value) != true)) {
                    this.DeaClassificationCriteriaField = value;
                    this.RaisePropertyChanged("DeaClassificationCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisCriteria {
            get {
                return this.DiagnosisCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisCriteriaField, value) != true)) {
                    this.DiagnosisCriteriaField = value;
                    this.RaisePropertyChanged("DiagnosisCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrgCriteria {
            get {
                return this.DrgCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DrgCriteriaField, value) != true)) {
                    this.DrgCriteriaField = value;
                    this.RaisePropertyChanged("DrgCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrugNameCriteria {
            get {
                return this.DrugNameCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DrugNameCriteriaField, value) != true)) {
                    this.DrugNameCriteriaField = value;
                    this.RaisePropertyChanged("DrugNameCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EventDateOrder EventDateOrder {
            get {
                return this.EventDateOrderField;
            }
            set {
                if ((this.EventDateOrderField.Equals(value) != true)) {
                    this.EventDateOrderField = value;
                    this.RaisePropertyChanged("EventDateOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icd9ProcedureCodeCriteria {
            get {
                return this.Icd9ProcedureCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.Icd9ProcedureCodeCriteriaField, value) != true)) {
                    this.Icd9ProcedureCodeCriteriaField = value;
                    this.RaisePropertyChanged("Icd9ProcedureCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPcpRequiredCriteria {
            get {
                return this.IsPcpRequiredCriteriaField;
            }
            set {
                if ((this.IsPcpRequiredCriteriaField.Equals(value) != true)) {
                    this.IsPcpRequiredCriteriaField = value;
                    this.RaisePropertyChanged("IsPcpRequiredCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabLoincCodeCriteria {
            get {
                return this.LabLoincCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.LabLoincCodeCriteriaField, value) != true)) {
                    this.LabLoincCodeCriteriaField = value;
                    this.RaisePropertyChanged("LabLoincCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LabMetricId {
            get {
                return this.LabMetricIdField;
            }
            set {
                if ((this.LabMetricIdField.Equals(value) != true)) {
                    this.LabMetricIdField = value;
                    this.RaisePropertyChanged("LabMetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabNameCriteria {
            get {
                return this.LabNameCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.LabNameCriteriaField, value) != true)) {
                    this.LabNameCriteriaField = value;
                    this.RaisePropertyChanged("LabNameCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabValueExpressionCriteria {
            get {
                return this.LabValueExpressionCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.LabValueExpressionCriteriaField, value) != true)) {
                    this.LabValueExpressionCriteriaField = value;
                    this.RaisePropertyChanged("LabValueExpressionCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCodeCriteria {
            get {
                return this.LocationCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeCriteriaField, value) != true)) {
                    this.LocationCodeCriteriaField = value;
                    this.RaisePropertyChanged("LocationCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier MemberAgeDateQualifier {
            get {
                return this.MemberAgeDateQualifierField;
            }
            set {
                if ((this.MemberAgeDateQualifierField.Equals(value) != true)) {
                    this.MemberAgeDateQualifierField = value;
                    this.RaisePropertyChanged("MemberAgeDateQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberAgeMaximum {
            get {
                return this.MemberAgeMaximumField;
            }
            set {
                if ((this.MemberAgeMaximumField.Equals(value) != true)) {
                    this.MemberAgeMaximumField = value;
                    this.RaisePropertyChanged("MemberAgeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberAgeMinimum {
            get {
                return this.MemberAgeMinimumField;
            }
            set {
                if ((this.MemberAgeMinimumField.Equals(value) != true)) {
                    this.MemberAgeMinimumField = value;
                    this.RaisePropertyChanged("MemberAgeMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifierCodeCriteria {
            get {
                return this.ModifierCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierCodeCriteriaField, value) != true)) {
                    this.ModifierCodeCriteriaField = value;
                    this.RaisePropertyChanged("ModifierCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdcCodeCriteria {
            get {
                return this.NdcCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.NdcCodeCriteriaField, value) != true)) {
                    this.NdcCodeCriteriaField = value;
                    this.RaisePropertyChanged("NdcCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalDiagnosisCriteria {
            get {
                return this.PrincipalDiagnosisCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalDiagnosisCriteriaField, value) != true)) {
                    this.PrincipalDiagnosisCriteriaField = value;
                    this.RaisePropertyChanged("PrincipalDiagnosisCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCodeCriteria {
            get {
                return this.ProcedureCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeCriteriaField, value) != true)) {
                    this.ProcedureCodeCriteriaField = value;
                    this.RaisePropertyChanged("ProcedureCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderSpecialtyCriteria {
            get {
                return this.ProviderSpecialtyCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderSpecialtyCriteriaField, value) != true)) {
                    this.ProviderSpecialtyCriteriaField = value;
                    this.RaisePropertyChanged("ProviderSpecialtyCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueCodeCriteria {
            get {
                return this.RevenueCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueCodeCriteriaField, value) != true)) {
                    this.RevenueCodeCriteriaField = value;
                    this.RaisePropertyChanged("RevenueCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TherapeuticClassificationCriteria {
            get {
                return this.TherapeuticClassificationCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.TherapeuticClassificationCriteriaField, value) != true)) {
                    this.TherapeuticClassificationCriteriaField = value;
                    this.RaisePropertyChanged("TherapeuticClassificationCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseMemberAgeCriteria {
            get {
                return this.UseMemberAgeCriteriaField;
            }
            set {
                if ((this.UseMemberAgeCriteriaField.Equals(value) != true)) {
                    this.UseMemberAgeCriteriaField = value;
                    this.RaisePropertyChanged("UseMemberAgeCriteria");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberMetric", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics")]
    public partial class MemberMetric : Mercury.Server.Application.CoreObject {
        
        private bool AddedManuallyField;
        
        private System.DateTime EventDateField;
        
        private long MemberIdField;
        
        private Mercury.Server.Application.Metric MetricField;
        
        private long MetricIdField;
        
        private decimal MetricValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddedManually {
            get {
                return this.AddedManuallyField;
            }
            set {
                if ((this.AddedManuallyField.Equals(value) != true)) {
                    this.AddedManuallyField = value;
                    this.RaisePropertyChanged("AddedManually");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Metric Metric {
            get {
                return this.MetricField;
            }
            set {
                if ((object.ReferenceEquals(this.MetricField, value) != true)) {
                    this.MetricField = value;
                    this.RaisePropertyChanged("Metric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetricId {
            get {
                return this.MetricIdField;
            }
            set {
                if ((this.MetricIdField.Equals(value) != true)) {
                    this.MetricIdField = value;
                    this.RaisePropertyChanged("MetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MetricValue {
            get {
                return this.MetricValueField;
            }
            set {
                if ((this.MetricValueField.Equals(value) != true)) {
                    this.MetricValueField = value;
                    this.RaisePropertyChanged("MetricValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Member")]
    public partial class Member : Mercury.Server.Application.CoreObject {
        
        private System.DateTime BirthDateField;
        
        private long CitizenshipIdField;
        
        private System.Nullable<System.DateTime> DeathDateField;
        
        private Mercury.Server.Application.Entity EntityField;
        
        private long EntityIdField;
        
        private long EthnicityIdField;
        
        private string GenderField;
        
        private long LanguageIdField;
        
        private long MaritalStatusIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CitizenshipId {
            get {
                return this.CitizenshipIdField;
            }
            set {
                if ((this.CitizenshipIdField.Equals(value) != true)) {
                    this.CitizenshipIdField = value;
                    this.RaisePropertyChanged("CitizenshipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeathDate {
            get {
                return this.DeathDateField;
            }
            set {
                if ((this.DeathDateField.Equals(value) != true)) {
                    this.DeathDateField = value;
                    this.RaisePropertyChanged("DeathDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EthnicityId {
            get {
                return this.EthnicityIdField;
            }
            set {
                if ((this.EthnicityIdField.Equals(value) != true)) {
                    this.EthnicityIdField = value;
                    this.RaisePropertyChanged("EthnicityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaritalStatusId {
            get {
                return this.MaritalStatusIdField;
            }
            set {
                if ((this.MaritalStatusIdField.Equals(value) != true)) {
                    this.MaritalStatusIdField = value;
                    this.RaisePropertyChanged("MaritalStatusId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollment", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Member")]
    public partial class MemberEnrollment : Mercury.Server.Application.CoreObject {
        
        private System.DateTime EffectiveDateField;
        
        private long MemberIdField;
        
        private long ProgramIdField;
        
        private string ProgramMemberIdField;
        
        private long SponsorIdField;
        
        private long SubscriberIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramMemberId {
            get {
                return this.ProgramMemberIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramMemberIdField, value) != true)) {
                    this.ProgramMemberIdField = value;
                    this.RaisePropertyChanged("ProgramMemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SponsorId {
            get {
                return this.SponsorIdField;
            }
            set {
                if ((this.SponsorIdField.Equals(value) != true)) {
                    this.SponsorIdField = value;
                    this.RaisePropertyChanged("SponsorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SubscriberId {
            get {
                return this.SubscriberIdField;
            }
            set {
                if ((this.SubscriberIdField.Equals(value) != true)) {
                    this.SubscriberIdField = value;
                    this.RaisePropertyChanged("SubscriberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentCoverage", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Member")]
    public partial class MemberEnrollmentCoverage : Mercury.Server.Application.CoreObject {
        
        private long BenefitPlanIdField;
        
        private long CoverageLevelIdField;
        
        private long CoverageTypeIdField;
        
        private System.DateTime EffectiveDateField;
        
        private long MemberEnrollmentIdField;
        
        private string RateCodeField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BenefitPlanId {
            get {
                return this.BenefitPlanIdField;
            }
            set {
                if ((this.BenefitPlanIdField.Equals(value) != true)) {
                    this.BenefitPlanIdField = value;
                    this.RaisePropertyChanged("BenefitPlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CoverageLevelId {
            get {
                return this.CoverageLevelIdField;
            }
            set {
                if ((this.CoverageLevelIdField.Equals(value) != true)) {
                    this.CoverageLevelIdField = value;
                    this.RaisePropertyChanged("CoverageLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CoverageTypeId {
            get {
                return this.CoverageTypeIdField;
            }
            set {
                if ((this.CoverageTypeIdField.Equals(value) != true)) {
                    this.CoverageTypeIdField = value;
                    this.RaisePropertyChanged("CoverageTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberEnrollmentId {
            get {
                return this.MemberEnrollmentIdField;
            }
            set {
                if ((this.MemberEnrollmentIdField.Equals(value) != true)) {
                    this.MemberEnrollmentIdField = value;
                    this.RaisePropertyChanged("MemberEnrollmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentPcp", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Member")]
    public partial class MemberEnrollmentPcp : Mercury.Server.Application.CoreObject {
        
        private System.DateTime EffectiveDateField;
        
        private long MemberEnrollmentIdField;
        
        private long PcpProviderIdField;
        
        private long PcpServiceLocationIdField;
        
        private long ProviderAffiliationIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberEnrollmentId {
            get {
                return this.MemberEnrollmentIdField;
            }
            set {
                if ((this.MemberEnrollmentIdField.Equals(value) != true)) {
                    this.MemberEnrollmentIdField = value;
                    this.RaisePropertyChanged("MemberEnrollmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PcpProviderId {
            get {
                return this.PcpProviderIdField;
            }
            set {
                if ((this.PcpProviderIdField.Equals(value) != true)) {
                    this.PcpProviderIdField = value;
                    this.RaisePropertyChanged("PcpProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PcpServiceLocationId {
            get {
                return this.PcpServiceLocationIdField;
            }
            set {
                if ((this.PcpServiceLocationIdField.Equals(value) != true)) {
                    this.PcpServiceLocationIdField = value;
                    this.RaisePropertyChanged("PcpServiceLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderAffiliationId {
            get {
                return this.ProviderAffiliationIdField;
            }
            set {
                if ((this.ProviderAffiliationIdField.Equals(value) != true)) {
                    this.ProviderAffiliationIdField = value;
                    this.RaisePropertyChanged("ProviderAffiliationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentTplCob", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Member")]
    public partial class MemberEnrollmentTplCob : Mercury.Server.Application.CoreObject {
        
        private long BenefitPlanIdField;
        
        private System.DateTime EffectiveDateField;
        
        private long InsurerIdField;
        
        private long MemberIdField;
        
        private long ProgramIdField;
        
        private string ProgramMemberIdField;
        
        private long SponsorIdField;
        
        private long SubscriberIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BenefitPlanId {
            get {
                return this.BenefitPlanIdField;
            }
            set {
                if ((this.BenefitPlanIdField.Equals(value) != true)) {
                    this.BenefitPlanIdField = value;
                    this.RaisePropertyChanged("BenefitPlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InsurerId {
            get {
                return this.InsurerIdField;
            }
            set {
                if ((this.InsurerIdField.Equals(value) != true)) {
                    this.InsurerIdField = value;
                    this.RaisePropertyChanged("InsurerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramMemberId {
            get {
                return this.ProgramMemberIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramMemberIdField, value) != true)) {
                    this.ProgramMemberIdField = value;
                    this.RaisePropertyChanged("ProgramMemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SponsorId {
            get {
                return this.SponsorIdField;
            }
            set {
                if ((this.SponsorIdField.Equals(value) != true)) {
                    this.SponsorIdField = value;
                    this.RaisePropertyChanged("SponsorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SubscriberId {
            get {
                return this.SubscriberIdField;
            }
            set {
                if ((this.SubscriberIdField.Equals(value) != true)) {
                    this.SubscriberIdField = value;
                    this.RaisePropertyChanged("SubscriberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberRelationship", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Member")]
    public partial class MemberRelationship : Mercury.Server.Application.CoreObject {
        
        private System.DateTime EffectiveDateField;
        
        private string FamilyIdField;
        
        private long MemberIdField;
        
        private System.DateTime RelatedMemberBirthDateField;
        
        private string RelatedMemberCurrentAgeTextField;
        
        private string RelatedMemberGenderField;
        
        private long RelatedMemberIdField;
        
        private string RelatedMemberNameField;
        
        private long RelationshipIdField;
        
        private string RelationshipNameField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyId {
            get {
                return this.FamilyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyIdField, value) != true)) {
                    this.FamilyIdField = value;
                    this.RaisePropertyChanged("FamilyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RelatedMemberBirthDate {
            get {
                return this.RelatedMemberBirthDateField;
            }
            set {
                if ((this.RelatedMemberBirthDateField.Equals(value) != true)) {
                    this.RelatedMemberBirthDateField = value;
                    this.RaisePropertyChanged("RelatedMemberBirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedMemberCurrentAgeText {
            get {
                return this.RelatedMemberCurrentAgeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedMemberCurrentAgeTextField, value) != true)) {
                    this.RelatedMemberCurrentAgeTextField = value;
                    this.RaisePropertyChanged("RelatedMemberCurrentAgeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedMemberGender {
            get {
                return this.RelatedMemberGenderField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedMemberGenderField, value) != true)) {
                    this.RelatedMemberGenderField = value;
                    this.RaisePropertyChanged("RelatedMemberGender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedMemberId {
            get {
                return this.RelatedMemberIdField;
            }
            set {
                if ((this.RelatedMemberIdField.Equals(value) != true)) {
                    this.RelatedMemberIdField = value;
                    this.RaisePropertyChanged("RelatedMemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedMemberName {
            get {
                return this.RelatedMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedMemberNameField, value) != true)) {
                    this.RelatedMemberNameField = value;
                    this.RaisePropertyChanged("RelatedMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelationshipId {
            get {
                return this.RelationshipIdField;
            }
            set {
                if ((this.RelationshipIdField.Equals(value) != true)) {
                    this.RelationshipIdField = value;
                    this.RaisePropertyChanged("RelationshipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationshipName {
            get {
                return this.RelationshipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipNameField, value) != true)) {
                    this.RelationshipNameField = value;
                    this.RaisePropertyChanged("RelationshipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembership", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population")]
    public partial class PopulationMembership : Mercury.Server.Application.CoreObject {
        
        private System.DateTime AnchorDateField;
        
        private System.DateTime EffectiveDateField;
        
        private System.Nullable<System.DateTime> IdentifyingEventDateField;
        
        private long IdentifyingEventMemberServiceIdField;
        
        private long IdentifyingEventServiceIdField;
        
        private long MemberIdField;
        
        private long PopulationIdField;
        
        private System.Nullable<System.DateTime> TerminatingEventDateField;
        
        private long TerminatingEventMemberServiceIdField;
        
        private long TerminatingEventServiceIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnchorDate {
            get {
                return this.AnchorDateField;
            }
            set {
                if ((this.AnchorDateField.Equals(value) != true)) {
                    this.AnchorDateField = value;
                    this.RaisePropertyChanged("AnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IdentifyingEventDate {
            get {
                return this.IdentifyingEventDateField;
            }
            set {
                if ((this.IdentifyingEventDateField.Equals(value) != true)) {
                    this.IdentifyingEventDateField = value;
                    this.RaisePropertyChanged("IdentifyingEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdentifyingEventMemberServiceId {
            get {
                return this.IdentifyingEventMemberServiceIdField;
            }
            set {
                if ((this.IdentifyingEventMemberServiceIdField.Equals(value) != true)) {
                    this.IdentifyingEventMemberServiceIdField = value;
                    this.RaisePropertyChanged("IdentifyingEventMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdentifyingEventServiceId {
            get {
                return this.IdentifyingEventServiceIdField;
            }
            set {
                if ((this.IdentifyingEventServiceIdField.Equals(value) != true)) {
                    this.IdentifyingEventServiceIdField = value;
                    this.RaisePropertyChanged("IdentifyingEventServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminatingEventDate {
            get {
                return this.TerminatingEventDateField;
            }
            set {
                if ((this.TerminatingEventDateField.Equals(value) != true)) {
                    this.TerminatingEventDateField = value;
                    this.RaisePropertyChanged("TerminatingEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TerminatingEventMemberServiceId {
            get {
                return this.TerminatingEventMemberServiceIdField;
            }
            set {
                if ((this.TerminatingEventMemberServiceIdField.Equals(value) != true)) {
                    this.TerminatingEventMemberServiceIdField = value;
                    this.RaisePropertyChanged("TerminatingEventMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TerminatingEventServiceId {
            get {
                return this.TerminatingEventServiceIdField;
            }
            set {
                if ((this.TerminatingEventServiceIdField.Equals(value) != true)) {
                    this.TerminatingEventServiceIdField = value;
                    this.RaisePropertyChanged("TerminatingEventServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueSummary", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work.DataViews")]
    public partial class WorkQueueSummary : Mercury.Server.Application.CoreObject {
        
        private int AvailableItemsCountField;
        
        private int CompletedItemsCountField;
        
        private System.Nullable<System.DateTime> FirstWorkedTimeField;
        
        private System.Nullable<System.DateTime> LastWorkedTimeField;
        
        private int OverdueItemsCountField;
        
        private int TotalItemsCountField;
        
        private int UsersInQueueCountField;
        
        private int WarningItemsCountField;
        
        private int WorkedItemsCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvailableItemsCount {
            get {
                return this.AvailableItemsCountField;
            }
            set {
                if ((this.AvailableItemsCountField.Equals(value) != true)) {
                    this.AvailableItemsCountField = value;
                    this.RaisePropertyChanged("AvailableItemsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletedItemsCount {
            get {
                return this.CompletedItemsCountField;
            }
            set {
                if ((this.CompletedItemsCountField.Equals(value) != true)) {
                    this.CompletedItemsCountField = value;
                    this.RaisePropertyChanged("CompletedItemsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstWorkedTime {
            get {
                return this.FirstWorkedTimeField;
            }
            set {
                if ((this.FirstWorkedTimeField.Equals(value) != true)) {
                    this.FirstWorkedTimeField = value;
                    this.RaisePropertyChanged("FirstWorkedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastWorkedTime {
            get {
                return this.LastWorkedTimeField;
            }
            set {
                if ((this.LastWorkedTimeField.Equals(value) != true)) {
                    this.LastWorkedTimeField = value;
                    this.RaisePropertyChanged("LastWorkedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverdueItemsCount {
            get {
                return this.OverdueItemsCountField;
            }
            set {
                if ((this.OverdueItemsCountField.Equals(value) != true)) {
                    this.OverdueItemsCountField = value;
                    this.RaisePropertyChanged("OverdueItemsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItemsCount {
            get {
                return this.TotalItemsCountField;
            }
            set {
                if ((this.TotalItemsCountField.Equals(value) != true)) {
                    this.TotalItemsCountField = value;
                    this.RaisePropertyChanged("TotalItemsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsersInQueueCount {
            get {
                return this.UsersInQueueCountField;
            }
            set {
                if ((this.UsersInQueueCountField.Equals(value) != true)) {
                    this.UsersInQueueCountField = value;
                    this.RaisePropertyChanged("UsersInQueueCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarningItemsCount {
            get {
                return this.WarningItemsCountField;
            }
            set {
                if ((this.WarningItemsCountField.Equals(value) != true)) {
                    this.WarningItemsCountField = value;
                    this.RaisePropertyChanged("WarningItemsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkedItemsCount {
            get {
                return this.WorkedItemsCountField;
            }
            set {
                if ((this.WorkedItemsCountField.Equals(value) != true)) {
                    this.WorkedItemsCountField = value;
                    this.RaisePropertyChanged("WorkedItemsCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipTriggerEventDataView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.DataViews")]
    public partial class PopulationMembershipTriggerEventDataView : Mercury.Server.Application.CoreObject {
        
        private string ActionDescriptionField;
        
        private long AuthorizedServiceIdField;
        
        private string AuthorizedServiceNameField;
        
        private System.DateTime EventDateField;
        
        private Mercury.Server.Application.PopulationTriggerEventType EventTypeField;
        
        private bool IsTriggerDeletedField;
        
        private long MemberAuthorizedServiceIdField;
        
        private long MemberMetricIdField;
        
        private long MemberServiceIdField;
        
        private long MetricIdField;
        
        private string MetricNameField;
        
        private long PopulationMembershipIdField;
        
        private long PopulationMembershipTriggerEventIdField;
        
        private long PopulationTriggerEventIdField;
        
        private long ProblemStatementIdField;
        
        private long ServiceIdField;
        
        private string ServiceNameField;
        
        private System.DateTime TriggerDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionDescription {
            get {
                return this.ActionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionDescriptionField, value) != true)) {
                    this.ActionDescriptionField = value;
                    this.RaisePropertyChanged("ActionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizedServiceId {
            get {
                return this.AuthorizedServiceIdField;
            }
            set {
                if ((this.AuthorizedServiceIdField.Equals(value) != true)) {
                    this.AuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("AuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizedServiceName {
            get {
                return this.AuthorizedServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizedServiceNameField, value) != true)) {
                    this.AuthorizedServiceNameField = value;
                    this.RaisePropertyChanged("AuthorizedServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationTriggerEventType EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTriggerDeleted {
            get {
                return this.IsTriggerDeletedField;
            }
            set {
                if ((this.IsTriggerDeletedField.Equals(value) != true)) {
                    this.IsTriggerDeletedField = value;
                    this.RaisePropertyChanged("IsTriggerDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberAuthorizedServiceId {
            get {
                return this.MemberAuthorizedServiceIdField;
            }
            set {
                if ((this.MemberAuthorizedServiceIdField.Equals(value) != true)) {
                    this.MemberAuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("MemberAuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberMetricId {
            get {
                return this.MemberMetricIdField;
            }
            set {
                if ((this.MemberMetricIdField.Equals(value) != true)) {
                    this.MemberMetricIdField = value;
                    this.RaisePropertyChanged("MemberMetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberServiceId {
            get {
                return this.MemberServiceIdField;
            }
            set {
                if ((this.MemberServiceIdField.Equals(value) != true)) {
                    this.MemberServiceIdField = value;
                    this.RaisePropertyChanged("MemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetricId {
            get {
                return this.MetricIdField;
            }
            set {
                if ((this.MetricIdField.Equals(value) != true)) {
                    this.MetricIdField = value;
                    this.RaisePropertyChanged("MetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetricName {
            get {
                return this.MetricNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MetricNameField, value) != true)) {
                    this.MetricNameField = value;
                    this.RaisePropertyChanged("MetricName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipId {
            get {
                return this.PopulationMembershipIdField;
            }
            set {
                if ((this.PopulationMembershipIdField.Equals(value) != true)) {
                    this.PopulationMembershipIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipTriggerEventId {
            get {
                return this.PopulationMembershipTriggerEventIdField;
            }
            set {
                if ((this.PopulationMembershipTriggerEventIdField.Equals(value) != true)) {
                    this.PopulationMembershipTriggerEventIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipTriggerEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationTriggerEventId {
            get {
                return this.PopulationTriggerEventIdField;
            }
            set {
                if ((this.PopulationTriggerEventIdField.Equals(value) != true)) {
                    this.PopulationTriggerEventIdField = value;
                    this.RaisePropertyChanged("PopulationTriggerEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemStatementId {
            get {
                return this.ProblemStatementIdField;
            }
            set {
                if ((this.ProblemStatementIdField.Equals(value) != true)) {
                    this.ProblemStatementIdField = value;
                    this.RaisePropertyChanged("ProblemStatementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TriggerDate {
            get {
                return this.TriggerDateField;
            }
            set {
                if ((this.TriggerDateField.Equals(value) != true)) {
                    this.TriggerDateField = value;
                    this.RaisePropertyChanged("TriggerDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Claim", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Claims")]
    public partial class Claim : Mercury.Server.Application.CoreObject {
        
        private System.Nullable<System.DateTime> AdmissionDateField;
        
        private string BillTypeField;
        
        private decimal BilledAmountField;
        
        private System.DateTime ClaimFromDateField;
        
        private string ClaimNumberField;
        
        private System.DateTime ClaimThruDateField;
        
        private Mercury.Server.Application.ClaimType ClaimTypeField;
        
        private string DenialReasonField;
        
        private long MemberIdField;
        
        private decimal PaidAmountField;
        
        private System.Nullable<System.DateTime> PaidDateField;
        
        private long PayToProviderAffiliationIdField;
        
        private long PayToProviderIdField;
        
        private string PrimaryDiagnosisCodeField;
        
        private string PrimaryDiagnosisDescriptionField;
        
        private long ServiceProviderIdField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AdmissionDate {
            get {
                return this.AdmissionDateField;
            }
            set {
                if ((this.AdmissionDateField.Equals(value) != true)) {
                    this.AdmissionDateField = value;
                    this.RaisePropertyChanged("AdmissionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillType {
            get {
                return this.BillTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillTypeField, value) != true)) {
                    this.BillTypeField = value;
                    this.RaisePropertyChanged("BillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BilledAmount {
            get {
                return this.BilledAmountField;
            }
            set {
                if ((this.BilledAmountField.Equals(value) != true)) {
                    this.BilledAmountField = value;
                    this.RaisePropertyChanged("BilledAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimFromDate {
            get {
                return this.ClaimFromDateField;
            }
            set {
                if ((this.ClaimFromDateField.Equals(value) != true)) {
                    this.ClaimFromDateField = value;
                    this.RaisePropertyChanged("ClaimFromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimNumber {
            get {
                return this.ClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimNumberField, value) != true)) {
                    this.ClaimNumberField = value;
                    this.RaisePropertyChanged("ClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimThruDate {
            get {
                return this.ClaimThruDateField;
            }
            set {
                if ((this.ClaimThruDateField.Equals(value) != true)) {
                    this.ClaimThruDateField = value;
                    this.RaisePropertyChanged("ClaimThruDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ClaimType ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((this.ClaimTypeField.Equals(value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenialReason {
            get {
                return this.DenialReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.DenialReasonField, value) != true)) {
                    this.DenialReasonField = value;
                    this.RaisePropertyChanged("DenialReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PaidDate {
            get {
                return this.PaidDateField;
            }
            set {
                if ((this.PaidDateField.Equals(value) != true)) {
                    this.PaidDateField = value;
                    this.RaisePropertyChanged("PaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PayToProviderAffiliationId {
            get {
                return this.PayToProviderAffiliationIdField;
            }
            set {
                if ((this.PayToProviderAffiliationIdField.Equals(value) != true)) {
                    this.PayToProviderAffiliationIdField = value;
                    this.RaisePropertyChanged("PayToProviderAffiliationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PayToProviderId {
            get {
                return this.PayToProviderIdField;
            }
            set {
                if ((this.PayToProviderIdField.Equals(value) != true)) {
                    this.PayToProviderIdField = value;
                    this.RaisePropertyChanged("PayToProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryDiagnosisCode {
            get {
                return this.PrimaryDiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryDiagnosisCodeField, value) != true)) {
                    this.PrimaryDiagnosisCodeField = value;
                    this.RaisePropertyChanged("PrimaryDiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryDiagnosisDescription {
            get {
                return this.PrimaryDiagnosisDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryDiagnosisDescriptionField, value) != true)) {
                    this.PrimaryDiagnosisDescriptionField = value;
                    this.RaisePropertyChanged("PrimaryDiagnosisDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceProviderId {
            get {
                return this.ServiceProviderIdField;
            }
            set {
                if ((this.ServiceProviderIdField.Equals(value) != true)) {
                    this.ServiceProviderIdField = value;
                    this.RaisePropertyChanged("ServiceProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimLine", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Claims")]
    public partial class ClaimLine : Mercury.Server.Application.CoreObject {
        
        private decimal BilledAmountField;
        
        private long ClaimIdField;
        
        private string DenialReasonField;
        
        private string DiagnosisCode1Field;
        
        private string DiagnosisDescription1Field;
        
        private int LineNumberField;
        
        private string LocationCodeField;
        
        private string ModifierCode1Field;
        
        private decimal PaidAmountField;
        
        private string RevenueCodeField;
        
        private string RevenueDescriptionField;
        
        private string ServiceCodeField;
        
        private System.DateTime ServiceDateFromField;
        
        private System.DateTime ServiceDateThruField;
        
        private string ServiceDescriptionField;
        
        private string StatusField;
        
        private decimal UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BilledAmount {
            get {
                return this.BilledAmountField;
            }
            set {
                if ((this.BilledAmountField.Equals(value) != true)) {
                    this.BilledAmountField = value;
                    this.RaisePropertyChanged("BilledAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClaimId {
            get {
                return this.ClaimIdField;
            }
            set {
                if ((this.ClaimIdField.Equals(value) != true)) {
                    this.ClaimIdField = value;
                    this.RaisePropertyChanged("ClaimId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenialReason {
            get {
                return this.DenialReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.DenialReasonField, value) != true)) {
                    this.DenialReasonField = value;
                    this.RaisePropertyChanged("DenialReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisCode1 {
            get {
                return this.DiagnosisCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisCode1Field, value) != true)) {
                    this.DiagnosisCode1Field = value;
                    this.RaisePropertyChanged("DiagnosisCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisDescription1 {
            get {
                return this.DiagnosisDescription1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisDescription1Field, value) != true)) {
                    this.DiagnosisDescription1Field = value;
                    this.RaisePropertyChanged("DiagnosisDescription1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineNumber {
            get {
                return this.LineNumberField;
            }
            set {
                if ((this.LineNumberField.Equals(value) != true)) {
                    this.LineNumberField = value;
                    this.RaisePropertyChanged("LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifierCode1 {
            get {
                return this.ModifierCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierCode1Field, value) != true)) {
                    this.ModifierCode1Field = value;
                    this.RaisePropertyChanged("ModifierCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueCode {
            get {
                return this.RevenueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueCodeField, value) != true)) {
                    this.RevenueCodeField = value;
                    this.RaisePropertyChanged("RevenueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueDescription {
            get {
                return this.RevenueDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueDescriptionField, value) != true)) {
                    this.RevenueDescriptionField = value;
                    this.RaisePropertyChanged("RevenueDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCode {
            get {
                return this.ServiceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCodeField, value) != true)) {
                    this.ServiceCodeField = value;
                    this.RaisePropertyChanged("ServiceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ServiceDateFrom {
            get {
                return this.ServiceDateFromField;
            }
            set {
                if ((this.ServiceDateFromField.Equals(value) != true)) {
                    this.ServiceDateFromField = value;
                    this.RaisePropertyChanged("ServiceDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ServiceDateThru {
            get {
                return this.ServiceDateThruField;
            }
            set {
                if ((this.ServiceDateThruField.Equals(value) != true)) {
                    this.ServiceDateThruField = value;
                    this.RaisePropertyChanged("ServiceDateThru");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceDescription {
            get {
                return this.ServiceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceDescriptionField, value) != true)) {
                    this.ServiceDescriptionField = value;
                    this.RaisePropertyChanged("ServiceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityAuthority", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Security")]
    public partial class SecurityAuthority : Mercury.Server.Application.CoreObject {
        
        private string AgentNameField;
        
        private string AgentPasswordField;
        
        private string AssociateContextField;
        
        private string ConfigurationSectionField;
        
        private string DomainField;
        
        private string MemberContextField;
        
        private string ProtocolField;
        
        private string ProviderAssemblyNameField;
        
        private string ProviderAssemblyPathField;
        
        private string ProviderClassNameField;
        
        private string ProviderContextField;
        
        private string ProviderNamespaceField;
        
        private Mercury.Server.Application.SecurityAuthorityType SecurityAuthorityTypeField;
        
        private string ServerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentPassword {
            get {
                return this.AgentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentPasswordField, value) != true)) {
                    this.AgentPasswordField = value;
                    this.RaisePropertyChanged("AgentPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociateContext {
            get {
                return this.AssociateContextField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateContextField, value) != true)) {
                    this.AssociateContextField = value;
                    this.RaisePropertyChanged("AssociateContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigurationSection {
            get {
                return this.ConfigurationSectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationSectionField, value) != true)) {
                    this.ConfigurationSectionField = value;
                    this.RaisePropertyChanged("ConfigurationSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberContext {
            get {
                return this.MemberContextField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberContextField, value) != true)) {
                    this.MemberContextField = value;
                    this.RaisePropertyChanged("MemberContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderAssemblyName {
            get {
                return this.ProviderAssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderAssemblyNameField, value) != true)) {
                    this.ProviderAssemblyNameField = value;
                    this.RaisePropertyChanged("ProviderAssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderAssemblyPath {
            get {
                return this.ProviderAssemblyPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderAssemblyPathField, value) != true)) {
                    this.ProviderAssemblyPathField = value;
                    this.RaisePropertyChanged("ProviderAssemblyPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderClassName {
            get {
                return this.ProviderClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderClassNameField, value) != true)) {
                    this.ProviderClassNameField = value;
                    this.RaisePropertyChanged("ProviderClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderContext {
            get {
                return this.ProviderContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderContextField, value) != true)) {
                    this.ProviderContextField = value;
                    this.RaisePropertyChanged("ProviderContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderNamespace {
            get {
                return this.ProviderNamespaceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNamespaceField, value) != true)) {
                    this.ProviderNamespaceField = value;
                    this.RaisePropertyChanged("ProviderNamespace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.SecurityAuthorityType SecurityAuthorityType {
            get {
                return this.SecurityAuthorityTypeField;
            }
            set {
                if ((this.SecurityAuthorityTypeField.Equals(value) != true)) {
                    this.SecurityAuthorityTypeField = value;
                    this.RaisePropertyChanged("SecurityAuthorityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Security")]
    public partial class Permission : Mercury.Server.Application.CoreObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentAccess", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Security")]
    public partial class EnvironmentAccess : Mercury.Server.Application.CoreObject {
        
        private long EnvironmentIdField;
        
        private bool IsDeniedField;
        
        private bool IsGrantedField;
        
        private long SecurityAuthorityIdField;
        
        private string SecurityGroupIdField;
        
        private string SecurityGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EnvironmentId {
            get {
                return this.EnvironmentIdField;
            }
            set {
                if ((this.EnvironmentIdField.Equals(value) != true)) {
                    this.EnvironmentIdField = value;
                    this.RaisePropertyChanged("EnvironmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDenied {
            get {
                return this.IsDeniedField;
            }
            set {
                if ((this.IsDeniedField.Equals(value) != true)) {
                    this.IsDeniedField = value;
                    this.RaisePropertyChanged("IsDenied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGranted {
            get {
                return this.IsGrantedField;
            }
            set {
                if ((this.IsGrantedField.Equals(value) != true)) {
                    this.IsGrantedField = value;
                    this.RaisePropertyChanged("IsGranted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupId {
            get {
                return this.SecurityGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupIdField, value) != true)) {
                    this.SecurityGroupIdField = value;
                    this.RaisePropertyChanged("SecurityGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupName {
            get {
                return this.SecurityGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupNameField, value) != true)) {
                    this.SecurityGroupNameField = value;
                    this.RaisePropertyChanged("SecurityGroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sponsor", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Sponsor")]
    public partial class Sponsor : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Entity EntityField;
        
        private long EntityIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Environment", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Environment")]
    public partial class Environment : Mercury.Server.Application.CoreObject {
        
        private string ConfidentialityStatementField;
        
        private string EnvironmentTagField;
        
        private long EnvironmentTypeIdField;
        
        private Mercury.Server.Application.SqlConfiguration SqlConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfidentialityStatement {
            get {
                return this.ConfidentialityStatementField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfidentialityStatementField, value) != true)) {
                    this.ConfidentialityStatementField = value;
                    this.RaisePropertyChanged("ConfidentialityStatement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnvironmentTag {
            get {
                return this.EnvironmentTagField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvironmentTagField, value) != true)) {
                    this.EnvironmentTagField = value;
                    this.RaisePropertyChanged("EnvironmentTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EnvironmentTypeId {
            get {
                return this.EnvironmentTypeIdField;
            }
            set {
                if ((this.EnvironmentTypeIdField.Equals(value) != true)) {
                    this.EnvironmentTypeIdField = value;
                    this.RaisePropertyChanged("EnvironmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.SqlConfiguration SqlConfiguration {
            get {
                return this.SqlConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlConfigurationField, value) != true)) {
                    this.SqlConfigurationField = value;
                    this.RaisePropertyChanged("SqlConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationCriteriaDemographic", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Criteria")]
    public partial class PopulationCriteriaDemographic : Mercury.Server.Application.CoreObject {
        
        private int AgeMaximumField;
        
        private int AgeMinimumField;
        
        private long EthnicityIdField;
        
        private Mercury.Server.Application.Gender GenderField;
        
        private long PopulationIdField;
        
        private bool UseAgeCriteriaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMaximum {
            get {
                return this.AgeMaximumField;
            }
            set {
                if ((this.AgeMaximumField.Equals(value) != true)) {
                    this.AgeMaximumField = value;
                    this.RaisePropertyChanged("AgeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMinimum {
            get {
                return this.AgeMinimumField;
            }
            set {
                if ((this.AgeMinimumField.Equals(value) != true)) {
                    this.AgeMinimumField = value;
                    this.RaisePropertyChanged("AgeMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EthnicityId {
            get {
                return this.EthnicityIdField;
            }
            set {
                if ((this.EthnicityIdField.Equals(value) != true)) {
                    this.EthnicityIdField = value;
                    this.RaisePropertyChanged("EthnicityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAgeCriteria {
            get {
                return this.UseAgeCriteriaField;
            }
            set {
                if ((this.UseAgeCriteriaField.Equals(value) != true)) {
                    this.UseAgeCriteriaField = value;
                    this.RaisePropertyChanged("UseAgeCriteria");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationCriteriaEnrollment", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Criteria")]
    public partial class PopulationCriteriaEnrollment : Mercury.Server.Application.CoreObject {
        
        private long BenefitPlanIdField;
        
        private long InsurerIdField;
        
        private long PopulationIdField;
        
        private long ProgramIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BenefitPlanId {
            get {
                return this.BenefitPlanIdField;
            }
            set {
                if ((this.BenefitPlanIdField.Equals(value) != true)) {
                    this.BenefitPlanIdField = value;
                    this.RaisePropertyChanged("BenefitPlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InsurerId {
            get {
                return this.InsurerIdField;
            }
            set {
                if ((this.InsurerIdField.Equals(value) != true)) {
                    this.InsurerIdField = value;
                    this.RaisePropertyChanged("InsurerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationCriteriaEvent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Criteria")]
    public partial class PopulationCriteriaEvent : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.PopulationCriteriaEventType EventTypeField;
        
        private long PopulationIdField;
        
        private long ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationCriteriaEventType EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationCriteriaGeographic", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Criteria")]
    public partial class PopulationCriteriaGeographic : Mercury.Server.Application.CoreObject {
        
        private string CityField;
        
        private string CountyField;
        
        private long PopulationIdField;
        
        private string StateField;
        
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationServiceEvent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Events")]
    public partial class PopulationServiceEvent : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.PopulationServiceEventAnchorDate AnchorDateField;
        
        private int AnchorDateValueField;
        
        private long ExclusionServiceIdField;
        
        private long PopulationIdField;
        
        private bool ReoccurringField;
        
        private Mercury.Server.Application.DateQualifier ScheduleDateQualifierField;
        
        private int ScheduleDateValueField;
        
        private long ServiceIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEventThreshold> ThresholdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationServiceEventAnchorDate AnchorDate {
            get {
                return this.AnchorDateField;
            }
            set {
                if ((this.AnchorDateField.Equals(value) != true)) {
                    this.AnchorDateField = value;
                    this.RaisePropertyChanged("AnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnchorDateValue {
            get {
                return this.AnchorDateValueField;
            }
            set {
                if ((this.AnchorDateValueField.Equals(value) != true)) {
                    this.AnchorDateValueField = value;
                    this.RaisePropertyChanged("AnchorDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ExclusionServiceId {
            get {
                return this.ExclusionServiceIdField;
            }
            set {
                if ((this.ExclusionServiceIdField.Equals(value) != true)) {
                    this.ExclusionServiceIdField = value;
                    this.RaisePropertyChanged("ExclusionServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reoccurring {
            get {
                return this.ReoccurringField;
            }
            set {
                if ((this.ReoccurringField.Equals(value) != true)) {
                    this.ReoccurringField = value;
                    this.RaisePropertyChanged("Reoccurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ScheduleDateQualifier {
            get {
                return this.ScheduleDateQualifierField;
            }
            set {
                if ((this.ScheduleDateQualifierField.Equals(value) != true)) {
                    this.ScheduleDateQualifierField = value;
                    this.RaisePropertyChanged("ScheduleDateQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleDateValue {
            get {
                return this.ScheduleDateValueField;
            }
            set {
                if ((this.ScheduleDateValueField.Equals(value) != true)) {
                    this.ScheduleDateValueField = value;
                    this.RaisePropertyChanged("ScheduleDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEventThreshold> Thresholds {
            get {
                return this.ThresholdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThresholdsField, value) != true)) {
                    this.ThresholdsField = value;
                    this.RaisePropertyChanged("Thresholds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationServiceEventThreshold", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Events")]
    public partial class PopulationServiceEventThreshold : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Action ActionField;
        
        private long PopulationIdField;
        
        private long PopulationServiceEventIdField;
        
        private Mercury.Server.Application.DateQualifier RelativeDateQualifierField;
        
        private int RelativeDateValueField;
        
        private Mercury.Server.Application.PopulationServiceEventStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Action Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationServiceEventId {
            get {
                return this.PopulationServiceEventIdField;
            }
            set {
                if ((this.PopulationServiceEventIdField.Equals(value) != true)) {
                    this.PopulationServiceEventIdField = value;
                    this.RaisePropertyChanged("PopulationServiceEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier RelativeDateQualifier {
            get {
                return this.RelativeDateQualifierField;
            }
            set {
                if ((this.RelativeDateQualifierField.Equals(value) != true)) {
                    this.RelativeDateQualifierField = value;
                    this.RaisePropertyChanged("RelativeDateQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelativeDateValue {
            get {
                return this.RelativeDateValueField;
            }
            set {
                if ((this.RelativeDateValueField.Equals(value) != true)) {
                    this.RelativeDateValueField = value;
                    this.RaisePropertyChanged("RelativeDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationServiceEventStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Action", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action")]
    public partial class Action : Mercury.Server.Application.CoreObject {
        
        private System.Collections.Generic.Dictionary<string, Mercury.Server.Application.ActionParameter> ActionParametersField;
        
        private string DescribingParameterNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, Mercury.Server.Application.ActionParameter> ActionParameters {
            get {
                return this.ActionParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionParametersField, value) != true)) {
                    this.ActionParametersField = value;
                    this.RaisePropertyChanged("ActionParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescribingParameterName {
            get {
                return this.DescribingParameterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DescribingParameterNameField, value) != true)) {
                    this.DescribingParameterNameField = value;
                    this.RaisePropertyChanged("DescribingParameterName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationActivityEvent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Events")]
    public partial class PopulationActivityEvent : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Action ActionField;
        
        private Mercury.Server.Application.PopulationActivityEventAnchorDate AnchorDateField;
        
        private Mercury.Server.Application.PopulationActivityPerformActionDateType PerformActionDateTypeField;
        
        private long PopulationIdField;
        
        private bool ReoccurringField;
        
        private Mercury.Server.Application.DateQualifier ScheduleQualifierField;
        
        private Mercury.Server.Application.PopulationActivityScheduleType ScheduleTypeField;
        
        private int ScheduleValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Action Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationActivityEventAnchorDate AnchorDate {
            get {
                return this.AnchorDateField;
            }
            set {
                if ((this.AnchorDateField.Equals(value) != true)) {
                    this.AnchorDateField = value;
                    this.RaisePropertyChanged("AnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationActivityPerformActionDateType PerformActionDateType {
            get {
                return this.PerformActionDateTypeField;
            }
            set {
                if ((this.PerformActionDateTypeField.Equals(value) != true)) {
                    this.PerformActionDateTypeField = value;
                    this.RaisePropertyChanged("PerformActionDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reoccurring {
            get {
                return this.ReoccurringField;
            }
            set {
                if ((this.ReoccurringField.Equals(value) != true)) {
                    this.ReoccurringField = value;
                    this.RaisePropertyChanged("Reoccurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ScheduleQualifier {
            get {
                return this.ScheduleQualifierField;
            }
            set {
                if ((this.ScheduleQualifierField.Equals(value) != true)) {
                    this.ScheduleQualifierField = value;
                    this.RaisePropertyChanged("ScheduleQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationActivityScheduleType ScheduleType {
            get {
                return this.ScheduleTypeField;
            }
            set {
                if ((this.ScheduleTypeField.Equals(value) != true)) {
                    this.ScheduleTypeField = value;
                    this.RaisePropertyChanged("ScheduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleValue {
            get {
                return this.ScheduleValueField;
            }
            set {
                if ((this.ScheduleValueField.Equals(value) != true)) {
                    this.ScheduleValueField = value;
                    this.RaisePropertyChanged("ScheduleValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipServiceEvent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Events")]
    public partial class PopulationMembershipServiceEvent : Mercury.Server.Application.CoreObject {
        
        private System.Nullable<System.DateTime> EventDateField;
        
        private System.DateTime ExpectedEventDateField;
        
        private long MemberServiceIdField;
        
        private System.Nullable<System.DateTime> NextThresholdDateField;
        
        private System.Nullable<System.DateTime> ParentMembershipServiceEventDateField;
        
        private long ParentMembershipServiceEventIdField;
        
        private long PopulationMembershipIdField;
        
        private long PopulationServiceEventIdField;
        
        private System.Nullable<System.DateTime> PreviousEventDateField;
        
        private System.Nullable<long> PreviousMemberServiceIdField;
        
        private System.Nullable<System.DateTime> PreviousThresholdDateField;
        
        private System.Nullable<long> PreviousThresholdIdField;
        
        private Mercury.Server.Application.PopulationServiceEventStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpectedEventDate {
            get {
                return this.ExpectedEventDateField;
            }
            set {
                if ((this.ExpectedEventDateField.Equals(value) != true)) {
                    this.ExpectedEventDateField = value;
                    this.RaisePropertyChanged("ExpectedEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberServiceId {
            get {
                return this.MemberServiceIdField;
            }
            set {
                if ((this.MemberServiceIdField.Equals(value) != true)) {
                    this.MemberServiceIdField = value;
                    this.RaisePropertyChanged("MemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextThresholdDate {
            get {
                return this.NextThresholdDateField;
            }
            set {
                if ((this.NextThresholdDateField.Equals(value) != true)) {
                    this.NextThresholdDateField = value;
                    this.RaisePropertyChanged("NextThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ParentMembershipServiceEventDate {
            get {
                return this.ParentMembershipServiceEventDateField;
            }
            set {
                if ((this.ParentMembershipServiceEventDateField.Equals(value) != true)) {
                    this.ParentMembershipServiceEventDateField = value;
                    this.RaisePropertyChanged("ParentMembershipServiceEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ParentMembershipServiceEventId {
            get {
                return this.ParentMembershipServiceEventIdField;
            }
            set {
                if ((this.ParentMembershipServiceEventIdField.Equals(value) != true)) {
                    this.ParentMembershipServiceEventIdField = value;
                    this.RaisePropertyChanged("ParentMembershipServiceEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipId {
            get {
                return this.PopulationMembershipIdField;
            }
            set {
                if ((this.PopulationMembershipIdField.Equals(value) != true)) {
                    this.PopulationMembershipIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationServiceEventId {
            get {
                return this.PopulationServiceEventIdField;
            }
            set {
                if ((this.PopulationServiceEventIdField.Equals(value) != true)) {
                    this.PopulationServiceEventIdField = value;
                    this.RaisePropertyChanged("PopulationServiceEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousEventDate {
            get {
                return this.PreviousEventDateField;
            }
            set {
                if ((this.PreviousEventDateField.Equals(value) != true)) {
                    this.PreviousEventDateField = value;
                    this.RaisePropertyChanged("PreviousEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PreviousMemberServiceId {
            get {
                return this.PreviousMemberServiceIdField;
            }
            set {
                if ((this.PreviousMemberServiceIdField.Equals(value) != true)) {
                    this.PreviousMemberServiceIdField = value;
                    this.RaisePropertyChanged("PreviousMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousThresholdDate {
            get {
                return this.PreviousThresholdDateField;
            }
            set {
                if ((this.PreviousThresholdDateField.Equals(value) != true)) {
                    this.PreviousThresholdDateField = value;
                    this.RaisePropertyChanged("PreviousThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PreviousThresholdId {
            get {
                return this.PreviousThresholdIdField;
            }
            set {
                if ((this.PreviousThresholdIdField.Equals(value) != true)) {
                    this.PreviousThresholdIdField = value;
                    this.RaisePropertyChanged("PreviousThresholdId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationServiceEventStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipTriggerEvent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Events")]
    public partial class PopulationMembershipTriggerEvent : Mercury.Server.Application.CoreObject {
        
        private string ActionDescriptionField;
        
        private System.DateTime EventDateField;
        
        private long MemberAuthorizedServiceIdField;
        
        private long MemberMetricIdField;
        
        private long MemberServiceIdField;
        
        private long PopulationMembershipIdField;
        
        private long PopulationTriggerEventIdField;
        
        private long ProblemStatementIdField;
        
        private System.DateTime TriggerDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionDescription {
            get {
                return this.ActionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionDescriptionField, value) != true)) {
                    this.ActionDescriptionField = value;
                    this.RaisePropertyChanged("ActionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberAuthorizedServiceId {
            get {
                return this.MemberAuthorizedServiceIdField;
            }
            set {
                if ((this.MemberAuthorizedServiceIdField.Equals(value) != true)) {
                    this.MemberAuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("MemberAuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberMetricId {
            get {
                return this.MemberMetricIdField;
            }
            set {
                if ((this.MemberMetricIdField.Equals(value) != true)) {
                    this.MemberMetricIdField = value;
                    this.RaisePropertyChanged("MemberMetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberServiceId {
            get {
                return this.MemberServiceIdField;
            }
            set {
                if ((this.MemberServiceIdField.Equals(value) != true)) {
                    this.MemberServiceIdField = value;
                    this.RaisePropertyChanged("MemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipId {
            get {
                return this.PopulationMembershipIdField;
            }
            set {
                if ((this.PopulationMembershipIdField.Equals(value) != true)) {
                    this.PopulationMembershipIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationTriggerEventId {
            get {
                return this.PopulationTriggerEventIdField;
            }
            set {
                if ((this.PopulationTriggerEventIdField.Equals(value) != true)) {
                    this.PopulationTriggerEventIdField = value;
                    this.RaisePropertyChanged("PopulationTriggerEventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemStatementId {
            get {
                return this.ProblemStatementIdField;
            }
            set {
                if ((this.ProblemStatementIdField.Equals(value) != true)) {
                    this.ProblemStatementIdField = value;
                    this.RaisePropertyChanged("ProblemStatementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TriggerDate {
            get {
                return this.TriggerDateField;
            }
            set {
                if ((this.TriggerDateField.Equals(value) != true)) {
                    this.TriggerDateField = value;
                    this.RaisePropertyChanged("TriggerDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationTriggerEvent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Population" +
        "Events")]
    public partial class PopulationTriggerEvent : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Action ActionField;
        
        private long AuthorizedServiceIdField;
        
        private Mercury.Server.Application.PopulationTriggerEventType EventTypeField;
        
        private long MetricIdField;
        
        private decimal MetricMaximumField;
        
        private decimal MetricMinimumField;
        
        private Mercury.Server.Application.MetricType MetricTypeField;
        
        private long PopulationIdField;
        
        private long ProblemStatementIdField;
        
        private long ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Action Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizedServiceId {
            get {
                return this.AuthorizedServiceIdField;
            }
            set {
                if ((this.AuthorizedServiceIdField.Equals(value) != true)) {
                    this.AuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("AuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationTriggerEventType EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetricId {
            get {
                return this.MetricIdField;
            }
            set {
                if ((this.MetricIdField.Equals(value) != true)) {
                    this.MetricIdField = value;
                    this.RaisePropertyChanged("MetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MetricMaximum {
            get {
                return this.MetricMaximumField;
            }
            set {
                if ((this.MetricMaximumField.Equals(value) != true)) {
                    this.MetricMaximumField = value;
                    this.RaisePropertyChanged("MetricMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MetricMinimum {
            get {
                return this.MetricMinimumField;
            }
            set {
                if ((this.MetricMinimumField.Equals(value) != true)) {
                    this.MetricMinimumField = value;
                    this.RaisePropertyChanged("MetricMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricType MetricType {
            get {
                return this.MetricTypeField;
            }
            set {
                if ((this.MetricTypeField.Equals(value) != true)) {
                    this.MetricTypeField = value;
                    this.RaisePropertyChanged("MetricType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemStatementId {
            get {
                return this.ProblemStatementIdField;
            }
            set {
                if ((this.ProblemStatementIdField.Equals(value) != true)) {
                    this.ProblemStatementIdField = value;
                    this.RaisePropertyChanged("ProblemStatementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutingRuleDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class RoutingRuleDefinition : Mercury.Server.Application.CoreObject {
        
        private int AgeMaximumField;
        
        private int AgeMinimumField;
        
        private long BenefitPlanIdField;
        
        private string CityField;
        
        private string CountyField;
        
        private long EthnicityIdField;
        
        private Mercury.Server.Application.Gender GenderField;
        
        private long InsurerIdField;
        
        private bool IsAgeInMonthsField;
        
        private long LanguageIdField;
        
        private long ProgramIdField;
        
        private long RoutingRuleIdField;
        
        private int SequenceField;
        
        private string StateField;
        
        private bool UseAgeCriteriaField;
        
        private long WorkQueueIdField;
        
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMaximum {
            get {
                return this.AgeMaximumField;
            }
            set {
                if ((this.AgeMaximumField.Equals(value) != true)) {
                    this.AgeMaximumField = value;
                    this.RaisePropertyChanged("AgeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMinimum {
            get {
                return this.AgeMinimumField;
            }
            set {
                if ((this.AgeMinimumField.Equals(value) != true)) {
                    this.AgeMinimumField = value;
                    this.RaisePropertyChanged("AgeMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BenefitPlanId {
            get {
                return this.BenefitPlanIdField;
            }
            set {
                if ((this.BenefitPlanIdField.Equals(value) != true)) {
                    this.BenefitPlanIdField = value;
                    this.RaisePropertyChanged("BenefitPlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EthnicityId {
            get {
                return this.EthnicityIdField;
            }
            set {
                if ((this.EthnicityIdField.Equals(value) != true)) {
                    this.EthnicityIdField = value;
                    this.RaisePropertyChanged("EthnicityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InsurerId {
            get {
                return this.InsurerIdField;
            }
            set {
                if ((this.InsurerIdField.Equals(value) != true)) {
                    this.InsurerIdField = value;
                    this.RaisePropertyChanged("InsurerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAgeInMonths {
            get {
                return this.IsAgeInMonthsField;
            }
            set {
                if ((this.IsAgeInMonthsField.Equals(value) != true)) {
                    this.IsAgeInMonthsField = value;
                    this.RaisePropertyChanged("IsAgeInMonths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoutingRuleId {
            get {
                return this.RoutingRuleIdField;
            }
            set {
                if ((this.RoutingRuleIdField.Equals(value) != true)) {
                    this.RoutingRuleIdField = value;
                    this.RaisePropertyChanged("RoutingRuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAgeCriteria {
            get {
                return this.UseAgeCriteriaField;
            }
            set {
                if ((this.UseAgeCriteriaField.Equals(value) != true)) {
                    this.UseAgeCriteriaField = value;
                    this.RaisePropertyChanged("UseAgeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueId {
            get {
                return this.WorkQueueIdField;
            }
            set {
                if ((this.WorkQueueIdField.Equals(value) != true)) {
                    this.WorkQueueIdField = value;
                    this.RaisePropertyChanged("WorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowPermission", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkflowPermission : Mercury.Server.Application.CoreObject {
        
        private bool IsDeniedField;
        
        private bool IsGrantedField;
        
        private long WorkTeamIdField;
        
        private long WorkflowIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDenied {
            get {
                return this.IsDeniedField;
            }
            set {
                if ((this.IsDeniedField.Equals(value) != true)) {
                    this.IsDeniedField = value;
                    this.RaisePropertyChanged("IsDenied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGranted {
            get {
                return this.IsGrantedField;
            }
            set {
                if ((this.IsGrantedField.Equals(value) != true)) {
                    this.IsGrantedField = value;
                    this.RaisePropertyChanged("IsGranted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkTeamId {
            get {
                return this.WorkTeamIdField;
            }
            set {
                if ((this.WorkTeamIdField.Equals(value) != true)) {
                    this.WorkTeamIdField = value;
                    this.RaisePropertyChanged("WorkTeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueGetWorkUserView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueGetWorkUserView : Mercury.Server.Application.CoreObject {
        
        private long SecurityAuthorityIdField;
        
        private string SecurityAuthorityNameField;
        
        private string UserAccountIdField;
        
        private string UserAccountNameField;
        
        private string UserDisplayNameField;
        
        private long WorkQueueIdField;
        
        private long WorkQueueViewIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAuthorityName {
            get {
                return this.SecurityAuthorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAuthorityNameField, value) != true)) {
                    this.SecurityAuthorityNameField = value;
                    this.RaisePropertyChanged("SecurityAuthorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountId {
            get {
                return this.UserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountIdField, value) != true)) {
                    this.UserAccountIdField = value;
                    this.RaisePropertyChanged("UserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountName {
            get {
                return this.UserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountNameField, value) != true)) {
                    this.UserAccountNameField = value;
                    this.RaisePropertyChanged("UserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDisplayName {
            get {
                return this.UserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDisplayNameField, value) != true)) {
                    this.UserDisplayNameField = value;
                    this.RaisePropertyChanged("UserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueId {
            get {
                return this.WorkQueueIdField;
            }
            set {
                if ((this.WorkQueueIdField.Equals(value) != true)) {
                    this.WorkQueueIdField = value;
                    this.RaisePropertyChanged("WorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueViewId {
            get {
                return this.WorkQueueViewIdField;
            }
            set {
                if ((this.WorkQueueViewIdField.Equals(value) != true)) {
                    this.WorkQueueViewIdField = value;
                    this.RaisePropertyChanged("WorkQueueViewId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTeamMembership", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkTeamMembership : Mercury.Server.Application.CoreObject {
        
        private long SecurityAuthorityIdField;
        
        private string SecurityAuthorityNameField;
        
        private string UserAccountIdField;
        
        private string UserAccountNameField;
        
        private string UserDisplayNameField;
        
        private long WorkTeamIdField;
        
        private Mercury.Server.Application.WorkTeamRole WorkTeamRoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAuthorityName {
            get {
                return this.SecurityAuthorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAuthorityNameField, value) != true)) {
                    this.SecurityAuthorityNameField = value;
                    this.RaisePropertyChanged("SecurityAuthorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountId {
            get {
                return this.UserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountIdField, value) != true)) {
                    this.UserAccountIdField = value;
                    this.RaisePropertyChanged("UserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountName {
            get {
                return this.UserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountNameField, value) != true)) {
                    this.UserAccountNameField = value;
                    this.RaisePropertyChanged("UserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDisplayName {
            get {
                return this.UserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDisplayNameField, value) != true)) {
                    this.UserDisplayNameField = value;
                    this.RaisePropertyChanged("UserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkTeamId {
            get {
                return this.WorkTeamIdField;
            }
            set {
                if ((this.WorkTeamIdField.Equals(value) != true)) {
                    this.WorkTeamIdField = value;
                    this.RaisePropertyChanged("WorkTeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkTeamRole WorkTeamRole {
            get {
                return this.WorkTeamRoleField;
            }
            set {
                if ((this.WorkTeamRoleField.Equals(value) != true)) {
                    this.WorkTeamRoleField = value;
                    this.RaisePropertyChanged("WorkTeamRole");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItemAssignmentHistory", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueItemAssignmentHistory : Mercury.Server.Application.CoreObject {
        
        private long AssignedFromWorkQueueIdField;
        
        private System.Nullable<System.DateTime> AssignedToDateField;
        
        private long AssignedToSecurityAuthorityIdField;
        
        private string AssignedToUserAccountIdField;
        
        private string AssignedToUserAccountNameField;
        
        private string AssignedToUserDisplayNameField;
        
        private long AssignedToWorkQueueIdField;
        
        private string AssignmentSourceField;
        
        private long WorkQueueItemIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedFromWorkQueueId {
            get {
                return this.AssignedFromWorkQueueIdField;
            }
            set {
                if ((this.AssignedFromWorkQueueIdField.Equals(value) != true)) {
                    this.AssignedFromWorkQueueIdField = value;
                    this.RaisePropertyChanged("AssignedFromWorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedToDate {
            get {
                return this.AssignedToDateField;
            }
            set {
                if ((this.AssignedToDateField.Equals(value) != true)) {
                    this.AssignedToDateField = value;
                    this.RaisePropertyChanged("AssignedToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedToSecurityAuthorityId {
            get {
                return this.AssignedToSecurityAuthorityIdField;
            }
            set {
                if ((this.AssignedToSecurityAuthorityIdField.Equals(value) != true)) {
                    this.AssignedToSecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("AssignedToSecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountId {
            get {
                return this.AssignedToUserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountIdField, value) != true)) {
                    this.AssignedToUserAccountIdField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountName {
            get {
                return this.AssignedToUserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountNameField, value) != true)) {
                    this.AssignedToUserAccountNameField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserDisplayName {
            get {
                return this.AssignedToUserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserDisplayNameField, value) != true)) {
                    this.AssignedToUserDisplayNameField = value;
                    this.RaisePropertyChanged("AssignedToUserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedToWorkQueueId {
            get {
                return this.AssignedToWorkQueueIdField;
            }
            set {
                if ((this.AssignedToWorkQueueIdField.Equals(value) != true)) {
                    this.AssignedToWorkQueueIdField = value;
                    this.RaisePropertyChanged("AssignedToWorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignmentSource {
            get {
                return this.AssignmentSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentSourceField, value) != true)) {
                    this.AssignmentSourceField = value;
                    this.RaisePropertyChanged("AssignmentSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueItemId {
            get {
                return this.WorkQueueItemIdField;
            }
            set {
                if ((this.WorkQueueItemIdField.Equals(value) != true)) {
                    this.WorkQueueItemIdField = value;
                    this.RaisePropertyChanged("WorkQueueItemId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItemSender", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueItemSender : Mercury.Server.Application.CoreObject {
        
        private string EventDescriptionField;
        
        private long EventInstanceIdField;
        
        private long EventObjectIdField;
        
        private string EventObjectTypeField;
        
        private int PriorityField;
        
        private long SenderObjectIdField;
        
        private string SenderObjectTypeField;
        
        private long WorkQueueItemIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EventInstanceId {
            get {
                return this.EventInstanceIdField;
            }
            set {
                if ((this.EventInstanceIdField.Equals(value) != true)) {
                    this.EventInstanceIdField = value;
                    this.RaisePropertyChanged("EventInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EventObjectId {
            get {
                return this.EventObjectIdField;
            }
            set {
                if ((this.EventObjectIdField.Equals(value) != true)) {
                    this.EventObjectIdField = value;
                    this.RaisePropertyChanged("EventObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventObjectType {
            get {
                return this.EventObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventObjectTypeField, value) != true)) {
                    this.EventObjectTypeField = value;
                    this.RaisePropertyChanged("EventObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SenderObjectId {
            get {
                return this.SenderObjectIdField;
            }
            set {
                if ((this.SenderObjectIdField.Equals(value) != true)) {
                    this.SenderObjectIdField = value;
                    this.RaisePropertyChanged("SenderObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderObjectType {
            get {
                return this.SenderObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderObjectTypeField, value) != true)) {
                    this.SenderObjectTypeField = value;
                    this.RaisePropertyChanged("SenderObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueItemId {
            get {
                return this.WorkQueueItemIdField;
            }
            set {
                if ((this.WorkQueueItemIdField.Equals(value) != true)) {
                    this.WorkQueueItemIdField = value;
                    this.RaisePropertyChanged("WorkQueueItemId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueTeam", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueTeam : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.WorkQueueTeamPermission PermissionField;
        
        private long WorkQueueIdField;
        
        private long WorkTeamIdField;
        
        private string WorkTeamNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkQueueTeamPermission Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueId {
            get {
                return this.WorkQueueIdField;
            }
            set {
                if ((this.WorkQueueIdField.Equals(value) != true)) {
                    this.WorkQueueIdField = value;
                    this.RaisePropertyChanged("WorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkTeamId {
            get {
                return this.WorkTeamIdField;
            }
            set {
                if ((this.WorkTeamIdField.Equals(value) != true)) {
                    this.WorkTeamIdField = value;
                    this.RaisePropertyChanged("WorkTeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTeamName {
            get {
                return this.WorkTeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTeamNameField, value) != true)) {
                    this.WorkTeamNameField = value;
                    this.RaisePropertyChanged("WorkTeamName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedServiceDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.AuthorizedServices")]
    public partial class AuthorizedServiceDefinition : Mercury.Server.Application.CoreObject {
        
        private long AuthorizedServiceIdField;
        
        private string BillTypeCriteriaField;
        
        private string CategoryField;
        
        private string DeaClassificationCriteriaField;
        
        private string DiagnosisCriteriaField;
        
        private string DrgCriteriaField;
        
        private string DrugNameCriteriaField;
        
        private bool EnabledField;
        
        private string Icd9ProcedureCodeCriteriaField;
        
        private string LabLoincCodeCriteriaField;
        
        private string LocationCodeCriteriaField;
        
        private string ModifierCodeCriteriaField;
        
        private string NdcCodeCriteriaField;
        
        private string PrincipalDiagnosisCriteriaField;
        
        private string ProcedureCodeCriteriaField;
        
        private string ProviderSpecialtyCriteriaField;
        
        private string RevenueCodeCriteriaField;
        
        private string ServiceTypeField;
        
        private string SubcategoryField;
        
        private string TherapeuticClassificationCriteriaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizedServiceId {
            get {
                return this.AuthorizedServiceIdField;
            }
            set {
                if ((this.AuthorizedServiceIdField.Equals(value) != true)) {
                    this.AuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("AuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillTypeCriteria {
            get {
                return this.BillTypeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.BillTypeCriteriaField, value) != true)) {
                    this.BillTypeCriteriaField = value;
                    this.RaisePropertyChanged("BillTypeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeaClassificationCriteria {
            get {
                return this.DeaClassificationCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DeaClassificationCriteriaField, value) != true)) {
                    this.DeaClassificationCriteriaField = value;
                    this.RaisePropertyChanged("DeaClassificationCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisCriteria {
            get {
                return this.DiagnosisCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisCriteriaField, value) != true)) {
                    this.DiagnosisCriteriaField = value;
                    this.RaisePropertyChanged("DiagnosisCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrgCriteria {
            get {
                return this.DrgCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DrgCriteriaField, value) != true)) {
                    this.DrgCriteriaField = value;
                    this.RaisePropertyChanged("DrgCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrugNameCriteria {
            get {
                return this.DrugNameCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DrugNameCriteriaField, value) != true)) {
                    this.DrugNameCriteriaField = value;
                    this.RaisePropertyChanged("DrugNameCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icd9ProcedureCodeCriteria {
            get {
                return this.Icd9ProcedureCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.Icd9ProcedureCodeCriteriaField, value) != true)) {
                    this.Icd9ProcedureCodeCriteriaField = value;
                    this.RaisePropertyChanged("Icd9ProcedureCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabLoincCodeCriteria {
            get {
                return this.LabLoincCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.LabLoincCodeCriteriaField, value) != true)) {
                    this.LabLoincCodeCriteriaField = value;
                    this.RaisePropertyChanged("LabLoincCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCodeCriteria {
            get {
                return this.LocationCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeCriteriaField, value) != true)) {
                    this.LocationCodeCriteriaField = value;
                    this.RaisePropertyChanged("LocationCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifierCodeCriteria {
            get {
                return this.ModifierCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierCodeCriteriaField, value) != true)) {
                    this.ModifierCodeCriteriaField = value;
                    this.RaisePropertyChanged("ModifierCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdcCodeCriteria {
            get {
                return this.NdcCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.NdcCodeCriteriaField, value) != true)) {
                    this.NdcCodeCriteriaField = value;
                    this.RaisePropertyChanged("NdcCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalDiagnosisCriteria {
            get {
                return this.PrincipalDiagnosisCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalDiagnosisCriteriaField, value) != true)) {
                    this.PrincipalDiagnosisCriteriaField = value;
                    this.RaisePropertyChanged("PrincipalDiagnosisCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCodeCriteria {
            get {
                return this.ProcedureCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeCriteriaField, value) != true)) {
                    this.ProcedureCodeCriteriaField = value;
                    this.RaisePropertyChanged("ProcedureCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderSpecialtyCriteria {
            get {
                return this.ProviderSpecialtyCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderSpecialtyCriteriaField, value) != true)) {
                    this.ProviderSpecialtyCriteriaField = value;
                    this.RaisePropertyChanged("ProviderSpecialtyCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueCodeCriteria {
            get {
                return this.RevenueCodeCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueCodeCriteriaField, value) != true)) {
                    this.RevenueCodeCriteriaField = value;
                    this.RaisePropertyChanged("RevenueCodeCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subcategory {
            get {
                return this.SubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryField, value) != true)) {
                    this.SubcategoryField = value;
                    this.RaisePropertyChanged("Subcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TherapeuticClassificationCriteria {
            get {
                return this.TherapeuticClassificationCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.TherapeuticClassificationCriteriaField, value) != true)) {
                    this.TherapeuticClassificationCriteriaField = value;
                    this.RaisePropertyChanged("TherapeuticClassificationCriteria");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberAuthorizedService", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.AuthorizedServices")]
    public partial class MemberAuthorizedService : Mercury.Server.Application.CoreObject {
        
        private bool AddedManuallyField;
        
        private Mercury.Server.Application.AuthorizedService AuthorizedServiceField;
        
        private long AuthorizedServiceIdField;
        
        private System.DateTime EventDateField;
        
        private System.DateTime InitialIdentifiedDateField;
        
        private long MemberAuthorizedServiceIdField;
        
        private long MemberIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddedManually {
            get {
                return this.AddedManuallyField;
            }
            set {
                if ((this.AddedManuallyField.Equals(value) != true)) {
                    this.AddedManuallyField = value;
                    this.RaisePropertyChanged("AddedManually");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorizedService AuthorizedService {
            get {
                return this.AuthorizedServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizedServiceField, value) != true)) {
                    this.AuthorizedServiceField = value;
                    this.RaisePropertyChanged("AuthorizedService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizedServiceId {
            get {
                return this.AuthorizedServiceIdField;
            }
            set {
                if ((this.AuthorizedServiceIdField.Equals(value) != true)) {
                    this.AuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("AuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitialIdentifiedDate {
            get {
                return this.InitialIdentifiedDateField;
            }
            set {
                if ((this.InitialIdentifiedDateField.Equals(value) != true)) {
                    this.InitialIdentifiedDateField = value;
                    this.RaisePropertyChanged("InitialIdentifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberAuthorizedServiceId {
            get {
                return this.MemberAuthorizedServiceIdField;
            }
            set {
                if ((this.MemberAuthorizedServiceIdField.Equals(value) != true)) {
                    this.MemberAuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("MemberAuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Provider", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Provider")]
    public partial class Provider : Mercury.Server.Application.CoreObject {
        
        private System.Nullable<System.DateTime> BirthDateField;
        
        private long CitizenshipIdField;
        
        private System.Nullable<System.DateTime> DeathDateField;
        
        private Mercury.Server.Application.Entity EntityField;
        
        private long EntityIdField;
        
        private long EthnicityIdField;
        
        private string GenderField;
        
        private bool IsPersonField;
        
        private string NationalProviderIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CitizenshipId {
            get {
                return this.CitizenshipIdField;
            }
            set {
                if ((this.CitizenshipIdField.Equals(value) != true)) {
                    this.CitizenshipIdField = value;
                    this.RaisePropertyChanged("CitizenshipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeathDate {
            get {
                return this.DeathDateField;
            }
            set {
                if ((this.DeathDateField.Equals(value) != true)) {
                    this.DeathDateField = value;
                    this.RaisePropertyChanged("DeathDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EthnicityId {
            get {
                return this.EthnicityIdField;
            }
            set {
                if ((this.EthnicityIdField.Equals(value) != true)) {
                    this.EthnicityIdField = value;
                    this.RaisePropertyChanged("EthnicityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPerson {
            get {
                return this.IsPersonField;
            }
            set {
                if ((this.IsPersonField.Equals(value) != true)) {
                    this.IsPersonField = value;
                    this.RaisePropertyChanged("IsPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalProviderId {
            get {
                return this.NationalProviderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalProviderIdField, value) != true)) {
                    this.NationalProviderIdField = value;
                    this.RaisePropertyChanged("NationalProviderId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderAffiliation", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Provider")]
    public partial class ProviderAffiliation : Mercury.Server.Application.CoreObject {
        
        private long AffiliateProviderIdField;
        
        private System.DateTime EffectiveDateField;
        
        private long ProviderIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AffiliateProviderId {
            get {
                return this.AffiliateProviderIdField;
            }
            set {
                if ((this.AffiliateProviderIdField.Equals(value) != true)) {
                    this.AffiliateProviderIdField = value;
                    this.RaisePropertyChanged("AffiliateProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderContract", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Provider")]
    public partial class ProviderContract : Mercury.Server.Application.CoreObject {
        
        private long ContractIdField;
        
        private System.DateTime EffectiveDateField;
        
        private bool IsCapitatedField;
        
        private bool IsContractedField;
        
        private bool IsParticipatingField;
        
        private long ProgramIdField;
        
        private long ProviderAffiliationIdField;
        
        private long ProviderIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCapitated {
            get {
                return this.IsCapitatedField;
            }
            set {
                if ((this.IsCapitatedField.Equals(value) != true)) {
                    this.IsCapitatedField = value;
                    this.RaisePropertyChanged("IsCapitated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContracted {
            get {
                return this.IsContractedField;
            }
            set {
                if ((this.IsContractedField.Equals(value) != true)) {
                    this.IsContractedField = value;
                    this.RaisePropertyChanged("IsContracted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParticipating {
            get {
                return this.IsParticipatingField;
            }
            set {
                if ((this.IsParticipatingField.Equals(value) != true)) {
                    this.IsParticipatingField = value;
                    this.RaisePropertyChanged("IsParticipating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderAffiliationId {
            get {
                return this.ProviderAffiliationIdField;
            }
            set {
                if ((this.ProviderAffiliationIdField.Equals(value) != true)) {
                    this.ProviderAffiliationIdField = value;
                    this.RaisePropertyChanged("ProviderAffiliationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderEnrollment", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Provider")]
    public partial class ProviderEnrollment : Mercury.Server.Application.CoreObject {
        
        private System.DateTime EffectiveDateField;
        
        private long ProgramIdField;
        
        private string ProgramProviderIdField;
        
        private long ProviderIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramProviderId {
            get {
                return this.ProgramProviderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramProviderIdField, value) != true)) {
                    this.ProgramProviderIdField = value;
                    this.RaisePropertyChanged("ProgramProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderServiceLocation", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Provider")]
    public partial class ProviderServiceLocation : Mercury.Server.Application.CoreObject {
        
        private int AgeMaximumField;
        
        private int AgeMinimumField;
        
        private System.DateTime EffectiveDateField;
        
        private long EntityAddressIdField;
        
        private bool HasHandicapAccessField;
        
        private bool IsAcceptingNewPatientsField;
        
        private bool IsPcpField;
        
        private string OfficeHoursFridayField;
        
        private string OfficeHoursMondayField;
        
        private string OfficeHoursSaturdayField;
        
        private string OfficeHoursSundayField;
        
        private string OfficeHoursThursdayField;
        
        private string OfficeHoursTuesdayField;
        
        private string OfficeHoursWednesdayField;
        
        private int PanelSizeMaximumField;
        
        private long ProviderAffiliationIdField;
        
        private long ProviderEnrollmentIdField;
        
        private long ProviderIdField;
        
        private string ServiceLocationNumberField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMaximum {
            get {
                return this.AgeMaximumField;
            }
            set {
                if ((this.AgeMaximumField.Equals(value) != true)) {
                    this.AgeMaximumField = value;
                    this.RaisePropertyChanged("AgeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeMinimum {
            get {
                return this.AgeMinimumField;
            }
            set {
                if ((this.AgeMinimumField.Equals(value) != true)) {
                    this.AgeMinimumField = value;
                    this.RaisePropertyChanged("AgeMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityAddressId {
            get {
                return this.EntityAddressIdField;
            }
            set {
                if ((this.EntityAddressIdField.Equals(value) != true)) {
                    this.EntityAddressIdField = value;
                    this.RaisePropertyChanged("EntityAddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasHandicapAccess {
            get {
                return this.HasHandicapAccessField;
            }
            set {
                if ((this.HasHandicapAccessField.Equals(value) != true)) {
                    this.HasHandicapAccessField = value;
                    this.RaisePropertyChanged("HasHandicapAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAcceptingNewPatients {
            get {
                return this.IsAcceptingNewPatientsField;
            }
            set {
                if ((this.IsAcceptingNewPatientsField.Equals(value) != true)) {
                    this.IsAcceptingNewPatientsField = value;
                    this.RaisePropertyChanged("IsAcceptingNewPatients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPcp {
            get {
                return this.IsPcpField;
            }
            set {
                if ((this.IsPcpField.Equals(value) != true)) {
                    this.IsPcpField = value;
                    this.RaisePropertyChanged("IsPcp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursFriday {
            get {
                return this.OfficeHoursFridayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursFridayField, value) != true)) {
                    this.OfficeHoursFridayField = value;
                    this.RaisePropertyChanged("OfficeHoursFriday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursMonday {
            get {
                return this.OfficeHoursMondayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursMondayField, value) != true)) {
                    this.OfficeHoursMondayField = value;
                    this.RaisePropertyChanged("OfficeHoursMonday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursSaturday {
            get {
                return this.OfficeHoursSaturdayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursSaturdayField, value) != true)) {
                    this.OfficeHoursSaturdayField = value;
                    this.RaisePropertyChanged("OfficeHoursSaturday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursSunday {
            get {
                return this.OfficeHoursSundayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursSundayField, value) != true)) {
                    this.OfficeHoursSundayField = value;
                    this.RaisePropertyChanged("OfficeHoursSunday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursThursday {
            get {
                return this.OfficeHoursThursdayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursThursdayField, value) != true)) {
                    this.OfficeHoursThursdayField = value;
                    this.RaisePropertyChanged("OfficeHoursThursday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursTuesday {
            get {
                return this.OfficeHoursTuesdayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursTuesdayField, value) != true)) {
                    this.OfficeHoursTuesdayField = value;
                    this.RaisePropertyChanged("OfficeHoursTuesday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeHoursWednesday {
            get {
                return this.OfficeHoursWednesdayField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeHoursWednesdayField, value) != true)) {
                    this.OfficeHoursWednesdayField = value;
                    this.RaisePropertyChanged("OfficeHoursWednesday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PanelSizeMaximum {
            get {
                return this.PanelSizeMaximumField;
            }
            set {
                if ((this.PanelSizeMaximumField.Equals(value) != true)) {
                    this.PanelSizeMaximumField = value;
                    this.RaisePropertyChanged("PanelSizeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderAffiliationId {
            get {
                return this.ProviderAffiliationIdField;
            }
            set {
                if ((this.ProviderAffiliationIdField.Equals(value) != true)) {
                    this.ProviderAffiliationIdField = value;
                    this.RaisePropertyChanged("ProviderAffiliationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderEnrollmentId {
            get {
                return this.ProviderEnrollmentIdField;
            }
            set {
                if ((this.ProviderEnrollmentIdField.Equals(value) != true)) {
                    this.ProviderEnrollmentIdField = value;
                    this.RaisePropertyChanged("ProviderEnrollmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceLocationNumber {
            get {
                return this.ServiceLocationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceLocationNumberField, value) != true)) {
                    this.ServiceLocationNumberField = value;
                    this.RaisePropertyChanged("ServiceLocationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authorization", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Authorizations")]
    public partial class Authorization : Mercury.Server.Application.CoreObject {
        
        private System.Nullable<System.DateTime> AccidentDateField;
        
        private string AdmittingDiagnosisCodeField;
        
        private string AdmittingDiagnosisDescriptionField;
        
        private string AssignedToUserAccountNameField;
        
        private string AuthorizationCategoryField;
        
        private string AuthorizationNumberField;
        
        private string AuthorizationServiceTypeField;
        
        private string AuthorizationStatusField;
        
        private string AuthorizationSubcategoryField;
        
        private string DischargeDiagnosisCodeField;
        
        private string DischargeDiagnosisDescriptionField;
        
        private System.DateTime EffectiveDateField;
        
        private System.Nullable<System.DateTime> EstimatedBirthDateField;
        
        private System.Nullable<System.DateTime> LastMenstrualDateField;
        
        private long MemberIdField;
        
        private System.Nullable<System.DateTime> OnsetDateField;
        
        private string PrincipalDiagnosisCodeField;
        
        private string PrincipalDiagnosisDescriptionField;
        
        private System.DateTime ReceivedDateField;
        
        private System.DateTime ReferralDateField;
        
        private long ReferringProviderIdField;
        
        private string ReferringProviderNameField;
        
        private long ServiceProviderIdField;
        
        private string ServiceProviderNameField;
        
        private string ServiceProviderSpecialtyNameField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccidentDate {
            get {
                return this.AccidentDateField;
            }
            set {
                if ((this.AccidentDateField.Equals(value) != true)) {
                    this.AccidentDateField = value;
                    this.RaisePropertyChanged("AccidentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdmittingDiagnosisCode {
            get {
                return this.AdmittingDiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmittingDiagnosisCodeField, value) != true)) {
                    this.AdmittingDiagnosisCodeField = value;
                    this.RaisePropertyChanged("AdmittingDiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdmittingDiagnosisDescription {
            get {
                return this.AdmittingDiagnosisDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmittingDiagnosisDescriptionField, value) != true)) {
                    this.AdmittingDiagnosisDescriptionField = value;
                    this.RaisePropertyChanged("AdmittingDiagnosisDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountName {
            get {
                return this.AssignedToUserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountNameField, value) != true)) {
                    this.AssignedToUserAccountNameField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationCategory {
            get {
                return this.AuthorizationCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationCategoryField, value) != true)) {
                    this.AuthorizationCategoryField = value;
                    this.RaisePropertyChanged("AuthorizationCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationNumber {
            get {
                return this.AuthorizationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationNumberField, value) != true)) {
                    this.AuthorizationNumberField = value;
                    this.RaisePropertyChanged("AuthorizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationServiceType {
            get {
                return this.AuthorizationServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationServiceTypeField, value) != true)) {
                    this.AuthorizationServiceTypeField = value;
                    this.RaisePropertyChanged("AuthorizationServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationStatus {
            get {
                return this.AuthorizationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationStatusField, value) != true)) {
                    this.AuthorizationStatusField = value;
                    this.RaisePropertyChanged("AuthorizationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationSubcategory {
            get {
                return this.AuthorizationSubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationSubcategoryField, value) != true)) {
                    this.AuthorizationSubcategoryField = value;
                    this.RaisePropertyChanged("AuthorizationSubcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DischargeDiagnosisCode {
            get {
                return this.DischargeDiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DischargeDiagnosisCodeField, value) != true)) {
                    this.DischargeDiagnosisCodeField = value;
                    this.RaisePropertyChanged("DischargeDiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DischargeDiagnosisDescription {
            get {
                return this.DischargeDiagnosisDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DischargeDiagnosisDescriptionField, value) != true)) {
                    this.DischargeDiagnosisDescriptionField = value;
                    this.RaisePropertyChanged("DischargeDiagnosisDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedBirthDate {
            get {
                return this.EstimatedBirthDateField;
            }
            set {
                if ((this.EstimatedBirthDateField.Equals(value) != true)) {
                    this.EstimatedBirthDateField = value;
                    this.RaisePropertyChanged("EstimatedBirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastMenstrualDate {
            get {
                return this.LastMenstrualDateField;
            }
            set {
                if ((this.LastMenstrualDateField.Equals(value) != true)) {
                    this.LastMenstrualDateField = value;
                    this.RaisePropertyChanged("LastMenstrualDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OnsetDate {
            get {
                return this.OnsetDateField;
            }
            set {
                if ((this.OnsetDateField.Equals(value) != true)) {
                    this.OnsetDateField = value;
                    this.RaisePropertyChanged("OnsetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalDiagnosisCode {
            get {
                return this.PrincipalDiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalDiagnosisCodeField, value) != true)) {
                    this.PrincipalDiagnosisCodeField = value;
                    this.RaisePropertyChanged("PrincipalDiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalDiagnosisDescription {
            get {
                return this.PrincipalDiagnosisDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalDiagnosisDescriptionField, value) != true)) {
                    this.PrincipalDiagnosisDescriptionField = value;
                    this.RaisePropertyChanged("PrincipalDiagnosisDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReferralDate {
            get {
                return this.ReferralDateField;
            }
            set {
                if ((this.ReferralDateField.Equals(value) != true)) {
                    this.ReferralDateField = value;
                    this.RaisePropertyChanged("ReferralDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReferringProviderId {
            get {
                return this.ReferringProviderIdField;
            }
            set {
                if ((this.ReferringProviderIdField.Equals(value) != true)) {
                    this.ReferringProviderIdField = value;
                    this.RaisePropertyChanged("ReferringProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferringProviderName {
            get {
                return this.ReferringProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferringProviderNameField, value) != true)) {
                    this.ReferringProviderNameField = value;
                    this.RaisePropertyChanged("ReferringProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceProviderId {
            get {
                return this.ServiceProviderIdField;
            }
            set {
                if ((this.ServiceProviderIdField.Equals(value) != true)) {
                    this.ServiceProviderIdField = value;
                    this.RaisePropertyChanged("ServiceProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceProviderName {
            get {
                return this.ServiceProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProviderNameField, value) != true)) {
                    this.ServiceProviderNameField = value;
                    this.RaisePropertyChanged("ServiceProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceProviderSpecialtyName {
            get {
                return this.ServiceProviderSpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProviderSpecialtyNameField, value) != true)) {
                    this.ServiceProviderSpecialtyNameField = value;
                    this.RaisePropertyChanged("ServiceProviderSpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationLine", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Authorizations")]
    public partial class AuthorizationLine : Mercury.Server.Application.CoreObject {
        
        private System.Nullable<System.DateTime> AdmissionDateField;
        
        private long AuthorizationIdField;
        
        private System.Nullable<System.DateTime> DischargeDateField;
        
        private int LineNumberField;
        
        private string ModifierCode1Field;
        
        private string RevenueCodeField;
        
        private string RevenueDescriptionField;
        
        private string ServiceCodeField;
        
        private System.DateTime ServiceDateField;
        
        private string ServiceDescriptionField;
        
        private string StatusField;
        
        private decimal UnitsField;
        
        private decimal UtilizedUnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AdmissionDate {
            get {
                return this.AdmissionDateField;
            }
            set {
                if ((this.AdmissionDateField.Equals(value) != true)) {
                    this.AdmissionDateField = value;
                    this.RaisePropertyChanged("AdmissionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizationId {
            get {
                return this.AuthorizationIdField;
            }
            set {
                if ((this.AuthorizationIdField.Equals(value) != true)) {
                    this.AuthorizationIdField = value;
                    this.RaisePropertyChanged("AuthorizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DischargeDate {
            get {
                return this.DischargeDateField;
            }
            set {
                if ((this.DischargeDateField.Equals(value) != true)) {
                    this.DischargeDateField = value;
                    this.RaisePropertyChanged("DischargeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineNumber {
            get {
                return this.LineNumberField;
            }
            set {
                if ((this.LineNumberField.Equals(value) != true)) {
                    this.LineNumberField = value;
                    this.RaisePropertyChanged("LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifierCode1 {
            get {
                return this.ModifierCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierCode1Field, value) != true)) {
                    this.ModifierCode1Field = value;
                    this.RaisePropertyChanged("ModifierCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueCode {
            get {
                return this.RevenueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueCodeField, value) != true)) {
                    this.RevenueCodeField = value;
                    this.RaisePropertyChanged("RevenueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueDescription {
            get {
                return this.RevenueDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueDescriptionField, value) != true)) {
                    this.RevenueDescriptionField = value;
                    this.RaisePropertyChanged("RevenueDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCode {
            get {
                return this.ServiceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCodeField, value) != true)) {
                    this.ServiceCodeField = value;
                    this.RaisePropertyChanged("ServiceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ServiceDate {
            get {
                return this.ServiceDateField;
            }
            set {
                if ((this.ServiceDateField.Equals(value) != true)) {
                    this.ServiceDateField = value;
                    this.RaisePropertyChanged("ServiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceDescription {
            get {
                return this.ServiceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceDescriptionField, value) != true)) {
                    this.ServiceDescriptionField = value;
                    this.RaisePropertyChanged("ServiceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UtilizedUnits {
            get {
                return this.UtilizedUnitsField;
            }
            set {
                if ((this.UtilizedUnitsField.Equals(value) != true)) {
                    this.UtilizedUnitsField = value;
                    this.RaisePropertyChanged("UtilizedUnits");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityNote", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class EntityNote : Mercury.Server.Application.CoreObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNoteContent> ContentsField;
        
        private string DataSourceField;
        
        private System.DateTime EffectiveDateField;
        
        private long EntityIdField;
        
        private Mercury.Server.Application.NoteImportance ImportanceField;
        
        private long NoteTypeIdField;
        
        private long RelatedEntityIdField;
        
        private long RelatedEntityObjectIdField;
        
        private Mercury.Server.Application.EntityType RelatedEntityTypeField;
        
        private long RelatedObjectIdField;
        
        private string RelatedObjectTypeField;
        
        private string SubjectField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNoteContent> Contents {
            get {
                return this.ContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentsField, value) != true)) {
                    this.ContentsField = value;
                    this.RaisePropertyChanged("Contents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.NoteImportance Importance {
            get {
                return this.ImportanceField;
            }
            set {
                if ((this.ImportanceField.Equals(value) != true)) {
                    this.ImportanceField = value;
                    this.RaisePropertyChanged("Importance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NoteTypeId {
            get {
                return this.NoteTypeIdField;
            }
            set {
                if ((this.NoteTypeIdField.Equals(value) != true)) {
                    this.NoteTypeIdField = value;
                    this.RaisePropertyChanged("NoteTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedEntityId {
            get {
                return this.RelatedEntityIdField;
            }
            set {
                if ((this.RelatedEntityIdField.Equals(value) != true)) {
                    this.RelatedEntityIdField = value;
                    this.RaisePropertyChanged("RelatedEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedEntityObjectId {
            get {
                return this.RelatedEntityObjectIdField;
            }
            set {
                if ((this.RelatedEntityObjectIdField.Equals(value) != true)) {
                    this.RelatedEntityObjectIdField = value;
                    this.RaisePropertyChanged("RelatedEntityObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType RelatedEntityType {
            get {
                return this.RelatedEntityTypeField;
            }
            set {
                if ((this.RelatedEntityTypeField.Equals(value) != true)) {
                    this.RelatedEntityTypeField = value;
                    this.RaisePropertyChanged("RelatedEntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedObjectId {
            get {
                return this.RelatedObjectIdField;
            }
            set {
                if ((this.RelatedObjectIdField.Equals(value) != true)) {
                    this.RelatedObjectIdField = value;
                    this.RaisePropertyChanged("RelatedObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedObjectType {
            get {
                return this.RelatedObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedObjectTypeField, value) != true)) {
                    this.RelatedObjectTypeField = value;
                    this.RaisePropertyChanged("RelatedObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityNoteContent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class EntityNoteContent : Mercury.Server.Application.CoreObject {
        
        private string ContentField;
        
        private long EntityNoteIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityNoteId {
            get {
                return this.EntityNoteIdField;
            }
            set {
                if ((this.EntityNoteIdField.Equals(value) != true)) {
                    this.EntityNoteIdField = value;
                    this.RaisePropertyChanged("EntityNoteId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityAddress", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class EntityAddress : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.EntityAddressType AddressTypeField;
        
        private string CityField;
        
        private string CountyField;
        
        private System.DateTime EffectiveDateField;
        
        private long EntityIdField;
        
        private decimal LatitudeField;
        
        private string Line1Field;
        
        private string Line2Field;
        
        private decimal LongitudeField;
        
        private string PostalCodeField;
        
        private string StateField;
        
        private System.DateTime TerminationDateField;
        
        private string ZipCodeField;
        
        private string ZipPlus4Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityAddressType AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((this.AddressTypeField.Equals(value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipPlus4 {
            get {
                return this.ZipPlus4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ZipPlus4Field, value) != true)) {
                    this.ZipPlus4Field = value;
                    this.RaisePropertyChanged("ZipPlus4");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityContact", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class EntityContact : Mercury.Server.Application.CoreObject {
        
        private System.DateTime ContactDateField;
        
        private Mercury.Server.Application.ContactOutcome ContactOutcomeField;
        
        private long ContactRegardingIdField;
        
        private Mercury.Server.Application.EntityContactType ContactTypeField;
        
        private string ContactedByNameField;
        
        private string DataSourceField;
        
        private Mercury.Server.Application.ContactDirection DirectionField;
        
        private long EntityContactInformationIdField;
        
        private long EntityIdField;
        
        private string RegardingField;
        
        private long RelatedEntityIdField;
        
        private long RelatedObjectIdField;
        
        private string RelatedObjectTypeField;
        
        private string RemarksField;
        
        private long ScriptEntityFormIdField;
        
        private bool SuccessfulField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ContactDate {
            get {
                return this.ContactDateField;
            }
            set {
                if ((this.ContactDateField.Equals(value) != true)) {
                    this.ContactDateField = value;
                    this.RaisePropertyChanged("ContactDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ContactOutcome ContactOutcome {
            get {
                return this.ContactOutcomeField;
            }
            set {
                if ((this.ContactOutcomeField.Equals(value) != true)) {
                    this.ContactOutcomeField = value;
                    this.RaisePropertyChanged("ContactOutcome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContactRegardingId {
            get {
                return this.ContactRegardingIdField;
            }
            set {
                if ((this.ContactRegardingIdField.Equals(value) != true)) {
                    this.ContactRegardingIdField = value;
                    this.RaisePropertyChanged("ContactRegardingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityContactType ContactType {
            get {
                return this.ContactTypeField;
            }
            set {
                if ((this.ContactTypeField.Equals(value) != true)) {
                    this.ContactTypeField = value;
                    this.RaisePropertyChanged("ContactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactedByName {
            get {
                return this.ContactedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactedByNameField, value) != true)) {
                    this.ContactedByNameField = value;
                    this.RaisePropertyChanged("ContactedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ContactDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityContactInformationId {
            get {
                return this.EntityContactInformationIdField;
            }
            set {
                if ((this.EntityContactInformationIdField.Equals(value) != true)) {
                    this.EntityContactInformationIdField = value;
                    this.RaisePropertyChanged("EntityContactInformationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regarding {
            get {
                return this.RegardingField;
            }
            set {
                if ((object.ReferenceEquals(this.RegardingField, value) != true)) {
                    this.RegardingField = value;
                    this.RaisePropertyChanged("Regarding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedEntityId {
            get {
                return this.RelatedEntityIdField;
            }
            set {
                if ((this.RelatedEntityIdField.Equals(value) != true)) {
                    this.RelatedEntityIdField = value;
                    this.RaisePropertyChanged("RelatedEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedObjectId {
            get {
                return this.RelatedObjectIdField;
            }
            set {
                if ((this.RelatedObjectIdField.Equals(value) != true)) {
                    this.RelatedObjectIdField = value;
                    this.RaisePropertyChanged("RelatedObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedObjectType {
            get {
                return this.RelatedObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedObjectTypeField, value) != true)) {
                    this.RelatedObjectTypeField = value;
                    this.RaisePropertyChanged("RelatedObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ScriptEntityFormId {
            get {
                return this.ScriptEntityFormIdField;
            }
            set {
                if ((this.ScriptEntityFormIdField.Equals(value) != true)) {
                    this.ScriptEntityFormIdField = value;
                    this.RaisePropertyChanged("ScriptEntityFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityContactInformation", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class EntityContactInformation : Mercury.Server.Application.CoreObject {
        
        private int ContactSequenceField;
        
        private Mercury.Server.Application.EntityContactType ContactTypeField;
        
        private System.DateTime EffectiveDateField;
        
        private string EmailField;
        
        private long EntityIdField;
        
        private string NumberField;
        
        private string NumberExtensionField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactSequence {
            get {
                return this.ContactSequenceField;
            }
            set {
                if ((this.ContactSequenceField.Equals(value) != true)) {
                    this.ContactSequenceField = value;
                    this.RaisePropertyChanged("ContactSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityContactType ContactType {
            get {
                return this.ContactTypeField;
            }
            set {
                if ((this.ContactTypeField.Equals(value) != true)) {
                    this.ContactTypeField = value;
                    this.RaisePropertyChanged("ContactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberExtension {
            get {
                return this.NumberExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberExtensionField, value) != true)) {
                    this.NumberExtensionField = value;
                    this.RaisePropertyChanged("NumberExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControl", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlLabel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Form))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSectionColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlButton))]
    public partial class FormControl : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.FormControlCapabilities CapabilitiesField;
        
        private System.Guid ControlIdField;
        
        private Mercury.Server.Application.FormControlType ControlTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControl> ControlsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlDataBinding> DataBindingsField;
        
        private bool EnabledField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventHandler> EventHandlersField;
        
        private Mercury.Server.Application.FormControlLabel LabelField;
        
        private Mercury.Server.Application.FormControlPosition PositionField;
        
        private bool ReadOnlyField;
        
        private bool RequiredField;
        
        private Mercury.Server.Application.FormControlStyle StyleField;
        
        private short TabIndexField;
        
        private bool VisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlCapabilities Capabilities {
            get {
                return this.CapabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CapabilitiesField, value) != true)) {
                    this.CapabilitiesField = value;
                    this.RaisePropertyChanged("Capabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ControlId {
            get {
                return this.ControlIdField;
            }
            set {
                if ((this.ControlIdField.Equals(value) != true)) {
                    this.ControlIdField = value;
                    this.RaisePropertyChanged("ControlId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlType ControlType {
            get {
                return this.ControlTypeField;
            }
            set {
                if ((this.ControlTypeField.Equals(value) != true)) {
                    this.ControlTypeField = value;
                    this.RaisePropertyChanged("ControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControl> Controls {
            get {
                return this.ControlsField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlsField, value) != true)) {
                    this.ControlsField = value;
                    this.RaisePropertyChanged("Controls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlDataBinding> DataBindings {
            get {
                return this.DataBindingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataBindingsField, value) != true)) {
                    this.DataBindingsField = value;
                    this.RaisePropertyChanged("DataBindings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventHandler> EventHandlers {
            get {
                return this.EventHandlersField;
            }
            set {
                if ((object.ReferenceEquals(this.EventHandlersField, value) != true)) {
                    this.EventHandlersField = value;
                    this.RaisePropertyChanged("EventHandlers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlLabel Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlPosition Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlStyle Style {
            get {
                return this.StyleField;
            }
            set {
                if ((object.ReferenceEquals(this.StyleField, value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TabIndex {
            get {
                return this.TabIndexField;
            }
            set {
                if ((this.TabIndexField.Equals(value) != true)) {
                    this.TabIndexField = value;
                    this.RaisePropertyChanged("TabIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlLabel", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlLabel : Mercury.Server.Application.FormControl {
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Form", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms")]
    public partial class Form : Mercury.Server.Application.FormControl {
        
        private bool AllowPrecompileEventsField;
        
        private long EntityFormIdField;
        
        private long EntityObjectIdField;
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventResult> EventResultsField;
        
        private long FormIdField;
        
        private Mercury.Server.Application.FormType FormTypeField;
        
        private Mercury.Server.Application.FormControlOrientation OrientationField;
        
        private Mercury.Server.Application.FormControlPaperSize PaperSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPrecompileEvents {
            get {
                return this.AllowPrecompileEventsField;
            }
            set {
                if ((this.AllowPrecompileEventsField.Equals(value) != true)) {
                    this.AllowPrecompileEventsField = value;
                    this.RaisePropertyChanged("AllowPrecompileEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityFormId {
            get {
                return this.EntityFormIdField;
            }
            set {
                if ((this.EntityFormIdField.Equals(value) != true)) {
                    this.EntityFormIdField = value;
                    this.RaisePropertyChanged("EntityFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityObjectId {
            get {
                return this.EntityObjectIdField;
            }
            set {
                if ((this.EntityObjectIdField.Equals(value) != true)) {
                    this.EntityObjectIdField = value;
                    this.RaisePropertyChanged("EntityObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventResult> EventResults {
            get {
                return this.EventResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventResultsField, value) != true)) {
                    this.EventResultsField = value;
                    this.RaisePropertyChanged("EventResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormType FormType {
            get {
                return this.FormTypeField;
            }
            set {
                if ((this.FormTypeField.Equals(value) != true)) {
                    this.FormTypeField = value;
                    this.RaisePropertyChanged("FormType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlOrientation Orientation {
            get {
                return this.OrientationField;
            }
            set {
                if ((this.OrientationField.Equals(value) != true)) {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlPaperSize PaperSize {
            get {
                return this.PaperSizeField;
            }
            set {
                if ((this.PaperSizeField.Equals(value) != true)) {
                    this.PaperSizeField = value;
                    this.RaisePropertyChanged("PaperSize");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSectionColumn", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlSectionColumn : Mercury.Server.Application.FormControl {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelection", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlSelection : Mercury.Server.Application.FormControl {
        
        private bool AllowCustomTextField;
        
        private int ColumnsField;
        
        private string CustomTextField;
        
        private Mercury.Server.Application.FormControlDataSource DataSourceField;
        
        private Mercury.Server.Application.FormControlSelectionDirection DirectionField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlSelectionItem> ItemsField;
        
        private int MaxLengthField;
        
        private Mercury.Server.Application.FormControlSelectionReferenceSource ReferenceSourceField;
        
        private int RowsField;
        
        private Mercury.Server.Application.FormControlSelectionMode SelectionModeField;
        
        private Mercury.Server.Application.FormControlSelectionType SelectionTypeField;
        
        private bool WrapField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowCustomText {
            get {
                return this.AllowCustomTextField;
            }
            set {
                if ((this.AllowCustomTextField.Equals(value) != true)) {
                    this.AllowCustomTextField = value;
                    this.RaisePropertyChanged("AllowCustomText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((this.ColumnsField.Equals(value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomText {
            get {
                return this.CustomTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomTextField, value) != true)) {
                    this.CustomTextField = value;
                    this.RaisePropertyChanged("CustomText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlDataSource DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((this.DataSourceField.Equals(value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlSelectionDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlSelectionItem> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                if ((this.MaxLengthField.Equals(value) != true)) {
                    this.MaxLengthField = value;
                    this.RaisePropertyChanged("MaxLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlSelectionReferenceSource ReferenceSource {
            get {
                return this.ReferenceSourceField;
            }
            set {
                if ((this.ReferenceSourceField.Equals(value) != true)) {
                    this.ReferenceSourceField = value;
                    this.RaisePropertyChanged("ReferenceSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlSelectionMode SelectionMode {
            get {
                return this.SelectionModeField;
            }
            set {
                if ((this.SelectionModeField.Equals(value) != true)) {
                    this.SelectionModeField = value;
                    this.RaisePropertyChanged("SelectionMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlSelectionType SelectionType {
            get {
                return this.SelectionTypeField;
            }
            set {
                if ((this.SelectionTypeField.Equals(value) != true)) {
                    this.SelectionTypeField = value;
                    this.RaisePropertyChanged("SelectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Wrap {
            get {
                return this.WrapField;
            }
            set {
                if ((this.WrapField.Equals(value) != true)) {
                    this.WrapField = value;
                    this.RaisePropertyChanged("Wrap");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlEntity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlEntity : Mercury.Server.Application.FormControl {
        
        private bool AllowCustomEntityNameField;
        
        private Mercury.Server.Application.FormControlEntityDisplayAgeFormat DisplayAgeFormatField;
        
        private Mercury.Server.Application.FormControlEntityDisplayStyle DisplayStyleField;
        
        private string EntityNameField;
        
        private long EntityObjectIdField;
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowCustomEntityName {
            get {
                return this.AllowCustomEntityNameField;
            }
            set {
                if ((this.AllowCustomEntityNameField.Equals(value) != true)) {
                    this.AllowCustomEntityNameField = value;
                    this.RaisePropertyChanged("AllowCustomEntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlEntityDisplayAgeFormat DisplayAgeFormat {
            get {
                return this.DisplayAgeFormatField;
            }
            set {
                if ((this.DisplayAgeFormatField.Equals(value) != true)) {
                    this.DisplayAgeFormatField = value;
                    this.RaisePropertyChanged("DisplayAgeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlEntityDisplayStyle DisplayStyle {
            get {
                return this.DisplayStyleField;
            }
            set {
                if ((this.DisplayStyleField.Equals(value) != true)) {
                    this.DisplayStyleField = value;
                    this.RaisePropertyChanged("DisplayStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityObjectId {
            get {
                return this.EntityObjectIdField;
            }
            set {
                if ((this.EntityObjectIdField.Equals(value) != true)) {
                    this.EntityObjectIdField = value;
                    this.RaisePropertyChanged("EntityObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSection", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlSection : Mercury.Server.Application.FormControl {
        
        private bool PageBreakAfterSectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PageBreakAfterSection {
            get {
                return this.PageBreakAfterSectionField;
            }
            set {
                if ((this.PageBreakAfterSectionField.Equals(value) != true)) {
                    this.PageBreakAfterSectionField = value;
                    this.RaisePropertyChanged("PageBreakAfterSection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlAddress", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlAddress : Mercury.Server.Application.FormControl {
        
        private Mercury.Server.Application.EntityAddressType AddressTypeField;
        
        private string CityField;
        
        private System.DateTime EffectiveDateField;
        
        private long EntityAddressIdField;
        
        private string Line1Field;
        
        private string Line2Field;
        
        private string PostalCodeField;
        
        private string StateField;
        
        private System.DateTime TerminationDateField;
        
        private string ZipCodeField;
        
        private string ZipPlus4Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityAddressType AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((this.AddressTypeField.Equals(value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityAddressId {
            get {
                return this.EntityAddressIdField;
            }
            set {
                if ((this.EntityAddressIdField.Equals(value) != true)) {
                    this.EntityAddressIdField = value;
                    this.RaisePropertyChanged("EntityAddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipPlus4 {
            get {
                return this.ZipPlus4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ZipPlus4Field, value) != true)) {
                    this.ZipPlus4Field = value;
                    this.RaisePropertyChanged("ZipPlus4");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlMetric", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlMetric : Mercury.Server.Application.FormControl {
        
        private long MemberIdField;
        
        private long MemberMetricIdField;
        
        private System.Nullable<System.DateTime> MetricDateField;
        
        private long MetricIdField;
        
        private string MetricNameField;
        
        private decimal MetricValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberMetricId {
            get {
                return this.MemberMetricIdField;
            }
            set {
                if ((this.MemberMetricIdField.Equals(value) != true)) {
                    this.MemberMetricIdField = value;
                    this.RaisePropertyChanged("MemberMetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MetricDate {
            get {
                return this.MetricDateField;
            }
            set {
                if ((this.MetricDateField.Equals(value) != true)) {
                    this.MetricDateField = value;
                    this.RaisePropertyChanged("MetricDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MetricId {
            get {
                return this.MetricIdField;
            }
            set {
                if ((this.MetricIdField.Equals(value) != true)) {
                    this.MetricIdField = value;
                    this.RaisePropertyChanged("MetricId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetricName {
            get {
                return this.MetricNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MetricNameField, value) != true)) {
                    this.MetricNameField = value;
                    this.RaisePropertyChanged("MetricName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MetricValue {
            get {
                return this.MetricValueField;
            }
            set {
                if ((this.MetricValueField.Equals(value) != true)) {
                    this.MetricValueField = value;
                    this.RaisePropertyChanged("MetricValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlService", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlService : Mercury.Server.Application.FormControl {
        
        private long MemberIdField;
        
        private long MemberServiceIdField;
        
        private System.Nullable<System.DateTime> MostRecentMemberServiceDateField;
        
        private bool MostRecentMemberServiceDateVisibleField;
        
        private long MostRecentMemberServiceIdField;
        
        private System.Nullable<System.DateTime> ServiceDateField;
        
        private bool ServiceDateVisibleField;
        
        private long ServiceIdField;
        
        private string ServiceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberServiceId {
            get {
                return this.MemberServiceIdField;
            }
            set {
                if ((this.MemberServiceIdField.Equals(value) != true)) {
                    this.MemberServiceIdField = value;
                    this.RaisePropertyChanged("MemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MostRecentMemberServiceDate {
            get {
                return this.MostRecentMemberServiceDateField;
            }
            set {
                if ((this.MostRecentMemberServiceDateField.Equals(value) != true)) {
                    this.MostRecentMemberServiceDateField = value;
                    this.RaisePropertyChanged("MostRecentMemberServiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MostRecentMemberServiceDateVisible {
            get {
                return this.MostRecentMemberServiceDateVisibleField;
            }
            set {
                if ((this.MostRecentMemberServiceDateVisibleField.Equals(value) != true)) {
                    this.MostRecentMemberServiceDateVisibleField = value;
                    this.RaisePropertyChanged("MostRecentMemberServiceDateVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MostRecentMemberServiceId {
            get {
                return this.MostRecentMemberServiceIdField;
            }
            set {
                if ((this.MostRecentMemberServiceIdField.Equals(value) != true)) {
                    this.MostRecentMemberServiceIdField = value;
                    this.RaisePropertyChanged("MostRecentMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceDate {
            get {
                return this.ServiceDateField;
            }
            set {
                if ((this.ServiceDateField.Equals(value) != true)) {
                    this.ServiceDateField = value;
                    this.RaisePropertyChanged("ServiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServiceDateVisible {
            get {
                return this.ServiceDateVisibleField;
            }
            set {
                if ((this.ServiceDateVisibleField.Equals(value) != true)) {
                    this.ServiceDateVisibleField = value;
                    this.RaisePropertyChanged("ServiceDateVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlInput", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlInput : Mercury.Server.Application.FormControl {
        
        private Mercury.Server.Application.FormControlSpinnerButtonPosition ButtonPositionField;
        
        private int ColumnsField;
        
        private string DateFormatField;
        
        private string DisplayDateFormatField;
        
        private string EmptyMessageField;
        
        private Mercury.Server.Application.FormControlInputType InputTypeField;
        
        private string MaskField;
        
        private System.DateTime MaxDateField;
        
        private int MaxLengthField;
        
        private double MaxValueField;
        
        private System.DateTime MinDateField;
        
        private double MinValueField;
        
        private Mercury.Server.Application.FormControlNumericType NumericTypeField;
        
        private int RowsField;
        
        private Mercury.Server.Application.FormControlSelectionOnFocus SelectionOnFocusField;
        
        private bool ShowSpinButtonsField;
        
        private string TextField;
        
        private Mercury.Server.Application.FormControlTextMode TextModeField;
        
        private string ValidationField;
        
        private bool WrapField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlSpinnerButtonPosition ButtonPosition {
            get {
                return this.ButtonPositionField;
            }
            set {
                if ((this.ButtonPositionField.Equals(value) != true)) {
                    this.ButtonPositionField = value;
                    this.RaisePropertyChanged("ButtonPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((this.ColumnsField.Equals(value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateFormat {
            get {
                return this.DateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DateFormatField, value) != true)) {
                    this.DateFormatField = value;
                    this.RaisePropertyChanged("DateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayDateFormat {
            get {
                return this.DisplayDateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayDateFormatField, value) != true)) {
                    this.DisplayDateFormatField = value;
                    this.RaisePropertyChanged("DisplayDateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmptyMessage {
            get {
                return this.EmptyMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.EmptyMessageField, value) != true)) {
                    this.EmptyMessageField = value;
                    this.RaisePropertyChanged("EmptyMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlInputType InputType {
            get {
                return this.InputTypeField;
            }
            set {
                if ((this.InputTypeField.Equals(value) != true)) {
                    this.InputTypeField = value;
                    this.RaisePropertyChanged("InputType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskField, value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaxDate {
            get {
                return this.MaxDateField;
            }
            set {
                if ((this.MaxDateField.Equals(value) != true)) {
                    this.MaxDateField = value;
                    this.RaisePropertyChanged("MaxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                if ((this.MaxLengthField.Equals(value) != true)) {
                    this.MaxLengthField = value;
                    this.RaisePropertyChanged("MaxLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MinDate {
            get {
                return this.MinDateField;
            }
            set {
                if ((this.MinDateField.Equals(value) != true)) {
                    this.MinDateField = value;
                    this.RaisePropertyChanged("MinDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlNumericType NumericType {
            get {
                return this.NumericTypeField;
            }
            set {
                if ((this.NumericTypeField.Equals(value) != true)) {
                    this.NumericTypeField = value;
                    this.RaisePropertyChanged("NumericType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlSelectionOnFocus SelectionOnFocus {
            get {
                return this.SelectionOnFocusField;
            }
            set {
                if ((this.SelectionOnFocusField.Equals(value) != true)) {
                    this.SelectionOnFocusField = value;
                    this.RaisePropertyChanged("SelectionOnFocus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowSpinButtons {
            get {
                return this.ShowSpinButtonsField;
            }
            set {
                if ((this.ShowSpinButtonsField.Equals(value) != true)) {
                    this.ShowSpinButtonsField = value;
                    this.RaisePropertyChanged("ShowSpinButtons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlTextMode TextMode {
            get {
                return this.TextModeField;
            }
            set {
                if ((this.TextModeField.Equals(value) != true)) {
                    this.TextModeField = value;
                    this.RaisePropertyChanged("TextMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Validation {
            get {
                return this.ValidationField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationField, value) != true)) {
                    this.ValidationField = value;
                    this.RaisePropertyChanged("Validation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Wrap {
            get {
                return this.WrapField;
            }
            set {
                if ((this.WrapField.Equals(value) != true)) {
                    this.WrapField = value;
                    this.RaisePropertyChanged("Wrap");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlCollection", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlCollection : Mercury.Server.Application.FormControl {
        
        private Mercury.Server.Application.FormControlCollectionType CollectionTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<long> ItemsField;
        
        private long SelectedItemField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlCollectionType CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<long> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SelectedItem {
            get {
                return this.SelectedItemField;
            }
            set {
                if ((this.SelectedItemField.Equals(value) != true)) {
                    this.SelectedItemField = value;
                    this.RaisePropertyChanged("SelectedItem");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlText", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlText : Mercury.Server.Application.FormControl {
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlButton", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Controls")]
    public partial class FormControlButton : Mercury.Server.Application.FormControl {
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Activity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelActivity))]
    public partial class Activity : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Action ActionField;
        
        private Mercury.Server.Application.ActivityType ActivityTypeField;
        
        private Mercury.Server.Application.ActivityAnchorDate AnchorDateField;
        
        private Mercury.Server.Application.DateQualifier ConstraintQualifierField;
        
        private int ConstraintValueField;
        
        private Mercury.Server.Application.ActivityAnchorDate InitialAnchorDateField;
        
        private Mercury.Server.Application.ActivityPerformActionDate PerformActionDateField;
        
        private bool ReoccurringField;
        
        private Mercury.Server.Application.DateQualifier ScheduleQualifierField;
        
        private Mercury.Server.Application.ActivityScheduleType ScheduleTypeField;
        
        private int ScheduleValueField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ActivityThreshold> ThresholdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Action Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActivityType ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((this.ActivityTypeField.Equals(value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActivityAnchorDate AnchorDate {
            get {
                return this.AnchorDateField;
            }
            set {
                if ((this.AnchorDateField.Equals(value) != true)) {
                    this.AnchorDateField = value;
                    this.RaisePropertyChanged("AnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ConstraintQualifier {
            get {
                return this.ConstraintQualifierField;
            }
            set {
                if ((this.ConstraintQualifierField.Equals(value) != true)) {
                    this.ConstraintQualifierField = value;
                    this.RaisePropertyChanged("ConstraintQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConstraintValue {
            get {
                return this.ConstraintValueField;
            }
            set {
                if ((this.ConstraintValueField.Equals(value) != true)) {
                    this.ConstraintValueField = value;
                    this.RaisePropertyChanged("ConstraintValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActivityAnchorDate InitialAnchorDate {
            get {
                return this.InitialAnchorDateField;
            }
            set {
                if ((this.InitialAnchorDateField.Equals(value) != true)) {
                    this.InitialAnchorDateField = value;
                    this.RaisePropertyChanged("InitialAnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActivityPerformActionDate PerformActionDate {
            get {
                return this.PerformActionDateField;
            }
            set {
                if ((this.PerformActionDateField.Equals(value) != true)) {
                    this.PerformActionDateField = value;
                    this.RaisePropertyChanged("PerformActionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reoccurring {
            get {
                return this.ReoccurringField;
            }
            set {
                if ((this.ReoccurringField.Equals(value) != true)) {
                    this.ReoccurringField = value;
                    this.RaisePropertyChanged("Reoccurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ScheduleQualifier {
            get {
                return this.ScheduleQualifierField;
            }
            set {
                if ((this.ScheduleQualifierField.Equals(value) != true)) {
                    this.ScheduleQualifierField = value;
                    this.RaisePropertyChanged("ScheduleQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActivityScheduleType ScheduleType {
            get {
                return this.ScheduleTypeField;
            }
            set {
                if ((this.ScheduleTypeField.Equals(value) != true)) {
                    this.ScheduleTypeField = value;
                    this.RaisePropertyChanged("ScheduleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleValue {
            get {
                return this.ScheduleValueField;
            }
            set {
                if ((this.ScheduleValueField.Equals(value) != true)) {
                    this.ScheduleValueField = value;
                    this.RaisePropertyChanged("ScheduleValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ActivityThreshold> Thresholds {
            get {
                return this.ThresholdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThresholdsField, value) != true)) {
                    this.ThresholdsField = value;
                    this.RaisePropertyChanged("Thresholds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityThreshold", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity")]
    public partial class ActivityThreshold : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Action ActionField;
        
        private long ActivityIdField;
        
        private Mercury.Server.Application.DateQualifier RelativeDateQualifierField;
        
        private int RelativeDateValueField;
        
        private Mercury.Server.Application.ActivityStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Action Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier RelativeDateQualifier {
            get {
                return this.RelativeDateQualifierField;
            }
            set {
                if ((this.RelativeDateQualifierField.Equals(value) != true)) {
                    this.RelativeDateQualifierField = value;
                    this.RaisePropertyChanged("RelativeDateQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelativeDateValue {
            get {
                return this.RelativeDateValueField;
            }
            set {
                if ((this.RelativeDateValueField.Equals(value) != true)) {
                    this.RelativeDateValueField = value;
                    this.RaisePropertyChanged("RelativeDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActivityStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlanGoalActivity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoalActivity))]
    public partial class CarePlanGoalActivity : Mercury.Server.Application.Activity {
        
        private Mercury.Server.Application.CarePlanGoalActivityType CarePlanGoalActivityTypeField;
        
        private long CarePlanGoalIdField;
        
        private string ClinicalNarrativeField;
        
        private string CommonNarrativeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.CarePlanGoalActivityType CarePlanGoalActivityType {
            get {
                return this.CarePlanGoalActivityTypeField;
            }
            set {
                if ((this.CarePlanGoalActivityTypeField.Equals(value) != true)) {
                    this.CarePlanGoalActivityTypeField = value;
                    this.RaisePropertyChanged("CarePlanGoalActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CarePlanGoalId {
            get {
                return this.CarePlanGoalIdField;
            }
            set {
                if ((this.CarePlanGoalIdField.Equals(value) != true)) {
                    this.CarePlanGoalIdField = value;
                    this.RaisePropertyChanged("CarePlanGoalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicalNarrative {
            get {
                return this.ClinicalNarrativeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalNarrativeField, value) != true)) {
                    this.ClinicalNarrativeField = value;
                    this.RaisePropertyChanged("ClinicalNarrative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommonNarrative {
            get {
                return this.CommonNarrativeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonNarrativeField, value) != true)) {
                    this.CommonNarrativeField = value;
                    this.RaisePropertyChanged("CommonNarrative");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberCaseCarePlanGoalActivity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Case")]
    public partial class MemberCaseCarePlanGoalActivity : Mercury.Server.Application.CarePlanGoalActivity {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CareLevelActivity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    public partial class CareLevelActivity : Mercury.Server.Application.Activity {
        
        private long CareLevelIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CareLevelId {
            get {
                return this.CareLevelIdField;
            }
            set {
                if ((this.CareLevelIdField.Equals(value) != true)) {
                    this.CareLevelIdField = value;
                    this.RaisePropertyChanged("CareLevelId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorrespondenceContent", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Reference")]
    public partial class CorrespondenceContent : Mercury.Server.Application.CoreObject {
        
        private string AttachmentBase64Field;
        
        private string AttachmentXpsBase64Field;
        
        private int ContentSequenceField;
        
        private Mercury.Server.Application.CorrespondenceContentType ContentTypeField;
        
        private string CorrespondenceContentPathField;
        
        private long CorrespondenceIdField;
        
        private bool IsAttachmentCompressedField;
        
        private long ReportingServerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentBase64 {
            get {
                return this.AttachmentBase64Field;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentBase64Field, value) != true)) {
                    this.AttachmentBase64Field = value;
                    this.RaisePropertyChanged("AttachmentBase64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentXpsBase64 {
            get {
                return this.AttachmentXpsBase64Field;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentXpsBase64Field, value) != true)) {
                    this.AttachmentXpsBase64Field = value;
                    this.RaisePropertyChanged("AttachmentXpsBase64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContentSequence {
            get {
                return this.ContentSequenceField;
            }
            set {
                if ((this.ContentSequenceField.Equals(value) != true)) {
                    this.ContentSequenceField = value;
                    this.RaisePropertyChanged("ContentSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.CorrespondenceContentType ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((this.ContentTypeField.Equals(value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrespondenceContentPath {
            get {
                return this.CorrespondenceContentPathField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondenceContentPathField, value) != true)) {
                    this.CorrespondenceContentPathField = value;
                    this.RaisePropertyChanged("CorrespondenceContentPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorrespondenceId {
            get {
                return this.CorrespondenceIdField;
            }
            set {
                if ((this.CorrespondenceIdField.Equals(value) != true)) {
                    this.CorrespondenceIdField = value;
                    this.RaisePropertyChanged("CorrespondenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAttachmentCompressed {
            get {
                return this.IsAttachmentCompressedField;
            }
            set {
                if ((this.IsAttachmentCompressedField.Equals(value) != true)) {
                    this.IsAttachmentCompressedField = value;
                    this.RaisePropertyChanged("IsAttachmentCompressed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReportingServerId {
            get {
                return this.ReportingServerIdField;
            }
            set {
                if ((this.ReportingServerIdField.Equals(value) != true)) {
                    this.ReportingServerIdField = value;
                    this.RaisePropertyChanged("ReportingServerId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionThreshold", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action")]
    public partial class ActionThreshold : Mercury.Server.Application.CoreObject {
        
        private Mercury.Server.Application.Action ActionField;
        
        private long OwnerObjectIdField;
        
        private Mercury.Server.Application.DateQualifier RelativeDateQualifierField;
        
        private int RelativeDateValueField;
        
        private Mercury.Server.Application.ActionThresholdStatus StatusField;
        
        private Mercury.Server.Application.ActionThresholdType ThresholdTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Action Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OwnerObjectId {
            get {
                return this.OwnerObjectIdField;
            }
            set {
                if ((this.OwnerObjectIdField.Equals(value) != true)) {
                    this.OwnerObjectIdField = value;
                    this.RaisePropertyChanged("OwnerObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier RelativeDateQualifier {
            get {
                return this.RelativeDateQualifierField;
            }
            set {
                if ((this.RelativeDateQualifierField.Equals(value) != true)) {
                    this.RelativeDateQualifierField = value;
                    this.RaisePropertyChanged("RelativeDateQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelativeDateValue {
            get {
                return this.RelativeDateValueField;
            }
            set {
                if ((this.RelativeDateValueField.Equals(value) != true)) {
                    this.RelativeDateValueField = value;
                    this.RaisePropertyChanged("RelativeDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActionThresholdStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActionThresholdType ThresholdType {
            get {
                return this.ThresholdTypeField;
            }
            set {
                if ((this.ThresholdTypeField.Equals(value) != true)) {
                    this.ThresholdTypeField = value;
                    this.RaisePropertyChanged("ThresholdType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowStep", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows")]
    public partial class WorkflowStep : Mercury.Server.Application.CoreObject {
        
        private System.DateTime StepDateField;
        
        private int StepSequenceField;
        
        private Mercury.Server.Application.WorkflowStepStatus StepStatusField;
        
        private string UserDisplayNameField;
        
        private long WorkQueueItemIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StepDate {
            get {
                return this.StepDateField;
            }
            set {
                if ((this.StepDateField.Equals(value) != true)) {
                    this.StepDateField = value;
                    this.RaisePropertyChanged("StepDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StepSequence {
            get {
                return this.StepSequenceField;
            }
            set {
                if ((this.StepSequenceField.Equals(value) != true)) {
                    this.StepSequenceField = value;
                    this.RaisePropertyChanged("StepSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkflowStepStatus StepStatus {
            get {
                return this.StepStatusField;
            }
            set {
                if ((this.StepStatusField.Equals(value) != true)) {
                    this.StepStatusField = value;
                    this.RaisePropertyChanged("StepStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDisplayName {
            get {
                return this.UserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDisplayNameField, value) != true)) {
                    this.UserDisplayNameField = value;
                    this.RaisePropertyChanged("UserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueItemId {
            get {
                return this.WorkQueueItemIdField;
            }
            set {
                if ((this.WorkQueueItemIdField.Equals(value) != true)) {
                    this.WorkQueueItemIdField = value;
                    this.RaisePropertyChanged("WorkQueueItemId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoreExtensibleObject ", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreConfigurationObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Contract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Program))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Population))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Correspondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegarding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Printer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServer))]
    public partial class CoreExtensibleObject : Mercury.Server.Application.CoreObject {
        
        private System.Collections.Generic.Dictionary<string, string> ExtendedPropertiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ExtendedProperties {
            get {
                return this.ExtendedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedPropertiesField, value) != true)) {
                    this.ExtendedPropertiesField = value;
                    this.RaisePropertyChanged("ExtendedProperties");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberCase", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Case")]
    public partial class MemberCase : Mercury.Server.Application.CoreExtensibleObject {
        
        private System.Nullable<System.DateTime> AssignedToDateField;
        
        private long AssignedToSecurityAuthorityIdField;
        
        private string AssignedToUserAccountIdField;
        
        private string AssignedToUserAccountNameField;
        
        private string AssignedToUserDisplayNameField;
        
        private System.Nullable<System.DateTime> AssignedToWorkTeamDateField;
        
        private long AssignedToWorkTeamIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlan> CarePlansField;
        
        private System.DateTime EffectiveDateField;
        
        private System.Nullable<System.DateTime> LockedByDateField;
        
        private long LockedBySecurityAuthorityIdField;
        
        private string LockedByUserAccountIdField;
        
        private string LockedByUserAccountNameField;
        
        private string LockedByUserDisplayNameField;
        
        private long MemberIdField;
        
        private string ReferenceNumberField;
        
        private Mercury.Server.Application.CaseStatus StatusField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedToDate {
            get {
                return this.AssignedToDateField;
            }
            set {
                if ((this.AssignedToDateField.Equals(value) != true)) {
                    this.AssignedToDateField = value;
                    this.RaisePropertyChanged("AssignedToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedToSecurityAuthorityId {
            get {
                return this.AssignedToSecurityAuthorityIdField;
            }
            set {
                if ((this.AssignedToSecurityAuthorityIdField.Equals(value) != true)) {
                    this.AssignedToSecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("AssignedToSecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountId {
            get {
                return this.AssignedToUserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountIdField, value) != true)) {
                    this.AssignedToUserAccountIdField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountName {
            get {
                return this.AssignedToUserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountNameField, value) != true)) {
                    this.AssignedToUserAccountNameField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserDisplayName {
            get {
                return this.AssignedToUserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserDisplayNameField, value) != true)) {
                    this.AssignedToUserDisplayNameField = value;
                    this.RaisePropertyChanged("AssignedToUserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedToWorkTeamDate {
            get {
                return this.AssignedToWorkTeamDateField;
            }
            set {
                if ((this.AssignedToWorkTeamDateField.Equals(value) != true)) {
                    this.AssignedToWorkTeamDateField = value;
                    this.RaisePropertyChanged("AssignedToWorkTeamDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedToWorkTeamId {
            get {
                return this.AssignedToWorkTeamIdField;
            }
            set {
                if ((this.AssignedToWorkTeamIdField.Equals(value) != true)) {
                    this.AssignedToWorkTeamIdField = value;
                    this.RaisePropertyChanged("AssignedToWorkTeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlan> CarePlans {
            get {
                return this.CarePlansField;
            }
            set {
                if ((object.ReferenceEquals(this.CarePlansField, value) != true)) {
                    this.CarePlansField = value;
                    this.RaisePropertyChanged("CarePlans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockedByDate {
            get {
                return this.LockedByDateField;
            }
            set {
                if ((this.LockedByDateField.Equals(value) != true)) {
                    this.LockedByDateField = value;
                    this.RaisePropertyChanged("LockedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LockedBySecurityAuthorityId {
            get {
                return this.LockedBySecurityAuthorityIdField;
            }
            set {
                if ((this.LockedBySecurityAuthorityIdField.Equals(value) != true)) {
                    this.LockedBySecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("LockedBySecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedByUserAccountId {
            get {
                return this.LockedByUserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByUserAccountIdField, value) != true)) {
                    this.LockedByUserAccountIdField = value;
                    this.RaisePropertyChanged("LockedByUserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedByUserAccountName {
            get {
                return this.LockedByUserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByUserAccountNameField, value) != true)) {
                    this.LockedByUserAccountNameField = value;
                    this.RaisePropertyChanged("LockedByUserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockedByUserDisplayName {
            get {
                return this.LockedByUserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByUserDisplayNameField, value) != true)) {
                    this.LockedByUserDisplayNameField = value;
                    this.RaisePropertyChanged("LockedByUserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.CaseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItem", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueItem : Mercury.Server.Application.CoreExtensibleObject {
        
        private System.DateTime AddedDateField;
        
        private System.Nullable<System.DateTime> AssignedToDateField;
        
        private long AssignedToSecurityAuthorityIdField;
        
        private string AssignedToUserAccountIdField;
        
        private string AssignedToUserAccountNameField;
        
        private string AssignedToUserDisplayNameField;
        
        private System.Nullable<System.DateTime> CompletionDateField;
        
        private System.DateTime ConstraintDateField;
        
        private System.DateTime DueDateField;
        
        private string ItemGroupKeyField;
        
        private long ItemObjectIdField;
        
        private string ItemObjectTypeField;
        
        private System.Nullable<System.DateTime> LastWorkedDateField;
        
        private System.DateTime MilestoneDateField;
        
        private int PriorityField;
        
        private System.DateTime ThresholdDateField;
        
        private long WorkOutcomeIdField;
        
        private long WorkQueueIdField;
        
        private Mercury.Server.Application.CalendarDayOfWeekTimes WorkTimeRestrictionsField;
        
        private System.Guid WorkflowInstanceIdField;
        
        private string WorkflowLastStepField;
        
        private string WorkflowNextStepField;
        
        private string WorkflowStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedToDate {
            get {
                return this.AssignedToDateField;
            }
            set {
                if ((this.AssignedToDateField.Equals(value) != true)) {
                    this.AssignedToDateField = value;
                    this.RaisePropertyChanged("AssignedToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedToSecurityAuthorityId {
            get {
                return this.AssignedToSecurityAuthorityIdField;
            }
            set {
                if ((this.AssignedToSecurityAuthorityIdField.Equals(value) != true)) {
                    this.AssignedToSecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("AssignedToSecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountId {
            get {
                return this.AssignedToUserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountIdField, value) != true)) {
                    this.AssignedToUserAccountIdField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountName {
            get {
                return this.AssignedToUserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountNameField, value) != true)) {
                    this.AssignedToUserAccountNameField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserDisplayName {
            get {
                return this.AssignedToUserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserDisplayNameField, value) != true)) {
                    this.AssignedToUserDisplayNameField = value;
                    this.RaisePropertyChanged("AssignedToUserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.CompletionDateField;
            }
            set {
                if ((this.CompletionDateField.Equals(value) != true)) {
                    this.CompletionDateField = value;
                    this.RaisePropertyChanged("CompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConstraintDate {
            get {
                return this.ConstraintDateField;
            }
            set {
                if ((this.ConstraintDateField.Equals(value) != true)) {
                    this.ConstraintDateField = value;
                    this.RaisePropertyChanged("ConstraintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemGroupKey {
            get {
                return this.ItemGroupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemGroupKeyField, value) != true)) {
                    this.ItemGroupKeyField = value;
                    this.RaisePropertyChanged("ItemGroupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemObjectId {
            get {
                return this.ItemObjectIdField;
            }
            set {
                if ((this.ItemObjectIdField.Equals(value) != true)) {
                    this.ItemObjectIdField = value;
                    this.RaisePropertyChanged("ItemObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemObjectType {
            get {
                return this.ItemObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemObjectTypeField, value) != true)) {
                    this.ItemObjectTypeField = value;
                    this.RaisePropertyChanged("ItemObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastWorkedDate {
            get {
                return this.LastWorkedDateField;
            }
            set {
                if ((this.LastWorkedDateField.Equals(value) != true)) {
                    this.LastWorkedDateField = value;
                    this.RaisePropertyChanged("LastWorkedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MilestoneDate {
            get {
                return this.MilestoneDateField;
            }
            set {
                if ((this.MilestoneDateField.Equals(value) != true)) {
                    this.MilestoneDateField = value;
                    this.RaisePropertyChanged("MilestoneDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ThresholdDate {
            get {
                return this.ThresholdDateField;
            }
            set {
                if ((this.ThresholdDateField.Equals(value) != true)) {
                    this.ThresholdDateField = value;
                    this.RaisePropertyChanged("ThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkOutcomeId {
            get {
                return this.WorkOutcomeIdField;
            }
            set {
                if ((this.WorkOutcomeIdField.Equals(value) != true)) {
                    this.WorkOutcomeIdField = value;
                    this.RaisePropertyChanged("WorkOutcomeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueId {
            get {
                return this.WorkQueueIdField;
            }
            set {
                if ((this.WorkQueueIdField.Equals(value) != true)) {
                    this.WorkQueueIdField = value;
                    this.RaisePropertyChanged("WorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.CalendarDayOfWeekTimes WorkTimeRestrictions {
            get {
                return this.WorkTimeRestrictionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTimeRestrictionsField, value) != true)) {
                    this.WorkTimeRestrictionsField = value;
                    this.RaisePropertyChanged("WorkTimeRestrictions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WorkflowInstanceId {
            get {
                return this.WorkflowInstanceIdField;
            }
            set {
                if ((this.WorkflowInstanceIdField.Equals(value) != true)) {
                    this.WorkflowInstanceIdField = value;
                    this.RaisePropertyChanged("WorkflowInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowLastStep {
            get {
                return this.WorkflowLastStepField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowLastStepField, value) != true)) {
                    this.WorkflowLastStepField = value;
                    this.RaisePropertyChanged("WorkflowLastStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowNextStep {
            get {
                return this.WorkflowNextStepField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowNextStepField, value) != true)) {
                    this.WorkflowNextStepField = value;
                    this.RaisePropertyChanged("WorkflowNextStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowStatus {
            get {
                return this.WorkflowStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowStatusField, value) != true)) {
                    this.WorkflowStatusField = value;
                    this.RaisePropertyChanged("WorkflowStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityCorrespondence", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity")]
    public partial class EntityCorrespondence : Mercury.Server.Application.CoreExtensibleObject {
        
        private string AddressCityField;
        
        private string AddressLine1Field;
        
        private string AddressLine2Field;
        
        private string AddressPostalCodeField;
        
        private string AddressStateField;
        
        private string AddressZipCodeField;
        
        private string AddressZipPlus4Field;
        
        private string AttentionField;
        
        private System.Nullable<System.DateTime> AutomationDateField;
        
        private string AutomationExceptionField;
        
        private System.Guid AutomationIdField;
        
        private Mercury.Server.Application.AutomationStatus AutomationStatusField;
        
        private string ContactEmailField;
        
        private string ContactFaxNumberField;
        
        private Mercury.Server.Application.EntityContactType ContactTypeField;
        
        private long CorrespondenceIdField;
        
        private string CorrespondenceNameField;
        
        private double CorrespondenceVersionField;
        
        private long EntityAddressIdField;
        
        private long EntityContactInformationIdField;
        
        private long EntityFormIdField;
        
        private long EntityIdField;
        
        private bool HasImageField;
        
        private System.DateTime ReadyToSendDateField;
        
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        private long RelatedEntityIdField;
        
        private long RelatedObjectIdField;
        
        private string RelatedObjectTypeField;
        
        private string RemarksField;
        
        private System.Nullable<System.DateTime> ReturnedDateField;
        
        private System.Nullable<System.DateTime> SentDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressCity {
            get {
                return this.AddressCityField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressCityField, value) != true)) {
                    this.AddressCityField = value;
                    this.RaisePropertyChanged("AddressCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressPostalCode {
            get {
                return this.AddressPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressPostalCodeField, value) != true)) {
                    this.AddressPostalCodeField = value;
                    this.RaisePropertyChanged("AddressPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressState {
            get {
                return this.AddressStateField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressStateField, value) != true)) {
                    this.AddressStateField = value;
                    this.RaisePropertyChanged("AddressState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressZipCode {
            get {
                return this.AddressZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressZipCodeField, value) != true)) {
                    this.AddressZipCodeField = value;
                    this.RaisePropertyChanged("AddressZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressZipPlus4 {
            get {
                return this.AddressZipPlus4Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressZipPlus4Field, value) != true)) {
                    this.AddressZipPlus4Field = value;
                    this.RaisePropertyChanged("AddressZipPlus4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attention {
            get {
                return this.AttentionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttentionField, value) != true)) {
                    this.AttentionField = value;
                    this.RaisePropertyChanged("Attention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AutomationDate {
            get {
                return this.AutomationDateField;
            }
            set {
                if ((this.AutomationDateField.Equals(value) != true)) {
                    this.AutomationDateField = value;
                    this.RaisePropertyChanged("AutomationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutomationException {
            get {
                return this.AutomationExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AutomationExceptionField, value) != true)) {
                    this.AutomationExceptionField = value;
                    this.RaisePropertyChanged("AutomationException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AutomationId {
            get {
                return this.AutomationIdField;
            }
            set {
                if ((this.AutomationIdField.Equals(value) != true)) {
                    this.AutomationIdField = value;
                    this.RaisePropertyChanged("AutomationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AutomationStatus AutomationStatus {
            get {
                return this.AutomationStatusField;
            }
            set {
                if ((this.AutomationStatusField.Equals(value) != true)) {
                    this.AutomationStatusField = value;
                    this.RaisePropertyChanged("AutomationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFaxNumber {
            get {
                return this.ContactFaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFaxNumberField, value) != true)) {
                    this.ContactFaxNumberField = value;
                    this.RaisePropertyChanged("ContactFaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityContactType ContactType {
            get {
                return this.ContactTypeField;
            }
            set {
                if ((this.ContactTypeField.Equals(value) != true)) {
                    this.ContactTypeField = value;
                    this.RaisePropertyChanged("ContactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorrespondenceId {
            get {
                return this.CorrespondenceIdField;
            }
            set {
                if ((this.CorrespondenceIdField.Equals(value) != true)) {
                    this.CorrespondenceIdField = value;
                    this.RaisePropertyChanged("CorrespondenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrespondenceName {
            get {
                return this.CorrespondenceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondenceNameField, value) != true)) {
                    this.CorrespondenceNameField = value;
                    this.RaisePropertyChanged("CorrespondenceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CorrespondenceVersion {
            get {
                return this.CorrespondenceVersionField;
            }
            set {
                if ((this.CorrespondenceVersionField.Equals(value) != true)) {
                    this.CorrespondenceVersionField = value;
                    this.RaisePropertyChanged("CorrespondenceVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityAddressId {
            get {
                return this.EntityAddressIdField;
            }
            set {
                if ((this.EntityAddressIdField.Equals(value) != true)) {
                    this.EntityAddressIdField = value;
                    this.RaisePropertyChanged("EntityAddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityContactInformationId {
            get {
                return this.EntityContactInformationIdField;
            }
            set {
                if ((this.EntityContactInformationIdField.Equals(value) != true)) {
                    this.EntityContactInformationIdField = value;
                    this.RaisePropertyChanged("EntityContactInformationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityFormId {
            get {
                return this.EntityFormIdField;
            }
            set {
                if ((this.EntityFormIdField.Equals(value) != true)) {
                    this.EntityFormIdField = value;
                    this.RaisePropertyChanged("EntityFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasImage {
            get {
                return this.HasImageField;
            }
            set {
                if ((this.HasImageField.Equals(value) != true)) {
                    this.HasImageField = value;
                    this.RaisePropertyChanged("HasImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReadyToSendDate {
            get {
                return this.ReadyToSendDateField;
            }
            set {
                if ((this.ReadyToSendDateField.Equals(value) != true)) {
                    this.ReadyToSendDateField = value;
                    this.RaisePropertyChanged("ReadyToSendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedEntityId {
            get {
                return this.RelatedEntityIdField;
            }
            set {
                if ((this.RelatedEntityIdField.Equals(value) != true)) {
                    this.RelatedEntityIdField = value;
                    this.RaisePropertyChanged("RelatedEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedObjectId {
            get {
                return this.RelatedObjectIdField;
            }
            set {
                if ((this.RelatedObjectIdField.Equals(value) != true)) {
                    this.RelatedObjectIdField = value;
                    this.RaisePropertyChanged("RelatedObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedObjectType {
            get {
                return this.RelatedObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedObjectTypeField, value) != true)) {
                    this.RelatedObjectTypeField = value;
                    this.RaisePropertyChanged("RelatedObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReturnedDate {
            get {
                return this.ReturnedDateField;
            }
            set {
                if ((this.ReturnedDateField.Equals(value) != true)) {
                    this.ReturnedDateField = value;
                    this.RaisePropertyChanged("ReturnedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoreConfigurationObject", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Service))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingleton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Metric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Contract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Program))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Population))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Correspondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegarding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Printer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServer))]
    public partial class CoreConfigurationObject : Mercury.Server.Application.CoreExtensibleObject {
        
        private bool EnabledField;
        
        private bool VisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class Contract : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.DateTime EffectiveDateField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Program", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class Program : Mercury.Server.Application.CoreConfigurationObject {
        
        private long BankAccountIdField;
        
        private long InsuranceTypeIdField;
        
        private long InsurerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BankAccountId {
            get {
                return this.BankAccountIdField;
            }
            set {
                if ((this.BankAccountIdField.Equals(value) != true)) {
                    this.BankAccountIdField = value;
                    this.RaisePropertyChanged("BankAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InsuranceTypeId {
            get {
                return this.InsuranceTypeIdField;
            }
            set {
                if ((this.InsuranceTypeIdField.Equals(value) != true)) {
                    this.InsuranceTypeIdField = value;
                    this.RaisePropertyChanged("InsuranceTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InsurerId {
            get {
                return this.InsurerIdField;
            }
            set {
                if ((this.InsurerIdField.Equals(value) != true)) {
                    this.InsurerIdField = value;
                    this.RaisePropertyChanged("InsurerId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BenefitPlan", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Insurer")]
    public partial class BenefitPlan : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.DateTime EffectiveDateField;
        
        private long ProgramIdField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Population", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population")]
    public partial class Population : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationActivityEvent> ActivityEventsField;
        
        private bool AllowProspectiveField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaDemographic> DemographicCriteriaField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEnrollment> EnrollmentCriteriaField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEvent> EventCriteriaField;
        
        private System.Collections.Generic.Dictionary<string, Mercury.Server.Application.Action> EventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaGeographic> GeographicCriteriaField;
        
        private Mercury.Server.Application.PopulationInitialAnchorDate InitialAnchorDateField;
        
        private long PopulationTypeIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEvent> ServiceEventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationTriggerEvent> TriggerEventsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationActivityEvent> ActivityEvents {
            get {
                return this.ActivityEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityEventsField, value) != true)) {
                    this.ActivityEventsField = value;
                    this.RaisePropertyChanged("ActivityEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowProspective {
            get {
                return this.AllowProspectiveField;
            }
            set {
                if ((this.AllowProspectiveField.Equals(value) != true)) {
                    this.AllowProspectiveField = value;
                    this.RaisePropertyChanged("AllowProspective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaDemographic> DemographicCriteria {
            get {
                return this.DemographicCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.DemographicCriteriaField, value) != true)) {
                    this.DemographicCriteriaField = value;
                    this.RaisePropertyChanged("DemographicCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEnrollment> EnrollmentCriteria {
            get {
                return this.EnrollmentCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrollmentCriteriaField, value) != true)) {
                    this.EnrollmentCriteriaField = value;
                    this.RaisePropertyChanged("EnrollmentCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEvent> EventCriteria {
            get {
                return this.EventCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.EventCriteriaField, value) != true)) {
                    this.EventCriteriaField = value;
                    this.RaisePropertyChanged("EventCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, Mercury.Server.Application.Action> Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaGeographic> GeographicCriteria {
            get {
                return this.GeographicCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.GeographicCriteriaField, value) != true)) {
                    this.GeographicCriteriaField = value;
                    this.RaisePropertyChanged("GeographicCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationInitialAnchorDate InitialAnchorDate {
            get {
                return this.InitialAnchorDateField;
            }
            set {
                if ((this.InitialAnchorDateField.Equals(value) != true)) {
                    this.InitialAnchorDateField = value;
                    this.RaisePropertyChanged("InitialAnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationTypeId {
            get {
                return this.PopulationTypeIdField;
            }
            set {
                if ((this.PopulationTypeIdField.Equals(value) != true)) {
                    this.PopulationTypeIdField = value;
                    this.RaisePropertyChanged("PopulationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEvent> ServiceEvents {
            get {
                return this.ServiceEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceEventsField, value) != true)) {
                    this.ServiceEventsField = value;
                    this.RaisePropertyChanged("ServiceEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationTriggerEvent> TriggerEvents {
            get {
                return this.TriggerEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggerEventsField, value) != true)) {
                    this.TriggerEventsField = value;
                    this.RaisePropertyChanged("TriggerEvents");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population")]
    public partial class PopulationType : Mercury.Server.Application.CoreConfigurationObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Environment")]
    public partial class EnvironmentType : Mercury.Server.Application.CoreConfigurationObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutingRule", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class RoutingRule : Mercury.Server.Application.CoreConfigurationObject {
        
        private long DefaultWorkQueueIdField;
        
        private System.Collections.Generic.Dictionary<int, Mercury.Server.Application.RoutingRuleDefinition> RulesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DefaultWorkQueueId {
            get {
                return this.DefaultWorkQueueIdField;
            }
            set {
                if ((this.DefaultWorkQueueIdField.Equals(value) != true)) {
                    this.DefaultWorkQueueIdField = value;
                    this.RaisePropertyChanged("DefaultWorkQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, Mercury.Server.Application.RoutingRuleDefinition> Rules {
            get {
                return this.RulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RulesField, value) != true)) {
                    this.RulesField = value;
                    this.RaisePropertyChanged("Rules");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workflow", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class Workflow : Mercury.Server.Application.CoreConfigurationObject {
        
        private string ActionVerbField;
        
        private string AssemblyClassNameField;
        
        private string AssemblyNameField;
        
        private string AssemblyPathField;
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        private Mercury.Server.Application.WorkflowFramework FrameworkField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowPermission> PermissionsField;
        
        private System.Collections.Generic.Dictionary<string, Mercury.Server.Application.ActionParameter> WorkflowParametersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionVerb {
            get {
                return this.ActionVerbField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionVerbField, value) != true)) {
                    this.ActionVerbField = value;
                    this.RaisePropertyChanged("ActionVerb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyClassName {
            get {
                return this.AssemblyClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyClassNameField, value) != true)) {
                    this.AssemblyClassNameField = value;
                    this.RaisePropertyChanged("AssemblyClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyPath {
            get {
                return this.AssemblyPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyPathField, value) != true)) {
                    this.AssemblyPathField = value;
                    this.RaisePropertyChanged("AssemblyPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkflowFramework Framework {
            get {
                return this.FrameworkField;
            }
            set {
                if ((this.FrameworkField.Equals(value) != true)) {
                    this.FrameworkField = value;
                    this.RaisePropertyChanged("Framework");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowPermission> Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, Mercury.Server.Application.ActionParameter> WorkflowParameters {
            get {
                return this.WorkflowParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowParametersField, value) != true)) {
                    this.WorkflowParametersField = value;
                    this.RaisePropertyChanged("WorkflowParameters");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkOutcome", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkOutcome : Mercury.Server.Application.CoreConfigurationObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueue", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueue : Mercury.Server.Application.CoreConfigurationObject {
        
        private bool GetWorkUseGroupingField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueGetWorkUserView> GetWorkUserViewsField;
        
        private long GetWorkViewIdField;
        
        private Mercury.Server.Application.DateQualifier InitialConstraintQualifierField;
        
        private int InitialConstraintValueField;
        
        private Mercury.Server.Application.DateQualifier InitialMilestoneQualifierField;
        
        private int InitialMilestoneValueField;
        
        private Mercury.Server.Application.DateQualifier ScheduleQualifierField;
        
        private int ScheduleValueField;
        
        private Mercury.Server.Application.DateQualifier ThresholdQualifierField;
        
        private int ThresholdValueField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueTeam> WorkTeamsField;
        
        private long WorkflowIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetWorkUseGrouping {
            get {
                return this.GetWorkUseGroupingField;
            }
            set {
                if ((this.GetWorkUseGroupingField.Equals(value) != true)) {
                    this.GetWorkUseGroupingField = value;
                    this.RaisePropertyChanged("GetWorkUseGrouping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueGetWorkUserView> GetWorkUserViews {
            get {
                return this.GetWorkUserViewsField;
            }
            set {
                if ((object.ReferenceEquals(this.GetWorkUserViewsField, value) != true)) {
                    this.GetWorkUserViewsField = value;
                    this.RaisePropertyChanged("GetWorkUserViews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GetWorkViewId {
            get {
                return this.GetWorkViewIdField;
            }
            set {
                if ((this.GetWorkViewIdField.Equals(value) != true)) {
                    this.GetWorkViewIdField = value;
                    this.RaisePropertyChanged("GetWorkViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier InitialConstraintQualifier {
            get {
                return this.InitialConstraintQualifierField;
            }
            set {
                if ((this.InitialConstraintQualifierField.Equals(value) != true)) {
                    this.InitialConstraintQualifierField = value;
                    this.RaisePropertyChanged("InitialConstraintQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitialConstraintValue {
            get {
                return this.InitialConstraintValueField;
            }
            set {
                if ((this.InitialConstraintValueField.Equals(value) != true)) {
                    this.InitialConstraintValueField = value;
                    this.RaisePropertyChanged("InitialConstraintValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier InitialMilestoneQualifier {
            get {
                return this.InitialMilestoneQualifierField;
            }
            set {
                if ((this.InitialMilestoneQualifierField.Equals(value) != true)) {
                    this.InitialMilestoneQualifierField = value;
                    this.RaisePropertyChanged("InitialMilestoneQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitialMilestoneValue {
            get {
                return this.InitialMilestoneValueField;
            }
            set {
                if ((this.InitialMilestoneValueField.Equals(value) != true)) {
                    this.InitialMilestoneValueField = value;
                    this.RaisePropertyChanged("InitialMilestoneValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ScheduleQualifier {
            get {
                return this.ScheduleQualifierField;
            }
            set {
                if ((this.ScheduleQualifierField.Equals(value) != true)) {
                    this.ScheduleQualifierField = value;
                    this.RaisePropertyChanged("ScheduleQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleValue {
            get {
                return this.ScheduleValueField;
            }
            set {
                if ((this.ScheduleValueField.Equals(value) != true)) {
                    this.ScheduleValueField = value;
                    this.RaisePropertyChanged("ScheduleValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ThresholdQualifier {
            get {
                return this.ThresholdQualifierField;
            }
            set {
                if ((this.ThresholdQualifierField.Equals(value) != true)) {
                    this.ThresholdQualifierField = value;
                    this.RaisePropertyChanged("ThresholdQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThresholdValue {
            get {
                return this.ThresholdValueField;
            }
            set {
                if ((this.ThresholdValueField.Equals(value) != true)) {
                    this.ThresholdValueField = value;
                    this.RaisePropertyChanged("ThresholdValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueTeam> WorkTeams {
            get {
                return this.WorkTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTeamsField, value) != true)) {
                    this.WorkTeamsField = value;
                    this.RaisePropertyChanged("WorkTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueView : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueViewFieldDefinition> FieldDefinitionsField;
        
        private System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewFilterDefinition> FilterDefinitionsField;
        
        private System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewSortDefinition> SortDefinitionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueViewFieldDefinition> FieldDefinitions {
            get {
                return this.FieldDefinitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldDefinitionsField, value) != true)) {
                    this.FieldDefinitionsField = value;
                    this.RaisePropertyChanged("FieldDefinitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewFilterDefinition> FilterDefinitions {
            get {
                return this.FilterDefinitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterDefinitionsField, value) != true)) {
                    this.FilterDefinitionsField = value;
                    this.RaisePropertyChanged("FilterDefinitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewSortDefinition> SortDefinitions {
            get {
                return this.SortDefinitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SortDefinitionsField, value) != true)) {
                    this.SortDefinitionsField = value;
                    this.RaisePropertyChanged("SortDefinitions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTeam", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkTeam : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeamMembership> MembershipField;
        
        private Mercury.Server.Application.WorkTeamType WorkTeamTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeamMembership> Membership {
            get {
                return this.MembershipField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipField, value) != true)) {
                    this.MembershipField = value;
                    this.RaisePropertyChanged("Membership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkTeamType WorkTeamType {
            get {
                return this.WorkTeamTypeField;
            }
            set {
                if ((this.WorkTeamTypeField.Equals(value) != true)) {
                    this.WorkTeamTypeField = value;
                    this.RaisePropertyChanged("WorkTeamType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Authorizations")]
    public partial class AuthorizationType : Mercury.Server.Application.CoreConfigurationObject {
        
        private string CategoryField;
        
        private long CategoryIdField;
        
        private string ServiceTypeField;
        
        private string SubcategoryField;
        
        private long SubcategoryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeField, value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subcategory {
            get {
                return this.SubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryField, value) != true)) {
                    this.SubcategoryField = value;
                    this.RaisePropertyChanged("Subcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SubcategoryId {
            get {
                return this.SubcategoryIdField;
            }
            set {
                if ((this.SubcategoryIdField.Equals(value) != true)) {
                    this.SubcategoryIdField = value;
                    this.RaisePropertyChanged("SubcategoryId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CareLevel", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    public partial class CareLevel : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevelActivity> ActivitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevelActivity> Activities {
            get {
                return this.ActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitiesField, value) != true)) {
                    this.ActivitiesField = value;
                    this.RaisePropertyChanged("Activities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProblemStatement", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    public partial class ProblemStatement : Mercury.Server.Application.CoreConfigurationObject {
        
        private long DefaultCarePlanIdField;
        
        private long ProblemCategoryIdField;
        
        private string ProblemCategoryNameField;
        
        private long ProblemDomainIdField;
        
        private string ProblemDomainNameField;
        
        private long ProblemSubcategoryIdField;
        
        private string ProblemSubcategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DefaultCarePlanId {
            get {
                return this.DefaultCarePlanIdField;
            }
            set {
                if ((this.DefaultCarePlanIdField.Equals(value) != true)) {
                    this.DefaultCarePlanIdField = value;
                    this.RaisePropertyChanged("DefaultCarePlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemCategoryId {
            get {
                return this.ProblemCategoryIdField;
            }
            set {
                if ((this.ProblemCategoryIdField.Equals(value) != true)) {
                    this.ProblemCategoryIdField = value;
                    this.RaisePropertyChanged("ProblemCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProblemCategoryName {
            get {
                return this.ProblemCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemCategoryNameField, value) != true)) {
                    this.ProblemCategoryNameField = value;
                    this.RaisePropertyChanged("ProblemCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemDomainId {
            get {
                return this.ProblemDomainIdField;
            }
            set {
                if ((this.ProblemDomainIdField.Equals(value) != true)) {
                    this.ProblemDomainIdField = value;
                    this.RaisePropertyChanged("ProblemDomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProblemDomainName {
            get {
                return this.ProblemDomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemDomainNameField, value) != true)) {
                    this.ProblemDomainNameField = value;
                    this.RaisePropertyChanged("ProblemDomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemSubcategoryId {
            get {
                return this.ProblemSubcategoryIdField;
            }
            set {
                if ((this.ProblemSubcategoryIdField.Equals(value) != true)) {
                    this.ProblemSubcategoryIdField = value;
                    this.RaisePropertyChanged("ProblemSubcategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProblemSubcategoryName {
            get {
                return this.ProblemSubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemSubcategoryNameField, value) != true)) {
                    this.ProblemSubcategoryNameField = value;
                    this.RaisePropertyChanged("ProblemSubcategoryName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CareOutcome", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    public partial class CareOutcome : Mercury.Server.Application.CoreConfigurationObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Correspondence", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Reference")]
    public partial class Correspondence : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.Generic.Dictionary<int, Mercury.Server.Application.CorrespondenceContent> ContentField;
        
        private long FormIdField;
        
        private bool StoreImageField;
        
        private double VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, Mercury.Server.Application.CorrespondenceContent> Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StoreImage {
            get {
                return this.StoreImageField;
            }
            set {
                if ((this.StoreImageField.Equals(value) != true)) {
                    this.StoreImageField = value;
                    this.RaisePropertyChanged("StoreImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactRegarding", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Reference")]
    public partial class ContactRegarding : Mercury.Server.Application.CoreConfigurationObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Reference")]
    public partial class NoteType : Mercury.Server.Application.CoreConfigurationObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaxServer", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Faxing")]
    public partial class FaxServer : Mercury.Server.Application.CoreConfigurationObject {
        
        private string AssemblyClassNameField;
        
        private string AssemblyNameField;
        
        private string AssemblyPathField;
        
        private Mercury.Server.Application.FaxServerConfiguration FaxServerConfigurationField;
        
        private Mercury.Server.Application.WebServiceHostConfiguration WebServiceHostConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyClassName {
            get {
                return this.AssemblyClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyClassNameField, value) != true)) {
                    this.AssemblyClassNameField = value;
                    this.RaisePropertyChanged("AssemblyClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyPath {
            get {
                return this.AssemblyPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyPathField, value) != true)) {
                    this.AssemblyPathField = value;
                    this.RaisePropertyChanged("AssemblyPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FaxServerConfiguration FaxServerConfiguration {
            get {
                return this.FaxServerConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxServerConfigurationField, value) != true)) {
                    this.FaxServerConfigurationField = value;
                    this.RaisePropertyChanged("FaxServerConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WebServiceHostConfiguration WebServiceHostConfiguration {
            get {
                return this.WebServiceHostConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.WebServiceHostConfigurationField, value) != true)) {
                    this.WebServiceHostConfigurationField = value;
                    this.RaisePropertyChanged("WebServiceHostConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Printer", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Printing")]
    public partial class Printer : Mercury.Server.Application.CoreConfigurationObject {
        
        private string PrintQueueNameField;
        
        private string PrintServerNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintQueueName {
            get {
                return this.PrintQueueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintQueueNameField, value) != true)) {
                    this.PrintQueueNameField = value;
                    this.RaisePropertyChanged("PrintQueueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintServerName {
            get {
                return this.PrintServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintServerNameField, value) != true)) {
                    this.PrintServerNameField = value;
                    this.RaisePropertyChanged("PrintServerName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportingServer", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Reporting")]
    public partial class ReportingServer : Mercury.Server.Application.CoreConfigurationObject {
        
        private string AssemblyClassNameField;
        
        private string AssemblyNameField;
        
        private string AssemblyPathField;
        
        private Mercury.Server.Application.WebServiceHostConfiguration WebServiceHostConfigurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyClassName {
            get {
                return this.AssemblyClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyClassNameField, value) != true)) {
                    this.AssemblyClassNameField = value;
                    this.RaisePropertyChanged("AssemblyClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyPath {
            get {
                return this.AssemblyPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyPathField, value) != true)) {
                    this.AssemblyPathField = value;
                    this.RaisePropertyChanged("AssemblyPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WebServiceHostConfiguration WebServiceHostConfiguration {
            get {
                return this.WebServiceHostConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.WebServiceHostConfigurationField, value) != true)) {
                    this.WebServiceHostConfigurationField = value;
                    this.RaisePropertyChanged("WebServiceHostConfiguration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingleton))]
    public partial class Service : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.DateTime LastPaidDateField;
        
        private Mercury.Server.Application.ServiceClassification ServiceClassificationField;
        
        private Mercury.Server.Application.MedicalServiceType ServiceTypeField;
        
        private Mercury.Server.Application.ServiceSetType SetTypeField;
        
        private int WithinDaysField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPaidDate {
            get {
                return this.LastPaidDateField;
            }
            set {
                if ((this.LastPaidDateField.Equals(value) != true)) {
                    this.LastPaidDateField = value;
                    this.RaisePropertyChanged("LastPaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceClassification ServiceClassification {
            get {
                return this.ServiceClassificationField;
            }
            set {
                if ((this.ServiceClassificationField.Equals(value) != true)) {
                    this.ServiceClassificationField = value;
                    this.RaisePropertyChanged("ServiceClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MedicalServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceSetType SetType {
            get {
                return this.SetTypeField;
            }
            set {
                if ((this.SetTypeField.Equals(value) != true)) {
                    this.SetTypeField = value;
                    this.RaisePropertyChanged("SetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WithinDays {
            get {
                return this.WithinDaysField;
            }
            set {
                if ((this.WithinDaysField.Equals(value) != true)) {
                    this.WithinDaysField = value;
                    this.RaisePropertyChanged("WithinDays");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSet", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices")]
    public partial class ServiceSet : Mercury.Server.Application.Service {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSetDefinition> DefinitionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSetDefinition> Definitions {
            get {
                return this.DefinitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionsField, value) != true)) {
                    this.DefinitionsField = value;
                    this.RaisePropertyChanged("Definitions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSingleton", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices")]
    public partial class ServiceSingleton : Mercury.Server.Application.Service {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSingletonDefinition> DefinitionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSingletonDefinition> Definitions {
            get {
                return this.DefinitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionsField, value) != true)) {
                    this.DefinitionsField = value;
                    this.RaisePropertyChanged("Definitions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Metric", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics")]
    public partial class Metric : Mercury.Server.Application.CoreConfigurationObject {
        
        private Mercury.Server.Application.MetricCostClaimDateType CostClaimDateTypeField;
        
        private Mercury.Server.Application.MetricCostDataSource CostDataSourceField;
        
        private Mercury.Server.Application.MetricCostReportingPeriod CostReportingPeriodField;
        
        private Mercury.Server.Application.DateQualifier CostReportingPeriodQualifierField;
        
        private int CostReportingPeriodValueField;
        
        private System.Collections.Generic.Dictionary<long, string> CostServicesField;
        
        private Mercury.Server.Application.MetricCostWatermarkPeriod CostWatermarkPeriodField;
        
        private Mercury.Server.Application.DateQualifier CostWatermarkPeriodQualifierField;
        
        private int CostWatermarkPeriodValueField;
        
        private Mercury.Server.Application.MetricDataType DataTypeField;
        
        private decimal MaximumValueField;
        
        private Mercury.Server.Application.MetricType MetricTypeField;
        
        private decimal MinimumValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricCostClaimDateType CostClaimDateType {
            get {
                return this.CostClaimDateTypeField;
            }
            set {
                if ((this.CostClaimDateTypeField.Equals(value) != true)) {
                    this.CostClaimDateTypeField = value;
                    this.RaisePropertyChanged("CostClaimDateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricCostDataSource CostDataSource {
            get {
                return this.CostDataSourceField;
            }
            set {
                if ((this.CostDataSourceField.Equals(value) != true)) {
                    this.CostDataSourceField = value;
                    this.RaisePropertyChanged("CostDataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricCostReportingPeriod CostReportingPeriod {
            get {
                return this.CostReportingPeriodField;
            }
            set {
                if ((this.CostReportingPeriodField.Equals(value) != true)) {
                    this.CostReportingPeriodField = value;
                    this.RaisePropertyChanged("CostReportingPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier CostReportingPeriodQualifier {
            get {
                return this.CostReportingPeriodQualifierField;
            }
            set {
                if ((this.CostReportingPeriodQualifierField.Equals(value) != true)) {
                    this.CostReportingPeriodQualifierField = value;
                    this.RaisePropertyChanged("CostReportingPeriodQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostReportingPeriodValue {
            get {
                return this.CostReportingPeriodValueField;
            }
            set {
                if ((this.CostReportingPeriodValueField.Equals(value) != true)) {
                    this.CostReportingPeriodValueField = value;
                    this.RaisePropertyChanged("CostReportingPeriodValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, string> CostServices {
            get {
                return this.CostServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.CostServicesField, value) != true)) {
                    this.CostServicesField = value;
                    this.RaisePropertyChanged("CostServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricCostWatermarkPeriod CostWatermarkPeriod {
            get {
                return this.CostWatermarkPeriodField;
            }
            set {
                if ((this.CostWatermarkPeriodField.Equals(value) != true)) {
                    this.CostWatermarkPeriodField = value;
                    this.RaisePropertyChanged("CostWatermarkPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier CostWatermarkPeriodQualifier {
            get {
                return this.CostWatermarkPeriodQualifierField;
            }
            set {
                if ((this.CostWatermarkPeriodQualifierField.Equals(value) != true)) {
                    this.CostWatermarkPeriodQualifierField = value;
                    this.RaisePropertyChanged("CostWatermarkPeriodQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostWatermarkPeriodValue {
            get {
                return this.CostWatermarkPeriodValueField;
            }
            set {
                if ((this.CostWatermarkPeriodValueField.Equals(value) != true)) {
                    this.CostWatermarkPeriodValueField = value;
                    this.RaisePropertyChanged("CostWatermarkPeriodValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricDataType DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumValue {
            get {
                return this.MaximumValueField;
            }
            set {
                if ((this.MaximumValueField.Equals(value) != true)) {
                    this.MaximumValueField = value;
                    this.RaisePropertyChanged("MaximumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MetricType MetricType {
            get {
                return this.MetricTypeField;
            }
            set {
                if ((this.MetricTypeField.Equals(value) != true)) {
                    this.MetricTypeField = value;
                    this.RaisePropertyChanged("MetricType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinimumValue {
            get {
                return this.MinimumValueField;
            }
            set {
                if ((this.MinimumValueField.Equals(value) != true)) {
                    this.MinimumValueField = value;
                    this.RaisePropertyChanged("MinimumValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedService", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.AuthorizedServices")]
    public partial class AuthorizedService : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedServiceDefinition> DefinitionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedServiceDefinition> Definitions {
            get {
                return this.DefinitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionsField, value) != true)) {
                    this.DefinitionsField = value;
                    this.RaisePropertyChanged("Definitions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlan", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlan))]
    public partial class CarePlan : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoal> CarePlanGoalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoal> CarePlanGoals {
            get {
                return this.CarePlanGoalsField;
            }
            set {
                if ((object.ReferenceEquals(this.CarePlanGoalsField, value) != true)) {
                    this.CarePlanGoalsField = value;
                    this.RaisePropertyChanged("CarePlanGoals");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlanGoal", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoal))]
    public partial class CarePlanGoal : Mercury.Server.Application.CoreConfigurationObject {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoalActivity> ActivitiesField;
        
        private long CarePlanIdField;
        
        private string ClinicalNarrativeField;
        
        private string CommonNarrativeField;
        
        private Mercury.Server.Application.CarePlanGoalTimeframe GoalTimeframeField;
        
        private Mercury.Server.Application.DateQualifier ScheduleQualifierField;
        
        private int ScheduleValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoalActivity> Activities {
            get {
                return this.ActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitiesField, value) != true)) {
                    this.ActivitiesField = value;
                    this.RaisePropertyChanged("Activities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CarePlanId {
            get {
                return this.CarePlanIdField;
            }
            set {
                if ((this.CarePlanIdField.Equals(value) != true)) {
                    this.CarePlanIdField = value;
                    this.RaisePropertyChanged("CarePlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicalNarrative {
            get {
                return this.ClinicalNarrativeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalNarrativeField, value) != true)) {
                    this.ClinicalNarrativeField = value;
                    this.RaisePropertyChanged("ClinicalNarrative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommonNarrative {
            get {
                return this.CommonNarrativeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonNarrativeField, value) != true)) {
                    this.CommonNarrativeField = value;
                    this.RaisePropertyChanged("CommonNarrative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.CarePlanGoalTimeframe GoalTimeframe {
            get {
                return this.GoalTimeframeField;
            }
            set {
                if ((this.GoalTimeframeField.Equals(value) != true)) {
                    this.GoalTimeframeField = value;
                    this.RaisePropertyChanged("GoalTimeframe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ScheduleQualifier {
            get {
                return this.ScheduleQualifierField;
            }
            set {
                if ((this.ScheduleQualifierField.Equals(value) != true)) {
                    this.ScheduleQualifierField = value;
                    this.RaisePropertyChanged("ScheduleQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleValue {
            get {
                return this.ScheduleValueField;
            }
            set {
                if ((this.ScheduleValueField.Equals(value) != true)) {
                    this.ScheduleValueField = value;
                    this.RaisePropertyChanged("ScheduleValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberCaseCarePlanGoal", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Case")]
    public partial class MemberCaseCarePlanGoal : Mercury.Server.Application.CarePlanGoal {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoalActivity> Activities1Field;
        
        private long CarePlanGoalIdField;
        
        private long MemberCaseCarePlanIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Activities")]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoalActivity> Activities1 {
            get {
                return this.Activities1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Activities1Field, value) != true)) {
                    this.Activities1Field = value;
                    this.RaisePropertyChanged("Activities1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CarePlanGoalId {
            get {
                return this.CarePlanGoalIdField;
            }
            set {
                if ((this.CarePlanGoalIdField.Equals(value) != true)) {
                    this.CarePlanGoalIdField = value;
                    this.RaisePropertyChanged("CarePlanGoalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberCaseCarePlanId {
            get {
                return this.MemberCaseCarePlanIdField;
            }
            set {
                if ((this.MemberCaseCarePlanIdField.Equals(value) != true)) {
                    this.MemberCaseCarePlanIdField = value;
                    this.RaisePropertyChanged("MemberCaseCarePlanId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberCaseCarePlan", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Case")]
    public partial class MemberCaseCarePlan : Mercury.Server.Application.CarePlan {
        
        private System.DateTime AddedDateField;
        
        private System.Nullable<System.DateTime> AssignedToDateField;
        
        private long AssignedToSecurityAuthorityIdField;
        
        private string AssignedToUserAccountIdField;
        
        private string AssignedToUserAccountNameField;
        
        private string AssignedToUserDisplayNameField;
        
        private long CareOutcomeIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoal> CarePlanGoals1Field;
        
        private long CarePlanIdField;
        
        private System.DateTime EffectiveDateField;
        
        private long MemberCaseIdField;
        
        private long ProblemStatementIdField;
        
        private Mercury.Server.Application.CarePlanStatus StatusField;
        
        private System.Nullable<System.DateTime> TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedToDate {
            get {
                return this.AssignedToDateField;
            }
            set {
                if ((this.AssignedToDateField.Equals(value) != true)) {
                    this.AssignedToDateField = value;
                    this.RaisePropertyChanged("AssignedToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedToSecurityAuthorityId {
            get {
                return this.AssignedToSecurityAuthorityIdField;
            }
            set {
                if ((this.AssignedToSecurityAuthorityIdField.Equals(value) != true)) {
                    this.AssignedToSecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("AssignedToSecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountId {
            get {
                return this.AssignedToUserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountIdField, value) != true)) {
                    this.AssignedToUserAccountIdField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserAccountName {
            get {
                return this.AssignedToUserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserAccountNameField, value) != true)) {
                    this.AssignedToUserAccountNameField = value;
                    this.RaisePropertyChanged("AssignedToUserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToUserDisplayName {
            get {
                return this.AssignedToUserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToUserDisplayNameField, value) != true)) {
                    this.AssignedToUserDisplayNameField = value;
                    this.RaisePropertyChanged("AssignedToUserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CareOutcomeId {
            get {
                return this.CareOutcomeIdField;
            }
            set {
                if ((this.CareOutcomeIdField.Equals(value) != true)) {
                    this.CareOutcomeIdField = value;
                    this.RaisePropertyChanged("CareOutcomeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="CarePlanGoals")]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoal> CarePlanGoals1 {
            get {
                return this.CarePlanGoals1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CarePlanGoals1Field, value) != true)) {
                    this.CarePlanGoals1Field = value;
                    this.RaisePropertyChanged("CarePlanGoals1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CarePlanId {
            get {
                return this.CarePlanIdField;
            }
            set {
                if ((this.CarePlanIdField.Equals(value) != true)) {
                    this.CarePlanIdField = value;
                    this.RaisePropertyChanged("CarePlanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberCaseId {
            get {
                return this.MemberCaseIdField;
            }
            set {
                if ((this.MemberCaseIdField.Equals(value) != true)) {
                    this.MemberCaseIdField = value;
                    this.RaisePropertyChanged("MemberCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProblemStatementId {
            get {
                return this.ProblemStatementIdField;
            }
            set {
                if ((this.ProblemStatementIdField.Equals(value) != true)) {
                    this.ProblemStatementIdField = value;
                    this.RaisePropertyChanged("ProblemStatementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.CarePlanStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceHostConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.WebService")]
    public partial class WebServiceHostConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.WebServiceHostBindingConfiguration BindingConfigurationField;
        
        private Mercury.Server.Application.WebServiceHostClientCredentials ClientCredentialsField;
        
        private int PortField;
        
        private string ServerField;
        
        private string ServiceNameField;
        
        private string ServicePathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WebServiceHostBindingConfiguration BindingConfiguration {
            get {
                return this.BindingConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.BindingConfigurationField, value) != true)) {
                    this.BindingConfigurationField = value;
                    this.RaisePropertyChanged("BindingConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WebServiceHostClientCredentials ClientCredentials {
            get {
                return this.ClientCredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientCredentialsField, value) != true)) {
                    this.ClientCredentialsField = value;
                    this.RaisePropertyChanged("ClientCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePath {
            get {
                return this.ServicePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePathField, value) != true)) {
                    this.ServicePathField = value;
                    this.RaisePropertyChanged("ServicePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum EntityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Member = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sponsor = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insurer = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceClassification", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Enume" +
        "rations")]
    public enum ServiceClassification : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medication = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lab = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Immunization = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diagnosis = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exclusion = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalServiceType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Enume" +
        "rations")]
    public enum MedicalServiceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Singleton = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Set = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sequence = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSetType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Enume" +
        "rations")]
    public enum ServiceSetType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Intersection = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Union = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceDataSourceType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Enume" +
        "rations")]
    public enum ServiceDataSourceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllMedical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Professional = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Institutional = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pharmacy = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lab = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDateOrder", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices.Enume" +
        "rations")]
    public enum EventDateOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClaimFromDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClaimThruDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceClaimFromDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceClaimThruDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdmissionClaimFromDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DischargeClaimThruDate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceAdmissionClaimFromDate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceDischargeClaimThrueDate = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateQualifier", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum DateQualifier : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Days = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Months = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Years = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricCostClaimDateType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics.Enumerations")]
    public enum MetricCostClaimDateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceDate = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricCostDataSource", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics.Enumerations")]
    public enum MetricCostDataSource : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllClaims = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllMedical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllPharmacy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByService = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricCostReportingPeriod", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics.Enumerations")]
    public enum MetricCostReportingPeriod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalenderYear = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YearByMonth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RollingPeriod = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricCostWatermarkPeriod", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics.Enumerations")]
    public enum MetricCostWatermarkPeriod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalenderYear = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YearByMonth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricDataType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics.Enumerations")]
    public enum MetricDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Metrics.Enumerations")]
    public enum MetricType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Health = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cost = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Utilization = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationTriggerEventType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationTriggerEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Metric = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorizedService = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Composite = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Claims.Enumerations")]
    public enum ClaimType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Professional = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Institutional = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dental = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pharmacy = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Laboratory = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityAuthorityType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Security.Enumerations")]
    public enum SecurityAuthorityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsIntegrated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveDirectory = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data")]
    public partial class SqlConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomAttributesField;
        
        private string DatabaseNameField;
        
        private int PoolSizeMaximumField;
        
        private int PoolSizeMinimumField;
        
        private bool PoolingEnabledField;
        
        private string ServerNameField;
        
        private string SqlUserNameField;
        
        private string SqlUserPasswordField;
        
        private bool UseTrustedConnectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomAttributes {
            get {
                return this.CustomAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomAttributesField, value) != true)) {
                    this.CustomAttributesField = value;
                    this.RaisePropertyChanged("CustomAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseName {
            get {
                return this.DatabaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseNameField, value) != true)) {
                    this.DatabaseNameField = value;
                    this.RaisePropertyChanged("DatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoolSizeMaximum {
            get {
                return this.PoolSizeMaximumField;
            }
            set {
                if ((this.PoolSizeMaximumField.Equals(value) != true)) {
                    this.PoolSizeMaximumField = value;
                    this.RaisePropertyChanged("PoolSizeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoolSizeMinimum {
            get {
                return this.PoolSizeMinimumField;
            }
            set {
                if ((this.PoolSizeMinimumField.Equals(value) != true)) {
                    this.PoolSizeMinimumField = value;
                    this.RaisePropertyChanged("PoolSizeMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PoolingEnabled {
            get {
                return this.PoolingEnabledField;
            }
            set {
                if ((this.PoolingEnabledField.Equals(value) != true)) {
                    this.PoolingEnabledField = value;
                    this.RaisePropertyChanged("PoolingEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SqlUserName {
            get {
                return this.SqlUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlUserNameField, value) != true)) {
                    this.SqlUserNameField = value;
                    this.RaisePropertyChanged("SqlUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SqlUserPassword {
            get {
                return this.SqlUserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlUserPasswordField, value) != true)) {
                    this.SqlUserPasswordField = value;
                    this.RaisePropertyChanged("SqlUserPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseTrustedConnection {
            get {
                return this.UseTrustedConnectionField;
            }
            set {
                if ((this.UseTrustedConnectionField.Equals(value) != true)) {
                    this.UseTrustedConnectionField = value;
                    this.RaisePropertyChanged("UseTrustedConnection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationCriteriaEventType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationCriteriaEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Identifying = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exclusion = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminating = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationServiceEventAnchorDate", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationServiceEventAnchorDate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PopulationAnchorDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviousServiceDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviousServiceEvent = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgeByYears = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgeByMonths = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationServiceEventStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationServiceEventStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompliantOrNoChange = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenInformational = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenWarning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenCritical = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionParameter", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action")]
    public partial class ActionParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowFixedValueField;
        
        private Mercury.Server.Application.ActionParameterDataType DataTypeField;
        
        private string ParameterNameField;
        
        private bool RequiredField;
        
        private string ValueField;
        
        private string ValueDescriptionField;
        
        private Mercury.Server.Application.ActionParameterValueType ValueTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowFixedValue {
            get {
                return this.AllowFixedValueField;
            }
            set {
                if ((this.AllowFixedValueField.Equals(value) != true)) {
                    this.AllowFixedValueField = value;
                    this.RaisePropertyChanged("AllowFixedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActionParameterDataType DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterName {
            get {
                return this.ParameterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterNameField, value) != true)) {
                    this.ParameterNameField = value;
                    this.RaisePropertyChanged("ParameterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueDescription {
            get {
                return this.ValueDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueDescriptionField, value) != true)) {
                    this.ValueDescriptionField = value;
                    this.RaisePropertyChanged("ValueDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ActionParameterValueType ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((this.ValueTypeField.Equals(value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionParameterDataType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action.Enumerations")]
    public enum ActionParameterDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workflow = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkQueue = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Correspondence = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoutingRule = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Id = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityId = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberId = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderId = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkOutcome = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CareOutcome = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionParameterValueType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action.Enumerations")]
    public enum ActionParameterValueType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedValue = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataMapping = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationActivityEventAnchorDate", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationActivityEventAnchorDate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PopulationEffectiveDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PopulationAnchorDate = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationActivityPerformActionDateType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationActivityPerformActionDateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Immediately = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstDayOfMonth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleOfMonth = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastDayOfMonth = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationActivityScheduleType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationActivityScheduleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByFrequency = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quarterly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yearly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirthMonth = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarMonth = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTeamRole", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work.Enumerations")]
    public enum WorkTeamRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Member = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueTeamPermission", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work.Enumerations")]
    public enum WorkQueueTeamPermission : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Denied = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        View = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Work = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelfAssign = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manage = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteImportance", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum NoteImportance : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Informational = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critical = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityAddressType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum EntityAddressType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhysicalAddress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MailingAddress = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceLocation = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlternatePhysicalAddress = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrectedPhysicalAddress = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlternateMailingAddress = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrectedMailingAddress = 231,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactOutcome", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum ContactOutcome : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAnswer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeftMessage = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongNumber = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Refused = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rescheduled = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAvailable = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LanguageBarrier = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deceased = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityContactType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum EntityContactType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Telephone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facsimile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPerson = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByMail = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmergencyPhone = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pager = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlternateTelephone = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlternateFacsimile = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDirection", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Enumerations")]
    public enum ContactDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outbound = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inbound = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlCapabilities", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Structures")]
    public partial class FormControlCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanDataBindField;
        
        private bool HasLabelField;
        
        private bool HasMultipleDataBindingPointsField;
        
        private bool HasValueField;
        
        private bool IsDataSourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanDataBind {
            get {
                return this.CanDataBindField;
            }
            set {
                if ((this.CanDataBindField.Equals(value) != true)) {
                    this.CanDataBindField = value;
                    this.RaisePropertyChanged("CanDataBind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLabel {
            get {
                return this.HasLabelField;
            }
            set {
                if ((this.HasLabelField.Equals(value) != true)) {
                    this.HasLabelField = value;
                    this.RaisePropertyChanged("HasLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMultipleDataBindingPoints {
            get {
                return this.HasMultipleDataBindingPointsField;
            }
            set {
                if ((this.HasMultipleDataBindingPointsField.Equals(value) != true)) {
                    this.HasMultipleDataBindingPointsField = value;
                    this.RaisePropertyChanged("HasMultipleDataBindingPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasValue {
            get {
                return this.HasValueField;
            }
            set {
                if ((this.HasValueField.Equals(value) != true)) {
                    this.HasValueField = value;
                    this.RaisePropertyChanged("HasValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDataSource {
            get {
                return this.IsDataSourceField;
            }
            set {
                if ((this.IsDataSourceField.Equals(value) != true)) {
                    this.IsDataSourceField = value;
                    this.RaisePropertyChanged("IsDataSource");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlStyle", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Structures")]
    public partial class FormControlStyle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BackgroundColorField;
        
        private string BorderBottomColorField;
        
        private string BorderBottomStyleField;
        
        private string BorderBottomWidthField;
        
        private string BorderBottomWidthUnitField;
        
        private string BorderLeftColorField;
        
        private string BorderLeftStyleField;
        
        private string BorderLeftWidthField;
        
        private string BorderLeftWidthUnitField;
        
        private string BorderRightColorField;
        
        private string BorderRightStyleField;
        
        private string BorderRightWidthField;
        
        private string BorderRightWidthUnitField;
        
        private string BorderTopColorField;
        
        private string BorderTopStyleField;
        
        private string BorderTopWidthField;
        
        private string BorderTopWidthUnitField;
        
        private string ColorField;
        
        private string FontFamilyField;
        
        private string FontSizeField;
        
        private string FontSizeUnitField;
        
        private string FontStyleField;
        
        private string FontVariantField;
        
        private string FontWeightField;
        
        private string HeightField;
        
        private string HeightUnitField;
        
        private bool IsBorderSameField;
        
        private bool IsMarginSameField;
        
        private bool IsPaddingSameField;
        
        private string LetterSpacingField;
        
        private string LetterSpacingUnitField;
        
        private string LineHeightField;
        
        private string LineHeightUnitField;
        
        private string MarginField;
        
        private string MarginBottomField;
        
        private string MarginBottomUnitField;
        
        private string MarginLeftField;
        
        private string MarginLeftUnitField;
        
        private string MarginRightField;
        
        private string MarginRightUnitField;
        
        private string MarginTopField;
        
        private string MarginTopUnitField;
        
        private string OverflowField;
        
        private string PaddingField;
        
        private string PaddingBottomField;
        
        private string PaddingBottomUnitField;
        
        private string PaddingLeftField;
        
        private string PaddingLeftUnitField;
        
        private string PaddingRightField;
        
        private string PaddingRightUnitField;
        
        private string PaddingTopField;
        
        private string PaddingTopUnitField;
        
        private string TextAlignField;
        
        private string TextDecorationField;
        
        private string TextIndentField;
        
        private string TextIndentUnitField;
        
        private string TextTransformField;
        
        private string VerticalAlignField;
        
        private string WhiteSpaceField;
        
        private string WidthField;
        
        private string WidthUnitField;
        
        private string WordSpacingField;
        
        private string WordSpacingUnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackgroundColor {
            get {
                return this.BackgroundColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BackgroundColorField, value) != true)) {
                    this.BackgroundColorField = value;
                    this.RaisePropertyChanged("BackgroundColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderBottomColor {
            get {
                return this.BorderBottomColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderBottomColorField, value) != true)) {
                    this.BorderBottomColorField = value;
                    this.RaisePropertyChanged("BorderBottomColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderBottomStyle {
            get {
                return this.BorderBottomStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderBottomStyleField, value) != true)) {
                    this.BorderBottomStyleField = value;
                    this.RaisePropertyChanged("BorderBottomStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderBottomWidth {
            get {
                return this.BorderBottomWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderBottomWidthField, value) != true)) {
                    this.BorderBottomWidthField = value;
                    this.RaisePropertyChanged("BorderBottomWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderBottomWidthUnit {
            get {
                return this.BorderBottomWidthUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderBottomWidthUnitField, value) != true)) {
                    this.BorderBottomWidthUnitField = value;
                    this.RaisePropertyChanged("BorderBottomWidthUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderLeftColor {
            get {
                return this.BorderLeftColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderLeftColorField, value) != true)) {
                    this.BorderLeftColorField = value;
                    this.RaisePropertyChanged("BorderLeftColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderLeftStyle {
            get {
                return this.BorderLeftStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderLeftStyleField, value) != true)) {
                    this.BorderLeftStyleField = value;
                    this.RaisePropertyChanged("BorderLeftStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderLeftWidth {
            get {
                return this.BorderLeftWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderLeftWidthField, value) != true)) {
                    this.BorderLeftWidthField = value;
                    this.RaisePropertyChanged("BorderLeftWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderLeftWidthUnit {
            get {
                return this.BorderLeftWidthUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderLeftWidthUnitField, value) != true)) {
                    this.BorderLeftWidthUnitField = value;
                    this.RaisePropertyChanged("BorderLeftWidthUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderRightColor {
            get {
                return this.BorderRightColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderRightColorField, value) != true)) {
                    this.BorderRightColorField = value;
                    this.RaisePropertyChanged("BorderRightColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderRightStyle {
            get {
                return this.BorderRightStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderRightStyleField, value) != true)) {
                    this.BorderRightStyleField = value;
                    this.RaisePropertyChanged("BorderRightStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderRightWidth {
            get {
                return this.BorderRightWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderRightWidthField, value) != true)) {
                    this.BorderRightWidthField = value;
                    this.RaisePropertyChanged("BorderRightWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderRightWidthUnit {
            get {
                return this.BorderRightWidthUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderRightWidthUnitField, value) != true)) {
                    this.BorderRightWidthUnitField = value;
                    this.RaisePropertyChanged("BorderRightWidthUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderTopColor {
            get {
                return this.BorderTopColorField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderTopColorField, value) != true)) {
                    this.BorderTopColorField = value;
                    this.RaisePropertyChanged("BorderTopColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderTopStyle {
            get {
                return this.BorderTopStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderTopStyleField, value) != true)) {
                    this.BorderTopStyleField = value;
                    this.RaisePropertyChanged("BorderTopStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderTopWidth {
            get {
                return this.BorderTopWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderTopWidthField, value) != true)) {
                    this.BorderTopWidthField = value;
                    this.RaisePropertyChanged("BorderTopWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BorderTopWidthUnit {
            get {
                return this.BorderTopWidthUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BorderTopWidthUnitField, value) != true)) {
                    this.BorderTopWidthUnitField = value;
                    this.RaisePropertyChanged("BorderTopWidthUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontFamily {
            get {
                return this.FontFamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.FontFamilyField, value) != true)) {
                    this.FontFamilyField = value;
                    this.RaisePropertyChanged("FontFamily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontSize {
            get {
                return this.FontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FontSizeField, value) != true)) {
                    this.FontSizeField = value;
                    this.RaisePropertyChanged("FontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontSizeUnit {
            get {
                return this.FontSizeUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.FontSizeUnitField, value) != true)) {
                    this.FontSizeUnitField = value;
                    this.RaisePropertyChanged("FontSizeUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontStyle {
            get {
                return this.FontStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.FontStyleField, value) != true)) {
                    this.FontStyleField = value;
                    this.RaisePropertyChanged("FontStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontVariant {
            get {
                return this.FontVariantField;
            }
            set {
                if ((object.ReferenceEquals(this.FontVariantField, value) != true)) {
                    this.FontVariantField = value;
                    this.RaisePropertyChanged("FontVariant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontWeight {
            get {
                return this.FontWeightField;
            }
            set {
                if ((object.ReferenceEquals(this.FontWeightField, value) != true)) {
                    this.FontWeightField = value;
                    this.RaisePropertyChanged("FontWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeightUnit {
            get {
                return this.HeightUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightUnitField, value) != true)) {
                    this.HeightUnitField = value;
                    this.RaisePropertyChanged("HeightUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBorderSame {
            get {
                return this.IsBorderSameField;
            }
            set {
                if ((this.IsBorderSameField.Equals(value) != true)) {
                    this.IsBorderSameField = value;
                    this.RaisePropertyChanged("IsBorderSame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMarginSame {
            get {
                return this.IsMarginSameField;
            }
            set {
                if ((this.IsMarginSameField.Equals(value) != true)) {
                    this.IsMarginSameField = value;
                    this.RaisePropertyChanged("IsMarginSame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPaddingSame {
            get {
                return this.IsPaddingSameField;
            }
            set {
                if ((this.IsPaddingSameField.Equals(value) != true)) {
                    this.IsPaddingSameField = value;
                    this.RaisePropertyChanged("IsPaddingSame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LetterSpacing {
            get {
                return this.LetterSpacingField;
            }
            set {
                if ((object.ReferenceEquals(this.LetterSpacingField, value) != true)) {
                    this.LetterSpacingField = value;
                    this.RaisePropertyChanged("LetterSpacing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LetterSpacingUnit {
            get {
                return this.LetterSpacingUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.LetterSpacingUnitField, value) != true)) {
                    this.LetterSpacingUnitField = value;
                    this.RaisePropertyChanged("LetterSpacingUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineHeight {
            get {
                return this.LineHeightField;
            }
            set {
                if ((object.ReferenceEquals(this.LineHeightField, value) != true)) {
                    this.LineHeightField = value;
                    this.RaisePropertyChanged("LineHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineHeightUnit {
            get {
                return this.LineHeightUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.LineHeightUnitField, value) != true)) {
                    this.LineHeightUnitField = value;
                    this.RaisePropertyChanged("LineHeightUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginField, value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginBottom {
            get {
                return this.MarginBottomField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginBottomField, value) != true)) {
                    this.MarginBottomField = value;
                    this.RaisePropertyChanged("MarginBottom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginBottomUnit {
            get {
                return this.MarginBottomUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginBottomUnitField, value) != true)) {
                    this.MarginBottomUnitField = value;
                    this.RaisePropertyChanged("MarginBottomUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginLeft {
            get {
                return this.MarginLeftField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginLeftField, value) != true)) {
                    this.MarginLeftField = value;
                    this.RaisePropertyChanged("MarginLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginLeftUnit {
            get {
                return this.MarginLeftUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginLeftUnitField, value) != true)) {
                    this.MarginLeftUnitField = value;
                    this.RaisePropertyChanged("MarginLeftUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginRight {
            get {
                return this.MarginRightField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginRightField, value) != true)) {
                    this.MarginRightField = value;
                    this.RaisePropertyChanged("MarginRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginRightUnit {
            get {
                return this.MarginRightUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginRightUnitField, value) != true)) {
                    this.MarginRightUnitField = value;
                    this.RaisePropertyChanged("MarginRightUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginTop {
            get {
                return this.MarginTopField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginTopField, value) != true)) {
                    this.MarginTopField = value;
                    this.RaisePropertyChanged("MarginTop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginTopUnit {
            get {
                return this.MarginTopUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginTopUnitField, value) != true)) {
                    this.MarginTopUnitField = value;
                    this.RaisePropertyChanged("MarginTopUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Overflow {
            get {
                return this.OverflowField;
            }
            set {
                if ((object.ReferenceEquals(this.OverflowField, value) != true)) {
                    this.OverflowField = value;
                    this.RaisePropertyChanged("Overflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Padding {
            get {
                return this.PaddingField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingField, value) != true)) {
                    this.PaddingField = value;
                    this.RaisePropertyChanged("Padding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingBottom {
            get {
                return this.PaddingBottomField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingBottomField, value) != true)) {
                    this.PaddingBottomField = value;
                    this.RaisePropertyChanged("PaddingBottom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingBottomUnit {
            get {
                return this.PaddingBottomUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingBottomUnitField, value) != true)) {
                    this.PaddingBottomUnitField = value;
                    this.RaisePropertyChanged("PaddingBottomUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingLeft {
            get {
                return this.PaddingLeftField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingLeftField, value) != true)) {
                    this.PaddingLeftField = value;
                    this.RaisePropertyChanged("PaddingLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingLeftUnit {
            get {
                return this.PaddingLeftUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingLeftUnitField, value) != true)) {
                    this.PaddingLeftUnitField = value;
                    this.RaisePropertyChanged("PaddingLeftUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingRight {
            get {
                return this.PaddingRightField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingRightField, value) != true)) {
                    this.PaddingRightField = value;
                    this.RaisePropertyChanged("PaddingRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingRightUnit {
            get {
                return this.PaddingRightUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingRightUnitField, value) != true)) {
                    this.PaddingRightUnitField = value;
                    this.RaisePropertyChanged("PaddingRightUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingTop {
            get {
                return this.PaddingTopField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingTopField, value) != true)) {
                    this.PaddingTopField = value;
                    this.RaisePropertyChanged("PaddingTop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaddingTopUnit {
            get {
                return this.PaddingTopUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PaddingTopUnitField, value) != true)) {
                    this.PaddingTopUnitField = value;
                    this.RaisePropertyChanged("PaddingTopUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextAlign {
            get {
                return this.TextAlignField;
            }
            set {
                if ((object.ReferenceEquals(this.TextAlignField, value) != true)) {
                    this.TextAlignField = value;
                    this.RaisePropertyChanged("TextAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextDecoration {
            get {
                return this.TextDecorationField;
            }
            set {
                if ((object.ReferenceEquals(this.TextDecorationField, value) != true)) {
                    this.TextDecorationField = value;
                    this.RaisePropertyChanged("TextDecoration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextIndent {
            get {
                return this.TextIndentField;
            }
            set {
                if ((object.ReferenceEquals(this.TextIndentField, value) != true)) {
                    this.TextIndentField = value;
                    this.RaisePropertyChanged("TextIndent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextIndentUnit {
            get {
                return this.TextIndentUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.TextIndentUnitField, value) != true)) {
                    this.TextIndentUnitField = value;
                    this.RaisePropertyChanged("TextIndentUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextTransform {
            get {
                return this.TextTransformField;
            }
            set {
                if ((object.ReferenceEquals(this.TextTransformField, value) != true)) {
                    this.TextTransformField = value;
                    this.RaisePropertyChanged("TextTransform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerticalAlign {
            get {
                return this.VerticalAlignField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticalAlignField, value) != true)) {
                    this.VerticalAlignField = value;
                    this.RaisePropertyChanged("VerticalAlign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhiteSpace {
            get {
                return this.WhiteSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.WhiteSpaceField, value) != true)) {
                    this.WhiteSpaceField = value;
                    this.RaisePropertyChanged("WhiteSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Width {
            get {
                return this.WidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthField, value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidthUnit {
            get {
                return this.WidthUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthUnitField, value) != true)) {
                    this.WidthUnitField = value;
                    this.RaisePropertyChanged("WidthUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WordSpacing {
            get {
                return this.WordSpacingField;
            }
            set {
                if ((object.ReferenceEquals(this.WordSpacingField, value) != true)) {
                    this.WordSpacingField = value;
                    this.RaisePropertyChanged("WordSpacing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WordSpacingUnit {
            get {
                return this.WordSpacingUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.WordSpacingUnitField, value) != true)) {
                    this.WordSpacingUnitField = value;
                    this.RaisePropertyChanged("WordSpacingUnit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Form = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Section = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SectionColumn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Label = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Input = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selection = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Entity = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Collection = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Table = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TableRow = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TableColumn = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Metric = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Button = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlDataBinding", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Structures")]
    public partial class FormControlDataBinding : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BindingContextField;
        
        private string BoundPropertyField;
        
        private Mercury.Server.Application.FormControlDataBindingType DataBindingTypeField;
        
        private System.Guid DataSourceControlIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BindingContext {
            get {
                return this.BindingContextField;
            }
            set {
                if ((object.ReferenceEquals(this.BindingContextField, value) != true)) {
                    this.BindingContextField = value;
                    this.RaisePropertyChanged("BindingContext");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoundProperty {
            get {
                return this.BoundPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.BoundPropertyField, value) != true)) {
                    this.BoundPropertyField = value;
                    this.RaisePropertyChanged("BoundProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormControlDataBindingType DataBindingType {
            get {
                return this.DataBindingTypeField;
            }
            set {
                if ((this.DataBindingTypeField.Equals(value) != true)) {
                    this.DataBindingTypeField = value;
                    this.RaisePropertyChanged("DataBindingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataSourceControlId {
            get {
                return this.DataSourceControlIdField;
            }
            set {
                if ((this.DataSourceControlIdField.Equals(value) != true)) {
                    this.DataSourceControlIdField = value;
                    this.RaisePropertyChanged("DataSourceControlId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlEventHandler", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Structures")]
    public partial class FormControlEventHandler : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EventNameField;
        
        private bool ExecuteClientSideField;
        
        private string MethodSourceField;
        
        private bool SmartEventField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExecuteClientSide {
            get {
                return this.ExecuteClientSideField;
            }
            set {
                if ((this.ExecuteClientSideField.Equals(value) != true)) {
                    this.ExecuteClientSideField = value;
                    this.RaisePropertyChanged("ExecuteClientSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodSource {
            get {
                return this.MethodSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodSourceField, value) != true)) {
                    this.MethodSourceField = value;
                    this.RaisePropertyChanged("MethodSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SmartEvent {
            get {
                return this.SmartEventField;
            }
            set {
                if ((this.SmartEventField.Equals(value) != true)) {
                    this.SmartEventField = value;
                    this.RaisePropertyChanged("SmartEvent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlPosition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlPosition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Top = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bottom = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlDataBindingType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlDataBindingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Control = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedValue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Function = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlEventResult", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms")]
    public partial class FormControlEventResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid ControlIdField;
        
        private string EventNameField;
        
        private bool HasExceptionField;
        
        private string ListenerOutputField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ControlId {
            get {
                return this.ControlIdField;
            }
            set {
                if ((this.ControlIdField.Equals(value) != true)) {
                    this.ControlIdField = value;
                    this.RaisePropertyChanged("ControlId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasException {
            get {
                return this.HasExceptionField;
            }
            set {
                if ((this.HasExceptionField.Equals(value) != true)) {
                    this.HasExceptionField = value;
                    this.RaisePropertyChanged("HasException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListenerOutput {
            get {
                return this.ListenerOutputField;
            }
            set {
                if ((object.ReferenceEquals(this.ListenerOutputField, value) != true)) {
                    this.ListenerOutputField = value;
                    this.RaisePropertyChanged("ListenerOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Template = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Instance = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlOrientation", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlOrientation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Portrait = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Landscape = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlPaperSize", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlPaperSize : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Letter = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlDataSource", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlDataSource : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemList = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelectionDirection", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlSelectionDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Horizontal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vertical = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelectionItem", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Structures")]
    public partial class FormControlSelectionItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool EnabledField;
        
        private bool SelectedField;
        
        private string TextField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelectionReferenceSource", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlSelectionReferenceSource : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Program = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BenefitPlan = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ethnicity = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Language = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelectionMode", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlSelectionMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Single = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Multiple = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelectionType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlSelectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropDownList = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ListBox = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckBox = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RadioButton = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlEntityDisplayAgeFormat", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlEntityDisplayAgeFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InYears = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMonths = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlEntityDisplayStyle", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlEntityDisplayStyle : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalExpanded = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameOnly = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSpinnerButtonPosition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlSpinnerButtonPosition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Left = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Right = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlInputType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlInputType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Numeric = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlNumericType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlNumericType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Number = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Currency = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlSelectionOnFocus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlSelectionOnFocus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaretToBeginning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaretToEnd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectAll = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlTextMode", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlTextMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleLine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiLine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Password = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlCollectionType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormControlCollectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberEnrollment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberEnrollmentCoverage = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberEnrollmentPcp = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityAddress = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityContactInformation = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PopulationMembership = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PopulationMembershipServiceEvent = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberService = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderContract = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberRelationship = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity.Enumerations" +
        "")]
    public enum ActivityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Automated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workflow = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monitor = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityAnchorDate", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity.Enumerations" +
        "")]
    public enum ActivityAnchorDate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnerObjectEffectiveDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OwnerObjectAnchorDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviousActivityDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActivityCreateDate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityPerformActionDate", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity.Enumerations" +
        "")]
    public enum ActivityPerformActionDate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Immediately = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstDayOfMonth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleOfMonth = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastDayOfMonth = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityScheduleType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity.Enumerations" +
        "")]
    public enum ActivityScheduleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByFrequency = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quarterly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yearly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirthMonth = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarMonth = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Activity.Enumerations" +
        "")]
    public enum ActivityStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critical = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlanGoalActivityType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Enumeratio" +
        "ns")]
    public enum CarePlanGoalActivityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Intervention = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberTask = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorrespondenceContentType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Reference.Enumeration" +
        "s")]
    public enum CorrespondenceContentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Report = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attachment = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionThresholdStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action.Enumerations")]
    public enum ActionThresholdStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompliantOrNoChange = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenInformational = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenWarning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenCritical = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionThresholdType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Action.Enumerations")]
    public enum ActionThresholdType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarePlanGoalObjective = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarePlanGoalIntervention = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberCarePlanGoalObjective = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberCarePlanGoalIntervention = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CareLevelActivity = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowStepStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.Enumerations")]
    public enum WorkflowStepStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Informational = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critical = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Enumeratio" +
        "ns")]
    public enum CaseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnderDevelopment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Void = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlanStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Enumeratio" +
        "ns")]
    public enum CarePlanStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnderDevelopment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlanGoalTimeframe", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Individual.Enumeratio" +
        "ns")]
    public enum CarePlanGoalTimeframe : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortTerm = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LongTerm = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarDayOfWeekTimes", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Calendar")]
    public partial class CalendarDayOfWeekTimes : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> FridayTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> MondayTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> SaturdayTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> SundayTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> ThursdayTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> TuesdayTimesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> WednesdayTimesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> FridayTimes {
            get {
                return this.FridayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.FridayTimesField, value) != true)) {
                    this.FridayTimesField = value;
                    this.RaisePropertyChanged("FridayTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> MondayTimes {
            get {
                return this.MondayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.MondayTimesField, value) != true)) {
                    this.MondayTimesField = value;
                    this.RaisePropertyChanged("MondayTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> SaturdayTimes {
            get {
                return this.SaturdayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.SaturdayTimesField, value) != true)) {
                    this.SaturdayTimesField = value;
                    this.RaisePropertyChanged("SaturdayTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> SundayTimes {
            get {
                return this.SundayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.SundayTimesField, value) != true)) {
                    this.SundayTimesField = value;
                    this.RaisePropertyChanged("SundayTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> ThursdayTimes {
            get {
                return this.ThursdayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.ThursdayTimesField, value) != true)) {
                    this.ThursdayTimesField = value;
                    this.RaisePropertyChanged("ThursdayTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> TuesdayTimes {
            get {
                return this.TuesdayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.TuesdayTimesField, value) != true)) {
                    this.TuesdayTimesField = value;
                    this.RaisePropertyChanged("TuesdayTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment> WednesdayTimes {
            get {
                return this.WednesdayTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.WednesdayTimesField, value) != true)) {
                    this.WednesdayTimesField = value;
                    this.RaisePropertyChanged("WednesdayTimes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarTimeSegment", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Calendar")]
    public partial class CalendarTimeSegment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.TimeSpan EndTimeField;
        
        private System.TimeSpan StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutomationStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Automation.Enumerations")]
    public enum AutomationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Critical = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationInitialAnchorDate", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.Enumeratio" +
        "ns")]
    public enum PopulationInitialAnchorDate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessDate = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberBirthDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberEnrollmentDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IdentifyingServiceDate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowFramework", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work.Enumerations")]
    public enum WorkflowFramework : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DotNet35 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DotNet40 = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueViewFieldDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueViewFieldDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.SqlDbType DataTypeField;
        
        private string DefaultValueField;
        
        private string DisplayNameField;
        
        private string PropertyNameField;
        
        private long WorkQueueViewIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.SqlDbType DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueViewId {
            get {
                return this.WorkQueueViewIdField;
            }
            set {
                if ((this.WorkQueueViewIdField.Equals(value) != true)) {
                    this.WorkQueueViewIdField = value;
                    this.RaisePropertyChanged("WorkQueueViewId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueViewFilterDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueViewFilterDefinition : Mercury.Server.Application.DataFilterDescriptor {
        
        private int SequenceField;
        
        private long WorkQueueViewIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueViewId {
            get {
                return this.WorkQueueViewIdField;
            }
            set {
                if ((this.WorkQueueViewIdField.Equals(value) != true)) {
                    this.WorkQueueViewIdField = value;
                    this.RaisePropertyChanged("WorkQueueViewId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueViewSortDefinition", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work")]
    public partial class WorkQueueViewSortDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FieldNameField;
        
        private int SequenceField;
        
        private Mercury.Server.Application.DataSortDirection SortDirectionField;
        
        private long WorkQueueViewIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DataSortDirection SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueViewId {
            get {
                return this.WorkQueueViewIdField;
            }
            set {
                if ((this.WorkQueueViewIdField.Equals(value) != true)) {
                    this.WorkQueueViewIdField = value;
                    this.RaisePropertyChanged("WorkQueueViewId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlDbType", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    public enum SqlDbType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BigInt = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Binary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Char = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decimal = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Float = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Money = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NChar = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NText = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NVarChar = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Real = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UniqueIdentifier = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmallDateTime = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmallInt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmallMoney = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timestamp = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TinyInt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VarBinary = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VarChar = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Variant = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xml = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Udt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Structured = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Time = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime2 = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTimeOffset = 34,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataFilterDescriptor", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewFilterDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ReportingServer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorityAccountStamp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SqlConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataSortDescriptor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Contract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsuranceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Program))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Insurer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Program>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.BenefitPlan>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Contract>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageLevel>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.InsuranceType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Insurer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceContentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Service))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingleton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSingleton>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSingleton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoalActivity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlan>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSetDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSetDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingletonDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSingletonDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceClassification))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSetType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceDataSourceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EventDateOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Metric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Metric>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberMetric>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Member))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCoverage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentPcp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentTplCob))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberRelationship))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentCoverage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentPcp>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberRelationship>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentTplCob>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Population))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostClaimDateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostDataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostReportingPeriod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostWatermarkPeriod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricDataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestUserInterfaceUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestPromptUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestRequireEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestSendCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestOpenImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestRequireForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueSummary>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowUserInteractionRequestPromptSelectionItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestPromptSelectionItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserInteractionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserInterfaceUpdateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserPromptImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserPromptType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserPromptButtonClicked))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipSummaryDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipSummaryDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEventDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipTriggerEventDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEventDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipEntryStatusDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipEntryStatusDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponsePromptUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseRequireEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseRequireForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseOpenImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseSendCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Claim>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Claim))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ClaimLine>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PharmacyClaim>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PharmacyClaim))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityDocumentDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityDocumentDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CityStateZipCodeView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CityStateZipCodeView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Mercury.Server.Application.ActionParameter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<long>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.CorrespondenceContent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.RoutingRuleDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewFilterDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewSortDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Mercury.Server.Application.Action>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, long>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkQueueTeamPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkTeamMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthority))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Permission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Permission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroupPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthority>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentAccess>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Environment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Environment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRole>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentRoleMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRolePermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentRolePermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceHostConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceHostBindingConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceHostClientCredentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaDemographic>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaDemographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEnrollment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaGeographic>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaGeographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MessageCredentialType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ServiceModel.BasicHttpSecurityMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.HttpClientCredentialType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceBindingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DateQualifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddressType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Gender))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteImportance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreConfigurationObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreExtensibleObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEventThreshold>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationActivityEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTriggerEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationTriggerEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRuleDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueGetWorkUserView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueGetWorkUserView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueViewFieldDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewFieldDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewSortDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeamMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemAssignmentHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemSender))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueTeam>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemSender>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemAssignmentHistory>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeam>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Workflow>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkOutcome>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueue>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.RoutingRule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedServiceDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedServiceDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedServiceDetail>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SqlDbType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowFramework))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueTeamPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AutomationStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataFilterOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataSortDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CaseStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalTimeframe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CalendarDayOfWeekTimes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CalendarTimeSegment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Provider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderAffiliation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderServiceLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderEnrollment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderAffiliation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderContract>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderServiceLocation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Provider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Authorization>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Authorization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationLine>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNoteContent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Entity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityAddress>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContact>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNote>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionParameterDataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionParameterValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThresholdStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThresholdType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCapabilities))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlDataBinding>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlDataBinding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventHandler>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEventHandler))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlSelectionItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControl>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Form))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEventResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormCompileMessage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlLabel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSectionColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlButton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlDataBindingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlDataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionReferenceSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntityDisplayAgeFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntityDisplayStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSpinnerButtonPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlInputType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlNumericType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionOnFocus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlTextMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCollectionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlOrientation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlPaperSize))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Activity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ActivityThreshold>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoalActivity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevelActivity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareOutcome>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevel>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlan>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProblemStatement>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Correspondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegarding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Correspondence>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.NoteType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ContactRegarding>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityAnchorDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityPerformActionDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Action))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Action>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Session))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ImportExportResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImportExportResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthorityDirectoryEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityDirectoryEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroup>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuditAuthentication>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuditAuthentication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PrinterCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemSenderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueSummaryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcomeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderEnrollmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderAffiliationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderContractCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderServiceLocationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRuleCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberRelationshipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberMetricCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationHeadersCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProgramCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSetCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcomeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlanCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContractCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageLevelCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsuranceTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsurerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultFormHeaderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessageCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatementCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactInformationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityDocumentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteContentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationLineCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimLineCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PharmacyClaimCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddressCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CityStateZipCodeViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoleCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RolePermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoleMembershipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegardingCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuditAuthenticationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupPermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DirectoryEntryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentAccessCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ObjectSaveResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryStringResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BooleanResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryKeyCountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.GetWorkResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberDemographicsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCreateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormSubmitResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlRaiseEventResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlValueChangedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.StringListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.StringResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImportExportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServerConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FaxServer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Duplexing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Duplexing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Printer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Printer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PrinterCapabilities))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultGlobal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultGlobal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultProvider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultPopulationHeader>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultPopulationHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMedicalServiceHeader>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMedicalServiceHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultFormHeader>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultFormHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsGlobalResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsMemberResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsProviderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStepStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowStep>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStartRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventAnchorDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityEventAnchorDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityPerformActionDateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTriggerEventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationInitialAnchorDate))]
    public partial class DataFilterDescriptor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object IgnoreValueField;
        
        private bool IsCaseSensitiveField;
        
        private Mercury.Server.Application.DataFilterOperator OperatorField;
        
        private Mercury.Server.Application.DataContract ParameterField;
        
        private string PropertyPathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object IgnoreValue {
            get {
                return this.IgnoreValueField;
            }
            set {
                if ((object.ReferenceEquals(this.IgnoreValueField, value) != true)) {
                    this.IgnoreValueField = value;
                    this.RaisePropertyChanged("IgnoreValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCaseSensitive {
            get {
                return this.IsCaseSensitiveField;
            }
            set {
                if ((this.IsCaseSensitiveField.Equals(value) != true)) {
                    this.IsCaseSensitiveField = value;
                    this.RaisePropertyChanged("IsCaseSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DataFilterOperator Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((this.OperatorField.Equals(value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DataContract Parameter {
            get {
                return this.ParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterField, value) != true)) {
                    this.ParameterField = value;
                    this.RaisePropertyChanged("Parameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyPath {
            get {
                return this.PropertyPathField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyPathField, value) != true)) {
                    this.PropertyPathField = value;
                    this.RaisePropertyChanged("PropertyPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataContract", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ReportingServer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorityAccountStamp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataFilterDescriptor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SqlConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataSortDescriptor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Contract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsuranceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Program))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Insurer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Program>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.BenefitPlan>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Contract>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageLevel>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.InsuranceType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Insurer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceContentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Service))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingleton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSingleton>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSingleton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSet>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlanGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoalActivity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCarePlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlanGoal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberCaseCarePlan>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSetDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSetDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSingletonDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ServiceSingletonDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceClassification))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceSetType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceDataSourceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EventDateOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Metric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Metric>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberMetric>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Member))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCoverage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentPcp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentTplCob))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberRelationship))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentCoverage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentPcp>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberRelationship>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentTplCob>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Population))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostClaimDateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostDataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostReportingPeriod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCostWatermarkPeriod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricDataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestUserInterfaceUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestPromptUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestRequireEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestSendCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestOpenImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestRequireForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueSummary>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowUserInteractionRequestPromptSelectionItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestPromptSelectionItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserInteractionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserInterfaceUpdateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserPromptImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserPromptType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.UserPromptButtonClicked))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipSummaryDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipSummaryDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEventDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipTriggerEventDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEventDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipEntryStatusDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipEntryStatusDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponsePromptUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseRequireEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseRequireForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseOpenImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseSendCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Claim>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Claim))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ClaimLine>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PharmacyClaim>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PharmacyClaim))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityDocumentDataView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityDocumentDataView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CityStateZipCodeView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CityStateZipCodeView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Mercury.Server.Application.ActionParameter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<long>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.CorrespondenceContent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.RoutingRuleDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewFilterDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Mercury.Server.Application.WorkQueueViewSortDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, Mercury.Server.Application.Action>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, long>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkQueueTeamPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkTeamMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthority))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Permission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Permission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroupPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthority>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentAccess>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentAccess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Sponsor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Environment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Environment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRole>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentRoleMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRolePermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentRolePermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceHostConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceHostBindingConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceHostClientCredentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaDemographic>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaDemographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEnrollment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationCriteriaGeographic>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaGeographic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MessageCredentialType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ServiceModel.BasicHttpSecurityMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.HttpClientCredentialType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WebServiceBindingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DateQualifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddressType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Gender))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteImportance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreConfigurationObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreExtensibleObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoreObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEventThreshold>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationActivityEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTriggerEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationServiceEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationTriggerEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEvent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRuleDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueGetWorkUserView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueGetWorkUserView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueViewFieldDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewFieldDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewFilterDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewSortDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeamMembership>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamMembership))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemAssignmentHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemSender))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueTeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueTeam>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemSender>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemAssignmentHistory>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeam>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueView>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Workflow>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkOutcome>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueue>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.RoutingRule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedServiceDefinition>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedServiceDefinition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedServiceDetail>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SqlDbType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowFramework))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueTeamPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AutomationStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataFilterOperator))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DataSortDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CaseStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalTimeframe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CalendarDayOfWeekTimes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CalendarTimeSegment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CalendarTimeSegment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Provider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderAffiliation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderEnrollment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderServiceLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderEnrollment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderAffiliation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderContract>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderServiceLocation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Provider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Authorization>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Authorization))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationLine>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNoteContent>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Entity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityAddress>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContact>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNote>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionParameterDataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionParameterValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThresholdStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThresholdType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCapabilities))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlDataBinding>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlDataBinding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventHandler>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEventHandler))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlSelectionItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControl))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControl>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Form))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormControlEventResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEventResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormCompileMessage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlLabel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSectionColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlAddress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlMetric))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlText))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlButton))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlDataBindingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlDataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionReferenceSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntityDisplayAgeFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlEntityDisplayStyle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSpinnerButtonPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlInputType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlNumericType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlSelectionOnFocus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlTextMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlCollectionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlOrientation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlPaperSize))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlPosition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessageType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Activity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ActivityThreshold>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlanGoalActivity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanGoalActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevelActivity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatement))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareOutcome>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcome))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevel>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlan>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProblemStatement>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Correspondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegarding))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Correspondence>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.NoteType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ContactRegarding>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityAnchorDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityPerformActionDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActivityStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Action))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionThreshold))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Action>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Session))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ImportExportResult>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImportExportResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthorityDirectoryEntry>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityDirectoryEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroup>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuditAuthentication>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuditAuthentication))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PrinterCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemSenderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueSummaryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcomeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderEnrollmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderAffiliationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderContractCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderServiceLocationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRuleCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberRelationshipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberMetricCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationHeadersCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProgramCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSetCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcomeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlanCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContractCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageLevelCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsuranceTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsurerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultFormHeaderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessageCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatementCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactInformationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityDocumentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteContentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationLineCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimLineCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PharmacyClaimCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddressCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CityStateZipCodeViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoleCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RolePermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoleMembershipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegardingCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuditAuthenticationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupPermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DirectoryEntryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentAccessCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ObjectSaveResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ResponseBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ServiceException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryStringResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BooleanResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryKeyCountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.GetWorkResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberDemographicsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCreateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormSubmitResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlRaiseEventResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlValueChangedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.StringListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.StringResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImportExportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServerConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FaxServer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Duplexing>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Duplexing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Printer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.Printer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PrinterCapabilities))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultGlobal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultGlobal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMember))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultProvider>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultProvider))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultPopulationHeader>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultPopulationHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMedicalServiceHeader>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMedicalServiceHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultFormHeader>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultFormHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsGlobalResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsMemberResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsProviderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStepStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowStep>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStep))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStartRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventAnchorDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityEventAnchorDate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityPerformActionDateType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationActivityScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationServiceEventStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTriggerEventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationCriteriaEventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationInitialAnchorDate))]
    public partial class DataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSortDescriptor", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data")]
    public partial class DataSortDescriptor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FieldNameField;
        
        private Mercury.Server.Application.DataSortDirection SortDirectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DataSortDirection SortDirection {
            get {
                return this.SortDirectionField;
            }
            set {
                if ((this.SortDirectionField.Equals(value) != true)) {
                    this.SortDirectionField = value;
                    this.RaisePropertyChanged("SortDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberServiceDetailSingleton", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices")]
    public partial class MemberServiceDetailSingleton : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AdmissionDateField;
        
        private string BillTypeField;
        
        private System.Nullable<System.DateTime> ClaimDateFromField;
        
        private System.Nullable<System.DateTime> ClaimDateThruField;
        
        private long ClaimIdField;
        
        private int ClaimLineField;
        
        private string ClaimStatusField;
        
        private string ClaimTypeField;
        
        private string DeaClassificationField;
        
        private string DescriptionField;
        
        private string DiagnosisCodeField;
        
        private System.Nullable<System.DateTime> DischargeDateField;
        
        private System.DateTime EventDateField;
        
        private string ExternalClaimIdField;
        
        private string Icd9ProcedureCodeField;
        
        private bool IsPcpClaimField;
        
        private string LabLoincCodeField;
        
        private string LabNameField;
        
        private decimal LabValueField;
        
        private string LocationCodeField;
        
        private long MemberIdField;
        
        private long MemberServiceIdField;
        
        private string ModifierCodeField;
        
        private string NdcCodeField;
        
        private System.Nullable<System.DateTime> PaidDateField;
        
        private string PrincipalDiagnosisCodeField;
        
        private string ProcedureCodeField;
        
        private long ProviderIdField;
        
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        private string RevenueCodeField;
        
        private System.Nullable<System.DateTime> ServiceDateFromField;
        
        private System.Nullable<System.DateTime> ServiceDateThruField;
        
        private long SingletonDefinitionIdField;
        
        private string SpecialtyNameField;
        
        private string TherapeuticClassificationField;
        
        private decimal UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AdmissionDate {
            get {
                return this.AdmissionDateField;
            }
            set {
                if ((this.AdmissionDateField.Equals(value) != true)) {
                    this.AdmissionDateField = value;
                    this.RaisePropertyChanged("AdmissionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillType {
            get {
                return this.BillTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillTypeField, value) != true)) {
                    this.BillTypeField = value;
                    this.RaisePropertyChanged("BillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClaimDateFrom {
            get {
                return this.ClaimDateFromField;
            }
            set {
                if ((this.ClaimDateFromField.Equals(value) != true)) {
                    this.ClaimDateFromField = value;
                    this.RaisePropertyChanged("ClaimDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClaimDateThru {
            get {
                return this.ClaimDateThruField;
            }
            set {
                if ((this.ClaimDateThruField.Equals(value) != true)) {
                    this.ClaimDateThruField = value;
                    this.RaisePropertyChanged("ClaimDateThru");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClaimId {
            get {
                return this.ClaimIdField;
            }
            set {
                if ((this.ClaimIdField.Equals(value) != true)) {
                    this.ClaimIdField = value;
                    this.RaisePropertyChanged("ClaimId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimLine {
            get {
                return this.ClaimLineField;
            }
            set {
                if ((this.ClaimLineField.Equals(value) != true)) {
                    this.ClaimLineField = value;
                    this.RaisePropertyChanged("ClaimLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimStatus {
            get {
                return this.ClaimStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimStatusField, value) != true)) {
                    this.ClaimStatusField = value;
                    this.RaisePropertyChanged("ClaimStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeaClassification {
            get {
                return this.DeaClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.DeaClassificationField, value) != true)) {
                    this.DeaClassificationField = value;
                    this.RaisePropertyChanged("DeaClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisCode {
            get {
                return this.DiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisCodeField, value) != true)) {
                    this.DiagnosisCodeField = value;
                    this.RaisePropertyChanged("DiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DischargeDate {
            get {
                return this.DischargeDateField;
            }
            set {
                if ((this.DischargeDateField.Equals(value) != true)) {
                    this.DischargeDateField = value;
                    this.RaisePropertyChanged("DischargeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalClaimId {
            get {
                return this.ExternalClaimIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalClaimIdField, value) != true)) {
                    this.ExternalClaimIdField = value;
                    this.RaisePropertyChanged("ExternalClaimId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icd9ProcedureCode {
            get {
                return this.Icd9ProcedureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Icd9ProcedureCodeField, value) != true)) {
                    this.Icd9ProcedureCodeField = value;
                    this.RaisePropertyChanged("Icd9ProcedureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPcpClaim {
            get {
                return this.IsPcpClaimField;
            }
            set {
                if ((this.IsPcpClaimField.Equals(value) != true)) {
                    this.IsPcpClaimField = value;
                    this.RaisePropertyChanged("IsPcpClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabLoincCode {
            get {
                return this.LabLoincCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LabLoincCodeField, value) != true)) {
                    this.LabLoincCodeField = value;
                    this.RaisePropertyChanged("LabLoincCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabName {
            get {
                return this.LabNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LabNameField, value) != true)) {
                    this.LabNameField = value;
                    this.RaisePropertyChanged("LabName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LabValue {
            get {
                return this.LabValueField;
            }
            set {
                if ((this.LabValueField.Equals(value) != true)) {
                    this.LabValueField = value;
                    this.RaisePropertyChanged("LabValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberServiceId {
            get {
                return this.MemberServiceIdField;
            }
            set {
                if ((this.MemberServiceIdField.Equals(value) != true)) {
                    this.MemberServiceIdField = value;
                    this.RaisePropertyChanged("MemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifierCode {
            get {
                return this.ModifierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierCodeField, value) != true)) {
                    this.ModifierCodeField = value;
                    this.RaisePropertyChanged("ModifierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdcCode {
            get {
                return this.NdcCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NdcCodeField, value) != true)) {
                    this.NdcCodeField = value;
                    this.RaisePropertyChanged("NdcCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PaidDate {
            get {
                return this.PaidDateField;
            }
            set {
                if ((this.PaidDateField.Equals(value) != true)) {
                    this.PaidDateField = value;
                    this.RaisePropertyChanged("PaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalDiagnosisCode {
            get {
                return this.PrincipalDiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalDiagnosisCodeField, value) != true)) {
                    this.PrincipalDiagnosisCodeField = value;
                    this.RaisePropertyChanged("PrincipalDiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCode {
            get {
                return this.ProcedureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeField, value) != true)) {
                    this.ProcedureCodeField = value;
                    this.RaisePropertyChanged("ProcedureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueCode {
            get {
                return this.RevenueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueCodeField, value) != true)) {
                    this.RevenueCodeField = value;
                    this.RaisePropertyChanged("RevenueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceDateFrom {
            get {
                return this.ServiceDateFromField;
            }
            set {
                if ((this.ServiceDateFromField.Equals(value) != true)) {
                    this.ServiceDateFromField = value;
                    this.RaisePropertyChanged("ServiceDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceDateThru {
            get {
                return this.ServiceDateThruField;
            }
            set {
                if ((this.ServiceDateThruField.Equals(value) != true)) {
                    this.ServiceDateThruField = value;
                    this.RaisePropertyChanged("ServiceDateThru");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SingletonDefinitionId {
            get {
                return this.SingletonDefinitionIdField;
            }
            set {
                if ((this.SingletonDefinitionIdField.Equals(value) != true)) {
                    this.SingletonDefinitionIdField = value;
                    this.RaisePropertyChanged("SingletonDefinitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyName {
            get {
                return this.SpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyNameField, value) != true)) {
                    this.SpecialtyNameField = value;
                    this.RaisePropertyChanged("SpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TherapeuticClassification {
            get {
                return this.TherapeuticClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.TherapeuticClassificationField, value) != true)) {
                    this.TherapeuticClassificationField = value;
                    this.RaisePropertyChanged("TherapeuticClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberServiceDetailSet", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.MedicalServices")]
    public partial class MemberServiceDetailSet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long DetailMemberServiceIdField;
        
        private System.DateTime EventDateField;
        
        private long MemberIdField;
        
        private long MemberServiceIdField;
        
        private long ParentServiceIdField;
        
        private long ServiceIdField;
        
        private string ServiceNameField;
        
        private Mercury.Server.Application.MedicalServiceType ServiceTypeField;
        
        private long SetDefinitionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DetailMemberServiceId {
            get {
                return this.DetailMemberServiceIdField;
            }
            set {
                if ((this.DetailMemberServiceIdField.Equals(value) != true)) {
                    this.DetailMemberServiceIdField = value;
                    this.RaisePropertyChanged("DetailMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberServiceId {
            get {
                return this.MemberServiceIdField;
            }
            set {
                if ((this.MemberServiceIdField.Equals(value) != true)) {
                    this.MemberServiceIdField = value;
                    this.RaisePropertyChanged("MemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ParentServiceId {
            get {
                return this.ParentServiceIdField;
            }
            set {
                if ((this.ParentServiceIdField.Equals(value) != true)) {
                    this.ParentServiceIdField = value;
                    this.RaisePropertyChanged("ParentServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MedicalServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SetDefinitionId {
            get {
                return this.SetDefinitionIdField;
            }
            set {
                if ((this.SetDefinitionIdField.Equals(value) != true)) {
                    this.SetDefinitionIdField = value;
                    this.RaisePropertyChanged("SetDefinitionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestBase", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestUserInterfaceUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestPromptUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestRequireEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestSendCorrespondence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestOpenImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionRequestRequireForm))]
    public partial class WorkflowUserInteractionRequestBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowCancelField;
        
        private bool HasExceptionField;
        
        private Mercury.Server.Application.UserInteractionType InteractionTypeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowCancel {
            get {
                return this.AllowCancelField;
            }
            set {
                if ((this.AllowCancelField.Equals(value) != true)) {
                    this.AllowCancelField = value;
                    this.RaisePropertyChanged("AllowCancel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasException {
            get {
                return this.HasExceptionField;
            }
            set {
                if ((this.HasExceptionField.Equals(value) != true)) {
                    this.HasExceptionField = value;
                    this.RaisePropertyChanged("HasException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.UserInteractionType InteractionType {
            get {
                return this.InteractionTypeField;
            }
            set {
                if ((this.InteractionTypeField.Equals(value) != true)) {
                    this.InteractionTypeField = value;
                    this.RaisePropertyChanged("InteractionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestUserInterfaceUpdate", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestUserInterfaceUpdate : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private System.Collections.Generic.Dictionary<string, string> InputParametersField;
        
        private Mercury.Server.Application.UserInterfaceUpdateType UpdateTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> InputParameters {
            get {
                return this.InputParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.InputParametersField, value) != true)) {
                    this.InputParametersField = value;
                    this.RaisePropertyChanged("InputParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.UserInterfaceUpdateType UpdateType {
            get {
                return this.UpdateTypeField;
            }
            set {
                if ((this.UpdateTypeField.Equals(value) != true)) {
                    this.UpdateTypeField = value;
                    this.RaisePropertyChanged("UpdateType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestPromptUser", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestPromptUser : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private int ColumnsField;
        
        private string DateFormatField;
        
        private string DisplayDateFormatField;
        
        private string EmptyMessageField;
        
        private string MaskField;
        
        private int MaxLengthField;
        
        private double MaxValueField;
        
        private double MinValueField;
        
        private Mercury.Server.Application.UserPromptImage PromptImageField;
        
        private string PromptMessageField;
        
        private string PromptTitleField;
        
        private Mercury.Server.Application.UserPromptType PromptTypeField;
        
        private int RowsField;
        
        private string SelectedValueField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowUserInteractionRequestPromptSelectionItem> SelectionItemsField;
        
        private bool ShowSpinButtonsField;
        
        private string TextField;
        
        private string ValidationField;
        
        private bool WrapField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((this.ColumnsField.Equals(value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateFormat {
            get {
                return this.DateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DateFormatField, value) != true)) {
                    this.DateFormatField = value;
                    this.RaisePropertyChanged("DateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayDateFormat {
            get {
                return this.DisplayDateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayDateFormatField, value) != true)) {
                    this.DisplayDateFormatField = value;
                    this.RaisePropertyChanged("DisplayDateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmptyMessage {
            get {
                return this.EmptyMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.EmptyMessageField, value) != true)) {
                    this.EmptyMessageField = value;
                    this.RaisePropertyChanged("EmptyMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskField, value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                if ((this.MaxLengthField.Equals(value) != true)) {
                    this.MaxLengthField = value;
                    this.RaisePropertyChanged("MaxLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.UserPromptImage PromptImage {
            get {
                return this.PromptImageField;
            }
            set {
                if ((this.PromptImageField.Equals(value) != true)) {
                    this.PromptImageField = value;
                    this.RaisePropertyChanged("PromptImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromptMessage {
            get {
                return this.PromptMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.PromptMessageField, value) != true)) {
                    this.PromptMessageField = value;
                    this.RaisePropertyChanged("PromptMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromptTitle {
            get {
                return this.PromptTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PromptTitleField, value) != true)) {
                    this.PromptTitleField = value;
                    this.RaisePropertyChanged("PromptTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.UserPromptType PromptType {
            get {
                return this.PromptTypeField;
            }
            set {
                if ((this.PromptTypeField.Equals(value) != true)) {
                    this.PromptTypeField = value;
                    this.RaisePropertyChanged("PromptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedValue {
            get {
                return this.SelectedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedValueField, value) != true)) {
                    this.SelectedValueField = value;
                    this.RaisePropertyChanged("SelectedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowUserInteractionRequestPromptSelectionItem> SelectionItems {
            get {
                return this.SelectionItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionItemsField, value) != true)) {
                    this.SelectionItemsField = value;
                    this.RaisePropertyChanged("SelectionItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowSpinButtons {
            get {
                return this.ShowSpinButtonsField;
            }
            set {
                if ((this.ShowSpinButtonsField.Equals(value) != true)) {
                    this.ShowSpinButtonsField = value;
                    this.RaisePropertyChanged("ShowSpinButtons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Validation {
            get {
                return this.ValidationField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationField, value) != true)) {
                    this.ValidationField = value;
                    this.RaisePropertyChanged("Validation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Wrap {
            get {
                return this.WrapField;
            }
            set {
                if ((this.WrapField.Equals(value) != true)) {
                    this.WrapField = value;
                    this.RaisePropertyChanged("Wrap");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestRequireEntity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestRequireEntity : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private bool AllowOpenProfileField;
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        private long InitialEntityObjectIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowOpenProfile {
            get {
                return this.AllowOpenProfileField;
            }
            set {
                if ((this.AllowOpenProfileField.Equals(value) != true)) {
                    this.AllowOpenProfileField = value;
                    this.RaisePropertyChanged("AllowOpenProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InitialEntityObjectId {
            get {
                return this.InitialEntityObjectIdField;
            }
            set {
                if ((this.InitialEntityObjectIdField.Equals(value) != true)) {
                    this.InitialEntityObjectIdField = value;
                    this.RaisePropertyChanged("InitialEntityObjectId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestContactEntity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestContactEntity : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private bool AllowEditContactDateTimeField;
        
        private bool AllowEditRegardingField;
        
        private bool AllowEditRelatedEntityField;
        
        private int AttemptField;
        
        private Mercury.Server.Application.Entity EntityField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation> EntityContactInformationField;
        
        private string IntroductionScriptField;
        
        private string RegardingField;
        
        private Mercury.Server.Application.Entity RelatedEntityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowEditContactDateTime {
            get {
                return this.AllowEditContactDateTimeField;
            }
            set {
                if ((this.AllowEditContactDateTimeField.Equals(value) != true)) {
                    this.AllowEditContactDateTimeField = value;
                    this.RaisePropertyChanged("AllowEditContactDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowEditRegarding {
            get {
                return this.AllowEditRegardingField;
            }
            set {
                if ((this.AllowEditRegardingField.Equals(value) != true)) {
                    this.AllowEditRegardingField = value;
                    this.RaisePropertyChanged("AllowEditRegarding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowEditRelatedEntity {
            get {
                return this.AllowEditRelatedEntityField;
            }
            set {
                if ((this.AllowEditRelatedEntityField.Equals(value) != true)) {
                    this.AllowEditRelatedEntityField = value;
                    this.RaisePropertyChanged("AllowEditRelatedEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attempt {
            get {
                return this.AttemptField;
            }
            set {
                if ((this.AttemptField.Equals(value) != true)) {
                    this.AttemptField = value;
                    this.RaisePropertyChanged("Attempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation> EntityContactInformation {
            get {
                return this.EntityContactInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContactInformationField, value) != true)) {
                    this.EntityContactInformationField = value;
                    this.RaisePropertyChanged("EntityContactInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntroductionScript {
            get {
                return this.IntroductionScriptField;
            }
            set {
                if ((object.ReferenceEquals(this.IntroductionScriptField, value) != true)) {
                    this.IntroductionScriptField = value;
                    this.RaisePropertyChanged("IntroductionScript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regarding {
            get {
                return this.RegardingField;
            }
            set {
                if ((object.ReferenceEquals(this.RegardingField, value) != true)) {
                    this.RegardingField = value;
                    this.RaisePropertyChanged("Regarding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity RelatedEntity {
            get {
                return this.RelatedEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedEntityField, value) != true)) {
                    this.RelatedEntityField = value;
                    this.RaisePropertyChanged("RelatedEntity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestSendCorrespondence", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestSendCorrespondence : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private bool AllowAlternateAddressField;
        
        private bool AllowEditRelatedEntityField;
        
        private bool AllowFutureSendDateField;
        
        private bool AllowHistoricalSendDateField;
        
        private bool AllowSendByEmailField;
        
        private bool AllowSendByFacsimileField;
        
        private bool AllowSendByInPersonField;
        
        private bool AllowUserSelectionField;
        
        private Mercury.Server.Application.EntityAddress AlternateAddressField;
        
        private string AlternateEmailField;
        
        private string AlternateFaxNumberField;
        
        private string AttentionField;
        
        private long CorrespondenceIdField;
        
        private Mercury.Server.Application.Entity EntityField;
        
        private Mercury.Server.Application.Entity RelatedEntityField;
        
        private System.DateTime SendDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAlternateAddress {
            get {
                return this.AllowAlternateAddressField;
            }
            set {
                if ((this.AllowAlternateAddressField.Equals(value) != true)) {
                    this.AllowAlternateAddressField = value;
                    this.RaisePropertyChanged("AllowAlternateAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowEditRelatedEntity {
            get {
                return this.AllowEditRelatedEntityField;
            }
            set {
                if ((this.AllowEditRelatedEntityField.Equals(value) != true)) {
                    this.AllowEditRelatedEntityField = value;
                    this.RaisePropertyChanged("AllowEditRelatedEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowFutureSendDate {
            get {
                return this.AllowFutureSendDateField;
            }
            set {
                if ((this.AllowFutureSendDateField.Equals(value) != true)) {
                    this.AllowFutureSendDateField = value;
                    this.RaisePropertyChanged("AllowFutureSendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowHistoricalSendDate {
            get {
                return this.AllowHistoricalSendDateField;
            }
            set {
                if ((this.AllowHistoricalSendDateField.Equals(value) != true)) {
                    this.AllowHistoricalSendDateField = value;
                    this.RaisePropertyChanged("AllowHistoricalSendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSendByEmail {
            get {
                return this.AllowSendByEmailField;
            }
            set {
                if ((this.AllowSendByEmailField.Equals(value) != true)) {
                    this.AllowSendByEmailField = value;
                    this.RaisePropertyChanged("AllowSendByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSendByFacsimile {
            get {
                return this.AllowSendByFacsimileField;
            }
            set {
                if ((this.AllowSendByFacsimileField.Equals(value) != true)) {
                    this.AllowSendByFacsimileField = value;
                    this.RaisePropertyChanged("AllowSendByFacsimile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSendByInPerson {
            get {
                return this.AllowSendByInPersonField;
            }
            set {
                if ((this.AllowSendByInPersonField.Equals(value) != true)) {
                    this.AllowSendByInPersonField = value;
                    this.RaisePropertyChanged("AllowSendByInPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUserSelection {
            get {
                return this.AllowUserSelectionField;
            }
            set {
                if ((this.AllowUserSelectionField.Equals(value) != true)) {
                    this.AllowUserSelectionField = value;
                    this.RaisePropertyChanged("AllowUserSelection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityAddress AlternateAddress {
            get {
                return this.AlternateAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateAddressField, value) != true)) {
                    this.AlternateAddressField = value;
                    this.RaisePropertyChanged("AlternateAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateEmail {
            get {
                return this.AlternateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateEmailField, value) != true)) {
                    this.AlternateEmailField = value;
                    this.RaisePropertyChanged("AlternateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateFaxNumber {
            get {
                return this.AlternateFaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateFaxNumberField, value) != true)) {
                    this.AlternateFaxNumberField = value;
                    this.RaisePropertyChanged("AlternateFaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attention {
            get {
                return this.AttentionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttentionField, value) != true)) {
                    this.AttentionField = value;
                    this.RaisePropertyChanged("Attention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorrespondenceId {
            get {
                return this.CorrespondenceIdField;
            }
            set {
                if ((this.CorrespondenceIdField.Equals(value) != true)) {
                    this.CorrespondenceIdField = value;
                    this.RaisePropertyChanged("CorrespondenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity RelatedEntity {
            get {
                return this.RelatedEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedEntityField, value) != true)) {
                    this.RelatedEntityField = value;
                    this.RaisePropertyChanged("RelatedEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendDate {
            get {
                return this.SendDateField;
            }
            set {
                if ((this.SendDateField.Equals(value) != true)) {
                    this.SendDateField = value;
                    this.RaisePropertyChanged("SendDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestOpenImage", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestOpenImage : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private long ObjectIdField;
        
        private string ObjectTypeField;
        
        private bool RenderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Render {
            get {
                return this.RenderField;
            }
            set {
                if ((this.RenderField.Equals(value) != true)) {
                    this.RenderField = value;
                    this.RaisePropertyChanged("Render");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestRequireForm", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Request")]
    public partial class WorkflowUserInteractionRequestRequireForm : Mercury.Server.Application.WorkflowUserInteractionRequestBase {
        
        private bool AllowSaveAsDraftField;
        
        private long EntityObjectIdField;
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        private Mercury.Server.Application.Form FormField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSaveAsDraft {
            get {
                return this.AllowSaveAsDraftField;
            }
            set {
                if ((this.AllowSaveAsDraftField.Equals(value) != true)) {
                    this.AllowSaveAsDraftField = value;
                    this.RaisePropertyChanged("AllowSaveAsDraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityObjectId {
            get {
                return this.EntityObjectIdField;
            }
            set {
                if ((this.EntityObjectIdField.Equals(value) != true)) {
                    this.EntityObjectIdField = value;
                    this.RaisePropertyChanged("EntityObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Form Form {
            get {
                return this.FormField;
            }
            set {
                if ((object.ReferenceEquals(this.FormField, value) != true)) {
                    this.FormField = value;
                    this.RaisePropertyChanged("Form");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionRequestPromptSelectionItem", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Structures")]
    public partial class WorkflowUserInteractionRequestPromptSelectionItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool EnabledField;
        
        private bool SelectedField;
        
        private string TextField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInteractionType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Enumerations")]
    public enum UserInteractionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prompt = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserInterfaceUpdate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequireEntity = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequireForm = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactEntity = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendCorrespondence = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateMemberCarePlan = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateModifyMemberCase = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenImage = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInterfaceUpdateType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Enumerations")]
    public enum UserInterfaceUpdateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InputParameters = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPromptImage", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Enumerations")]
    public enum UserPromptImage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoImage = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Question = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stop = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPromptType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Enumerations")]
    public enum UserPromptType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmationOkCancel = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmationYesNo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Input = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateInput = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selection = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPromptButtonClicked", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Enumerations")]
    public enum UserPromptButtonClicked : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipSummaryDataView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.DataViews")]
    public partial class PopulationMembershipSummaryDataView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AnchorDateField;
        
        private System.DateTime EffectiveDateField;
        
        private System.Nullable<System.DateTime> ExpectedEventDateField;
        
        private System.Nullable<System.DateTime> IdentifyingEventDateField;
        
        private long IdentifyingEventMemberServiceIdField;
        
        private long IdentifyingEventServiceIdField;
        
        private string IdentifyingEventServiceNameField;
        
        private long MemberIdField;
        
        private System.Nullable<System.DateTime> NextThresholdDateField;
        
        private bool PopulationEnabledField;
        
        private long PopulationIdField;
        
        private long PopulationMembershipIdField;
        
        private string PopulationNameField;
        
        private bool PopulationVisibleField;
        
        private System.Nullable<System.DateTime> PreviousThresholdDateField;
        
        private long ServiceIdField;
        
        private string ServiceNameField;
        
        private Mercury.Server.Application.PopulationServiceEventStatus StatusField;
        
        private string StatusTextField;
        
        private System.Nullable<System.DateTime> TerminatingEventDateField;
        
        private long TerminatingEventMemberServiceIdField;
        
        private long TerminatingEventServiceIdField;
        
        private string TerminatingEventServiceNameField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnchorDate {
            get {
                return this.AnchorDateField;
            }
            set {
                if ((this.AnchorDateField.Equals(value) != true)) {
                    this.AnchorDateField = value;
                    this.RaisePropertyChanged("AnchorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpectedEventDate {
            get {
                return this.ExpectedEventDateField;
            }
            set {
                if ((this.ExpectedEventDateField.Equals(value) != true)) {
                    this.ExpectedEventDateField = value;
                    this.RaisePropertyChanged("ExpectedEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IdentifyingEventDate {
            get {
                return this.IdentifyingEventDateField;
            }
            set {
                if ((this.IdentifyingEventDateField.Equals(value) != true)) {
                    this.IdentifyingEventDateField = value;
                    this.RaisePropertyChanged("IdentifyingEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdentifyingEventMemberServiceId {
            get {
                return this.IdentifyingEventMemberServiceIdField;
            }
            set {
                if ((this.IdentifyingEventMemberServiceIdField.Equals(value) != true)) {
                    this.IdentifyingEventMemberServiceIdField = value;
                    this.RaisePropertyChanged("IdentifyingEventMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdentifyingEventServiceId {
            get {
                return this.IdentifyingEventServiceIdField;
            }
            set {
                if ((this.IdentifyingEventServiceIdField.Equals(value) != true)) {
                    this.IdentifyingEventServiceIdField = value;
                    this.RaisePropertyChanged("IdentifyingEventServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentifyingEventServiceName {
            get {
                return this.IdentifyingEventServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifyingEventServiceNameField, value) != true)) {
                    this.IdentifyingEventServiceNameField = value;
                    this.RaisePropertyChanged("IdentifyingEventServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextThresholdDate {
            get {
                return this.NextThresholdDateField;
            }
            set {
                if ((this.NextThresholdDateField.Equals(value) != true)) {
                    this.NextThresholdDateField = value;
                    this.RaisePropertyChanged("NextThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PopulationEnabled {
            get {
                return this.PopulationEnabledField;
            }
            set {
                if ((this.PopulationEnabledField.Equals(value) != true)) {
                    this.PopulationEnabledField = value;
                    this.RaisePropertyChanged("PopulationEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipId {
            get {
                return this.PopulationMembershipIdField;
            }
            set {
                if ((this.PopulationMembershipIdField.Equals(value) != true)) {
                    this.PopulationMembershipIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PopulationName {
            get {
                return this.PopulationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PopulationNameField, value) != true)) {
                    this.PopulationNameField = value;
                    this.RaisePropertyChanged("PopulationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PopulationVisible {
            get {
                return this.PopulationVisibleField;
            }
            set {
                if ((this.PopulationVisibleField.Equals(value) != true)) {
                    this.PopulationVisibleField = value;
                    this.RaisePropertyChanged("PopulationVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousThresholdDate {
            get {
                return this.PreviousThresholdDateField;
            }
            set {
                if ((this.PreviousThresholdDateField.Equals(value) != true)) {
                    this.PreviousThresholdDateField = value;
                    this.RaisePropertyChanged("PreviousThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationServiceEventStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusText {
            get {
                return this.StatusTextField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTextField, value) != true)) {
                    this.StatusTextField = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminatingEventDate {
            get {
                return this.TerminatingEventDateField;
            }
            set {
                if ((this.TerminatingEventDateField.Equals(value) != true)) {
                    this.TerminatingEventDateField = value;
                    this.RaisePropertyChanged("TerminatingEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TerminatingEventMemberServiceId {
            get {
                return this.TerminatingEventMemberServiceIdField;
            }
            set {
                if ((this.TerminatingEventMemberServiceIdField.Equals(value) != true)) {
                    this.TerminatingEventMemberServiceIdField = value;
                    this.RaisePropertyChanged("TerminatingEventMemberServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TerminatingEventServiceId {
            get {
                return this.TerminatingEventServiceIdField;
            }
            set {
                if ((this.TerminatingEventServiceIdField.Equals(value) != true)) {
                    this.TerminatingEventServiceIdField = value;
                    this.RaisePropertyChanged("TerminatingEventServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminatingEventServiceName {
            get {
                return this.TerminatingEventServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminatingEventServiceNameField, value) != true)) {
                    this.TerminatingEventServiceNameField = value;
                    this.RaisePropertyChanged("TerminatingEventServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipServiceEventDataView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.DataViews")]
    public partial class PopulationMembershipServiceEventDataView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> EventDateField;
        
        private System.Nullable<System.DateTime> ExpectedEventDateField;
        
        private System.Nullable<System.DateTime> NextThresholdDateField;
        
        private long PopulationMembershipIdField;
        
        private System.Nullable<System.DateTime> PreviousThresholdDateField;
        
        private bool ReoccurringField;
        
        private Mercury.Server.Application.DateQualifier ScheduleQualifierField;
        
        private int ScheduleValueField;
        
        private long ServiceIdField;
        
        private string ServiceNameField;
        
        private Mercury.Server.Application.PopulationServiceEventStatus StatusField;
        
        private string StatusTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpectedEventDate {
            get {
                return this.ExpectedEventDateField;
            }
            set {
                if ((this.ExpectedEventDateField.Equals(value) != true)) {
                    this.ExpectedEventDateField = value;
                    this.RaisePropertyChanged("ExpectedEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextThresholdDate {
            get {
                return this.NextThresholdDateField;
            }
            set {
                if ((this.NextThresholdDateField.Equals(value) != true)) {
                    this.NextThresholdDateField = value;
                    this.RaisePropertyChanged("NextThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipId {
            get {
                return this.PopulationMembershipIdField;
            }
            set {
                if ((this.PopulationMembershipIdField.Equals(value) != true)) {
                    this.PopulationMembershipIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PreviousThresholdDate {
            get {
                return this.PreviousThresholdDateField;
            }
            set {
                if ((this.PreviousThresholdDateField.Equals(value) != true)) {
                    this.PreviousThresholdDateField = value;
                    this.RaisePropertyChanged("PreviousThresholdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reoccurring {
            get {
                return this.ReoccurringField;
            }
            set {
                if ((this.ReoccurringField.Equals(value) != true)) {
                    this.ReoccurringField = value;
                    this.RaisePropertyChanged("Reoccurring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.DateQualifier ScheduleQualifier {
            get {
                return this.ScheduleQualifierField;
            }
            set {
                if ((this.ScheduleQualifierField.Equals(value) != true)) {
                    this.ScheduleQualifierField = value;
                    this.RaisePropertyChanged("ScheduleQualifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleValue {
            get {
                return this.ScheduleValueField;
            }
            set {
                if ((this.ScheduleValueField.Equals(value) != true)) {
                    this.ScheduleValueField = value;
                    this.RaisePropertyChanged("ScheduleValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationServiceEventStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusText {
            get {
                return this.StatusTextField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTextField, value) != true)) {
                    this.StatusTextField = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipEntryStatusDataView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Population.DataViews")]
    public partial class PopulationMembershipEntryStatusDataView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime EffectiveDateField;
        
        private long MemberIdField;
        
        private string MemberNameField;
        
        private long PopulationIdField;
        
        private long PopulationMembershipIdField;
        
        private Mercury.Server.Application.PopulationServiceEventStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberName {
            get {
                return this.MemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberNameField, value) != true)) {
                    this.MemberNameField = value;
                    this.RaisePropertyChanged("MemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationId {
            get {
                return this.PopulationIdField;
            }
            set {
                if ((this.PopulationIdField.Equals(value) != true)) {
                    this.PopulationIdField = value;
                    this.RaisePropertyChanged("PopulationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PopulationMembershipId {
            get {
                return this.PopulationMembershipIdField;
            }
            set {
                if ((this.PopulationMembershipIdField.Equals(value) != true)) {
                    this.PopulationMembershipIdField = value;
                    this.RaisePropertyChanged("PopulationMembershipId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.PopulationServiceEventStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponseBase", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponsePromptUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseRequireEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseRequireForm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseOpenImage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseContactEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowUserInteractionResponseSendCorrespondence))]
    public partial class WorkflowUserInteractionResponseBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CancelField;
        
        private bool HasExceptionField;
        
        private Mercury.Server.Application.UserInteractionType InteractionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancel {
            get {
                return this.CancelField;
            }
            set {
                if ((this.CancelField.Equals(value) != true)) {
                    this.CancelField = value;
                    this.RaisePropertyChanged("Cancel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasException {
            get {
                return this.HasExceptionField;
            }
            set {
                if ((this.HasExceptionField.Equals(value) != true)) {
                    this.HasExceptionField = value;
                    this.RaisePropertyChanged("HasException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.UserInteractionType InteractionType {
            get {
                return this.InteractionTypeField;
            }
            set {
                if ((this.InteractionTypeField.Equals(value) != true)) {
                    this.InteractionTypeField = value;
                    this.RaisePropertyChanged("InteractionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponsePromptUser", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    public partial class WorkflowUserInteractionResponsePromptUser : Mercury.Server.Application.WorkflowUserInteractionResponseBase {
        
        private Mercury.Server.Application.UserPromptButtonClicked ButtonClickedField;
        
        private string InputTextField;
        
        private string SelectedTextField;
        
        private string SelectedValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.UserPromptButtonClicked ButtonClicked {
            get {
                return this.ButtonClickedField;
            }
            set {
                if ((this.ButtonClickedField.Equals(value) != true)) {
                    this.ButtonClickedField = value;
                    this.RaisePropertyChanged("ButtonClicked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputText {
            get {
                return this.InputTextField;
            }
            set {
                if ((object.ReferenceEquals(this.InputTextField, value) != true)) {
                    this.InputTextField = value;
                    this.RaisePropertyChanged("InputText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedText {
            get {
                return this.SelectedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedTextField, value) != true)) {
                    this.SelectedTextField = value;
                    this.RaisePropertyChanged("SelectedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedValue {
            get {
                return this.SelectedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedValueField, value) != true)) {
                    this.SelectedValueField = value;
                    this.RaisePropertyChanged("SelectedValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponseRequireEntity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    public partial class WorkflowUserInteractionResponseRequireEntity : Mercury.Server.Application.WorkflowUserInteractionResponseBase {
        
        private long EntityIdField;
        
        private Mercury.Server.Application.EntityType EntityTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponseRequireForm", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    public partial class WorkflowUserInteractionResponseRequireForm : Mercury.Server.Application.WorkflowUserInteractionResponseBase {
        
        private Mercury.Server.Application.Form FormField;
        
        private bool SaveAsDraftField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Form Form {
            get {
                return this.FormField;
            }
            set {
                if ((object.ReferenceEquals(this.FormField, value) != true)) {
                    this.FormField = value;
                    this.RaisePropertyChanged("Form");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SaveAsDraft {
            get {
                return this.SaveAsDraftField;
            }
            set {
                if ((this.SaveAsDraftField.Equals(value) != true)) {
                    this.SaveAsDraftField = value;
                    this.RaisePropertyChanged("SaveAsDraft");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponseOpenImage", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    public partial class WorkflowUserInteractionResponseOpenImage : Mercury.Server.Application.WorkflowUserInteractionResponseBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponseContactEntity", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    public partial class WorkflowUserInteractionResponseContactEntity : Mercury.Server.Application.WorkflowUserInteractionResponseBase {
        
        private Mercury.Server.Application.EntityContact EntityContactField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityContact EntityContact {
            get {
                return this.EntityContactField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContactField, value) != true)) {
                    this.EntityContactField = value;
                    this.RaisePropertyChanged("EntityContact");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowUserInteractionResponseSendCorrespondence", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows.UserInteractions" +
        ".Response")]
    public partial class WorkflowUserInteractionResponseSendCorrespondence : Mercury.Server.Application.WorkflowUserInteractionResponseBase {
        
        private Mercury.Server.Application.EntityCorrespondence EntityCorrespondenceField;
        
        private bool SendField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityCorrespondence EntityCorrespondence {
            get {
                return this.EntityCorrespondenceField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityCorrespondenceField, value) != true)) {
                    this.EntityCorrespondenceField = value;
                    this.RaisePropertyChanged("EntityCorrespondence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Send {
            get {
                return this.SendField;
            }
            set {
                if ((this.SendField.Equals(value) != true)) {
                    this.SendField = value;
                    this.RaisePropertyChanged("Send");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PharmacyClaim", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Claims")]
    public partial class PharmacyClaim : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal BilledAmountField;
        
        private System.DateTime ClaimDateFromField;
        
        private System.DateTime ClaimDateThruField;
        
        private long ClaimIdField;
        
        private string ClaimTypeField;
        
        private decimal DaysSupplyField;
        
        private string DeaClassificationField;
        
        private string DosageField;
        
        private string DrugNameField;
        
        private string ExternalClaimIdField;
        
        private string ExternalMemberIdField;
        
        private long MemberIdField;
        
        private string NdcCodeField;
        
        private decimal PaidAmountField;
        
        private System.DateTime PaidDateField;
        
        private string PharmacyNameField;
        
        private System.DateTime PrescribedDateField;
        
        private int RefillsField;
        
        private string ServiceProviderNameField;
        
        private string ServiceProviderSpecialtyNameField;
        
        private string StatusField;
        
        private string TherapeuticClassificationField;
        
        private decimal UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BilledAmount {
            get {
                return this.BilledAmountField;
            }
            set {
                if ((this.BilledAmountField.Equals(value) != true)) {
                    this.BilledAmountField = value;
                    this.RaisePropertyChanged("BilledAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimDateFrom {
            get {
                return this.ClaimDateFromField;
            }
            set {
                if ((this.ClaimDateFromField.Equals(value) != true)) {
                    this.ClaimDateFromField = value;
                    this.RaisePropertyChanged("ClaimDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimDateThru {
            get {
                return this.ClaimDateThruField;
            }
            set {
                if ((this.ClaimDateThruField.Equals(value) != true)) {
                    this.ClaimDateThruField = value;
                    this.RaisePropertyChanged("ClaimDateThru");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClaimId {
            get {
                return this.ClaimIdField;
            }
            set {
                if ((this.ClaimIdField.Equals(value) != true)) {
                    this.ClaimIdField = value;
                    this.RaisePropertyChanged("ClaimId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DaysSupply {
            get {
                return this.DaysSupplyField;
            }
            set {
                if ((this.DaysSupplyField.Equals(value) != true)) {
                    this.DaysSupplyField = value;
                    this.RaisePropertyChanged("DaysSupply");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeaClassification {
            get {
                return this.DeaClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.DeaClassificationField, value) != true)) {
                    this.DeaClassificationField = value;
                    this.RaisePropertyChanged("DeaClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage {
            get {
                return this.DosageField;
            }
            set {
                if ((object.ReferenceEquals(this.DosageField, value) != true)) {
                    this.DosageField = value;
                    this.RaisePropertyChanged("Dosage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrugName {
            get {
                return this.DrugNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrugNameField, value) != true)) {
                    this.DrugNameField = value;
                    this.RaisePropertyChanged("DrugName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalClaimId {
            get {
                return this.ExternalClaimIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalClaimIdField, value) != true)) {
                    this.ExternalClaimIdField = value;
                    this.RaisePropertyChanged("ExternalClaimId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalMemberId {
            get {
                return this.ExternalMemberIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalMemberIdField, value) != true)) {
                    this.ExternalMemberIdField = value;
                    this.RaisePropertyChanged("ExternalMemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdcCode {
            get {
                return this.NdcCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NdcCodeField, value) != true)) {
                    this.NdcCodeField = value;
                    this.RaisePropertyChanged("NdcCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaidDate {
            get {
                return this.PaidDateField;
            }
            set {
                if ((this.PaidDateField.Equals(value) != true)) {
                    this.PaidDateField = value;
                    this.RaisePropertyChanged("PaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PharmacyName {
            get {
                return this.PharmacyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PharmacyNameField, value) != true)) {
                    this.PharmacyNameField = value;
                    this.RaisePropertyChanged("PharmacyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PrescribedDate {
            get {
                return this.PrescribedDateField;
            }
            set {
                if ((this.PrescribedDateField.Equals(value) != true)) {
                    this.PrescribedDateField = value;
                    this.RaisePropertyChanged("PrescribedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Refills {
            get {
                return this.RefillsField;
            }
            set {
                if ((this.RefillsField.Equals(value) != true)) {
                    this.RefillsField = value;
                    this.RaisePropertyChanged("Refills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceProviderName {
            get {
                return this.ServiceProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProviderNameField, value) != true)) {
                    this.ServiceProviderNameField = value;
                    this.RaisePropertyChanged("ServiceProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceProviderSpecialtyName {
            get {
                return this.ServiceProviderSpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProviderSpecialtyNameField, value) != true)) {
                    this.ServiceProviderSpecialtyNameField = value;
                    this.RaisePropertyChanged("ServiceProviderSpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TherapeuticClassification {
            get {
                return this.TherapeuticClassificationField;
            }
            set {
                if ((object.ReferenceEquals(this.TherapeuticClassificationField, value) != true)) {
                    this.TherapeuticClassificationField = value;
                    this.RaisePropertyChanged("TherapeuticClassification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityDocumentDataView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Entity.Views")]
    public partial class EntityDocumentDataView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.EntityContactType ContactTypeField;
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private long DocumentIdField;
        
        private string DocumentTypeField;
        
        private long EntityDocumentIdField;
        
        private long EntityFormIdField;
        
        private long EntityIdField;
        
        private bool HasImageField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private string NameField;
        
        private System.Nullable<System.DateTime> ReadyToSendDateField;
        
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        private System.Nullable<System.DateTime> ReturnedDateField;
        
        private System.Nullable<System.DateTime> SentDateField;
        
        private double VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.EntityContactType ContactType {
            get {
                return this.ContactTypeField;
            }
            set {
                if ((this.ContactTypeField.Equals(value) != true)) {
                    this.ContactTypeField = value;
                    this.RaisePropertyChanged("ContactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityDocumentId {
            get {
                return this.EntityDocumentIdField;
            }
            set {
                if ((this.EntityDocumentIdField.Equals(value) != true)) {
                    this.EntityDocumentIdField = value;
                    this.RaisePropertyChanged("EntityDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityFormId {
            get {
                return this.EntityFormIdField;
            }
            set {
                if ((this.EntityFormIdField.Equals(value) != true)) {
                    this.EntityFormIdField = value;
                    this.RaisePropertyChanged("EntityFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasImage {
            get {
                return this.HasImageField;
            }
            set {
                if ((this.HasImageField.Equals(value) != true)) {
                    this.HasImageField = value;
                    this.RaisePropertyChanged("HasImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReadyToSendDate {
            get {
                return this.ReadyToSendDateField;
            }
            set {
                if ((this.ReadyToSendDateField.Equals(value) != true)) {
                    this.ReadyToSendDateField = value;
                    this.RaisePropertyChanged("ReadyToSendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReturnedDate {
            get {
                return this.ReturnedDateField;
            }
            set {
                if ((this.ReturnedDateField.Equals(value) != true)) {
                    this.ReturnedDateField = value;
                    this.RaisePropertyChanged("ReturnedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityStateZipCodeView", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Reference.Views")]
    public partial class CityStateZipCodeView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private string CountyField;
        
        private string PostalCodeField;
        
        private string StateField;
        
        private string ZipCodeField;
        
        private string ZipPlus4Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipPlus4 {
            get {
                return this.ZipPlus4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ZipPlus4Field, value) != true)) {
                    this.ZipPlus4Field = value;
                    this.RaisePropertyChanged("ZipPlus4");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityGroupPermission", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Security")]
    public partial class SecurityGroupPermission : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private bool IsDeniedField;
        
        private bool IsGrantedField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private long PermissionIdField;
        
        private long SecurityAuthorityIdField;
        
        private string SecurityGroupIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDenied {
            get {
                return this.IsDeniedField;
            }
            set {
                if ((this.IsDeniedField.Equals(value) != true)) {
                    this.IsDeniedField = value;
                    this.RaisePropertyChanged("IsDenied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGranted {
            get {
                return this.IsGrantedField;
            }
            set {
                if ((this.IsGrantedField.Equals(value) != true)) {
                    this.IsGrantedField = value;
                    this.RaisePropertyChanged("IsGranted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PermissionId {
            get {
                return this.PermissionIdField;
            }
            set {
                if ((this.PermissionIdField.Equals(value) != true)) {
                    this.PermissionIdField = value;
                    this.RaisePropertyChanged("PermissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupId {
            get {
                return this.SecurityGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupIdField, value) != true)) {
                    this.SecurityGroupIdField = value;
                    this.RaisePropertyChanged("SecurityGroupId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentRole", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Environment")]
    public partial class EnvironmentRole : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private string DescriptionField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> MembershipField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRolePermission> PermissionsField;
        
        private long RoleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> Membership {
            get {
                return this.MembershipField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipField, value) != true)) {
                    this.MembershipField = value;
                    this.RaisePropertyChanged("Membership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRolePermission> Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentRoleMembership", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Environment")]
    public partial class EnvironmentRoleMembership : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private long RoleIdField;
        
        private long SecurityAuthorityIdField;
        
        private string SecurityAuthorityNameField;
        
        private string SecurityGroupIdField;
        
        private string SecurityGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAuthorityName {
            get {
                return this.SecurityAuthorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAuthorityNameField, value) != true)) {
                    this.SecurityAuthorityNameField = value;
                    this.RaisePropertyChanged("SecurityAuthorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupId {
            get {
                return this.SecurityGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupIdField, value) != true)) {
                    this.SecurityGroupIdField = value;
                    this.RaisePropertyChanged("SecurityGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupName {
            get {
                return this.SecurityGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupNameField, value) != true)) {
                    this.SecurityGroupNameField = value;
                    this.RaisePropertyChanged("SecurityGroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentRolePermission", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Environment")]
    public partial class EnvironmentRolePermission : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private bool IsDeniedField;
        
        private bool IsGrantedField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private long PermissionIdField;
        
        private long RoleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDenied {
            get {
                return this.IsDeniedField;
            }
            set {
                if ((this.IsDeniedField.Equals(value) != true)) {
                    this.IsDeniedField = value;
                    this.RaisePropertyChanged("IsDenied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGranted {
            get {
                return this.IsGrantedField;
            }
            set {
                if ((this.IsGrantedField.Equals(value) != true)) {
                    this.IsGrantedField = value;
                    this.RaisePropertyChanged("IsGranted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PermissionId {
            get {
                return this.PermissionIdField;
            }
            set {
                if ((this.PermissionIdField.Equals(value) != true)) {
                    this.PermissionIdField = value;
                    this.RaisePropertyChanged("PermissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceHostBindingConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.WebService")]
    public partial class WebServiceHostBindingConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BindingNameField;
        
        private Mercury.Server.Application.WebServiceBindingType BindingTypeField;
        
        private int BufferPoolSizeMaximumField;
        
        private int BufferSizeMaximumField;
        
        private Mercury.Server.Application.MessageCredentialType MessageCredentialTypeField;
        
        private string ProtocolField;
        
        private int ReaderQuotasArrayLengthMaximumField;
        
        private int ReaderQuotasBytesPerReadMaximumField;
        
        private int ReaderQuotasDepthMaximumField;
        
        private int ReaderQuotasNameTableCharCountMaximumField;
        
        private int ReaderQuotasStringContentLengthMaximumField;
        
        private int ReceivedMessageSizeMaximumField;
        
        private System.ServiceModel.BasicHttpSecurityMode SecurityModeField;
        
        private System.TimeSpan TimeoutCloseField;
        
        private System.TimeSpan TimeoutOpenField;
        
        private System.TimeSpan TimeoutReceiveField;
        
        private System.TimeSpan TimeoutSendField;
        
        private Mercury.Server.Application.HttpClientCredentialType TransportCredentialTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BindingName {
            get {
                return this.BindingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BindingNameField, value) != true)) {
                    this.BindingNameField = value;
                    this.RaisePropertyChanged("BindingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WebServiceBindingType BindingType {
            get {
                return this.BindingTypeField;
            }
            set {
                if ((this.BindingTypeField.Equals(value) != true)) {
                    this.BindingTypeField = value;
                    this.RaisePropertyChanged("BindingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BufferPoolSizeMaximum {
            get {
                return this.BufferPoolSizeMaximumField;
            }
            set {
                if ((this.BufferPoolSizeMaximumField.Equals(value) != true)) {
                    this.BufferPoolSizeMaximumField = value;
                    this.RaisePropertyChanged("BufferPoolSizeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BufferSizeMaximum {
            get {
                return this.BufferSizeMaximumField;
            }
            set {
                if ((this.BufferSizeMaximumField.Equals(value) != true)) {
                    this.BufferSizeMaximumField = value;
                    this.RaisePropertyChanged("BufferSizeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MessageCredentialType MessageCredentialType {
            get {
                return this.MessageCredentialTypeField;
            }
            set {
                if ((this.MessageCredentialTypeField.Equals(value) != true)) {
                    this.MessageCredentialTypeField = value;
                    this.RaisePropertyChanged("MessageCredentialType");
                }
            }
        }
        
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderQuotasArrayLengthMaximum {
            get {
                return this.ReaderQuotasArrayLengthMaximumField;
            }
            set {
                if ((this.ReaderQuotasArrayLengthMaximumField.Equals(value) != true)) {
                    this.ReaderQuotasArrayLengthMaximumField = value;
                    this.RaisePropertyChanged("ReaderQuotasArrayLengthMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderQuotasBytesPerReadMaximum {
            get {
                return this.ReaderQuotasBytesPerReadMaximumField;
            }
            set {
                if ((this.ReaderQuotasBytesPerReadMaximumField.Equals(value) != true)) {
                    this.ReaderQuotasBytesPerReadMaximumField = value;
                    this.RaisePropertyChanged("ReaderQuotasBytesPerReadMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderQuotasDepthMaximum {
            get {
                return this.ReaderQuotasDepthMaximumField;
            }
            set {
                if ((this.ReaderQuotasDepthMaximumField.Equals(value) != true)) {
                    this.ReaderQuotasDepthMaximumField = value;
                    this.RaisePropertyChanged("ReaderQuotasDepthMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderQuotasNameTableCharCountMaximum {
            get {
                return this.ReaderQuotasNameTableCharCountMaximumField;
            }
            set {
                if ((this.ReaderQuotasNameTableCharCountMaximumField.Equals(value) != true)) {
                    this.ReaderQuotasNameTableCharCountMaximumField = value;
                    this.RaisePropertyChanged("ReaderQuotasNameTableCharCountMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderQuotasStringContentLengthMaximum {
            get {
                return this.ReaderQuotasStringContentLengthMaximumField;
            }
            set {
                if ((this.ReaderQuotasStringContentLengthMaximumField.Equals(value) != true)) {
                    this.ReaderQuotasStringContentLengthMaximumField = value;
                    this.RaisePropertyChanged("ReaderQuotasStringContentLengthMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceivedMessageSizeMaximum {
            get {
                return this.ReceivedMessageSizeMaximumField;
            }
            set {
                if ((this.ReceivedMessageSizeMaximumField.Equals(value) != true)) {
                    this.ReceivedMessageSizeMaximumField = value;
                    this.RaisePropertyChanged("ReceivedMessageSizeMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.ServiceModel.BasicHttpSecurityMode SecurityMode {
            get {
                return this.SecurityModeField;
            }
            set {
                if ((this.SecurityModeField.Equals(value) != true)) {
                    this.SecurityModeField = value;
                    this.RaisePropertyChanged("SecurityMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeoutClose {
            get {
                return this.TimeoutCloseField;
            }
            set {
                if ((this.TimeoutCloseField.Equals(value) != true)) {
                    this.TimeoutCloseField = value;
                    this.RaisePropertyChanged("TimeoutClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeoutOpen {
            get {
                return this.TimeoutOpenField;
            }
            set {
                if ((this.TimeoutOpenField.Equals(value) != true)) {
                    this.TimeoutOpenField = value;
                    this.RaisePropertyChanged("TimeoutOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeoutReceive {
            get {
                return this.TimeoutReceiveField;
            }
            set {
                if ((this.TimeoutReceiveField.Equals(value) != true)) {
                    this.TimeoutReceiveField = value;
                    this.RaisePropertyChanged("TimeoutReceive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeoutSend {
            get {
                return this.TimeoutSendField;
            }
            set {
                if ((this.TimeoutSendField.Equals(value) != true)) {
                    this.TimeoutSendField = value;
                    this.RaisePropertyChanged("TimeoutSend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.HttpClientCredentialType TransportCredentialType {
            get {
                return this.TransportCredentialTypeField;
            }
            set {
                if ((this.TransportCredentialTypeField.Equals(value) != true)) {
                    this.TransportCredentialTypeField = value;
                    this.RaisePropertyChanged("TransportCredentialType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceHostClientCredentials", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.WebService")]
    public partial class WebServiceHostClientCredentials : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DomainField;
        
        private string PasswordField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageCredentialType", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
    public enum MessageCredentialType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windows = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Certificate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IssuedToken = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HttpClientCredentialType", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
    public enum HttpClientCredentialType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Digest = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ntlm = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windows = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Certificate = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceBindingType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.WebService.Enumerat" +
        "ions")]
    public enum WebServiceBindingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasicHttpBinding = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WsHttpBinding = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetTcpBinding = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WsHttpAnonymousBinding = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberAuthorizedServiceDetail", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.AuthorizedServices")]
    public partial class MemberAuthorizedServiceDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthorizationCategoryField;
        
        private long AuthorizationIdField;
        
        private int AuthorizationLineField;
        
        private string AuthorizationNumberField;
        
        private string AuthorizationServiceTypeField;
        
        private string AuthorizationStatusField;
        
        private string AuthorizationSubcategoryField;
        
        private long AuthorizedServiceDefinitionIdField;
        
        private string DescriptionField;
        
        private string DiagnosisCodeField;
        
        private System.DateTime EffectiveDateField;
        
        private System.DateTime EventDateField;
        
        private string ExternalAuthorizationIdField;
        
        private long MemberAuthorizedServiceIdField;
        
        private long MemberIdField;
        
        private string ModifierCodeField;
        
        private string NdcCodeField;
        
        private string PrincipalDiagnosisCodeField;
        
        private string ProcedureCodeField;
        
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        private System.Nullable<System.DateTime> ReferralDateField;
        
        private long ReferringProviderIdField;
        
        private string RevenueCodeField;
        
        private System.Nullable<System.DateTime> ServiceDateField;
        
        private long ServiceProviderIdField;
        
        private string SpecialtyNameField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationCategory {
            get {
                return this.AuthorizationCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationCategoryField, value) != true)) {
                    this.AuthorizationCategoryField = value;
                    this.RaisePropertyChanged("AuthorizationCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizationId {
            get {
                return this.AuthorizationIdField;
            }
            set {
                if ((this.AuthorizationIdField.Equals(value) != true)) {
                    this.AuthorizationIdField = value;
                    this.RaisePropertyChanged("AuthorizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorizationLine {
            get {
                return this.AuthorizationLineField;
            }
            set {
                if ((this.AuthorizationLineField.Equals(value) != true)) {
                    this.AuthorizationLineField = value;
                    this.RaisePropertyChanged("AuthorizationLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationNumber {
            get {
                return this.AuthorizationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationNumberField, value) != true)) {
                    this.AuthorizationNumberField = value;
                    this.RaisePropertyChanged("AuthorizationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationServiceType {
            get {
                return this.AuthorizationServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationServiceTypeField, value) != true)) {
                    this.AuthorizationServiceTypeField = value;
                    this.RaisePropertyChanged("AuthorizationServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationStatus {
            get {
                return this.AuthorizationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationStatusField, value) != true)) {
                    this.AuthorizationStatusField = value;
                    this.RaisePropertyChanged("AuthorizationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationSubcategory {
            get {
                return this.AuthorizationSubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationSubcategoryField, value) != true)) {
                    this.AuthorizationSubcategoryField = value;
                    this.RaisePropertyChanged("AuthorizationSubcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthorizedServiceDefinitionId {
            get {
                return this.AuthorizedServiceDefinitionIdField;
            }
            set {
                if ((this.AuthorizedServiceDefinitionIdField.Equals(value) != true)) {
                    this.AuthorizedServiceDefinitionIdField = value;
                    this.RaisePropertyChanged("AuthorizedServiceDefinitionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiagnosisCode {
            get {
                return this.DiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisCodeField, value) != true)) {
                    this.DiagnosisCodeField = value;
                    this.RaisePropertyChanged("DiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalAuthorizationId {
            get {
                return this.ExternalAuthorizationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAuthorizationIdField, value) != true)) {
                    this.ExternalAuthorizationIdField = value;
                    this.RaisePropertyChanged("ExternalAuthorizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberAuthorizedServiceId {
            get {
                return this.MemberAuthorizedServiceIdField;
            }
            set {
                if ((this.MemberAuthorizedServiceIdField.Equals(value) != true)) {
                    this.MemberAuthorizedServiceIdField = value;
                    this.RaisePropertyChanged("MemberAuthorizedServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifierCode {
            get {
                return this.ModifierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifierCodeField, value) != true)) {
                    this.ModifierCodeField = value;
                    this.RaisePropertyChanged("ModifierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NdcCode {
            get {
                return this.NdcCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NdcCodeField, value) != true)) {
                    this.NdcCodeField = value;
                    this.RaisePropertyChanged("NdcCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrincipalDiagnosisCode {
            get {
                return this.PrincipalDiagnosisCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrincipalDiagnosisCodeField, value) != true)) {
                    this.PrincipalDiagnosisCodeField = value;
                    this.RaisePropertyChanged("PrincipalDiagnosisCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCode {
            get {
                return this.ProcedureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeField, value) != true)) {
                    this.ProcedureCodeField = value;
                    this.RaisePropertyChanged("ProcedureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReferralDate {
            get {
                return this.ReferralDateField;
            }
            set {
                if ((this.ReferralDateField.Equals(value) != true)) {
                    this.ReferralDateField = value;
                    this.RaisePropertyChanged("ReferralDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReferringProviderId {
            get {
                return this.ReferringProviderIdField;
            }
            set {
                if ((this.ReferringProviderIdField.Equals(value) != true)) {
                    this.ReferringProviderIdField = value;
                    this.RaisePropertyChanged("ReferringProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevenueCode {
            get {
                return this.RevenueCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueCodeField, value) != true)) {
                    this.RevenueCodeField = value;
                    this.RaisePropertyChanged("RevenueCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceDate {
            get {
                return this.ServiceDateField;
            }
            set {
                if ((this.ServiceDateField.Equals(value) != true)) {
                    this.ServiceDateField = value;
                    this.RaisePropertyChanged("ServiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ServiceProviderId {
            get {
                return this.ServiceProviderIdField;
            }
            set {
                if ((this.ServiceProviderIdField.Equals(value) != true)) {
                    this.ServiceProviderIdField = value;
                    this.RaisePropertyChanged("ServiceProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyName {
            get {
                return this.SpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyNameField, value) != true)) {
                    this.SpecialtyNameField = value;
                    this.RaisePropertyChanged("SpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTeamType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Work.Enumerations")]
    public enum WorkTeamType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkTeam = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CareTeam = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataFilterOperator", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data.Enumerations")]
    public enum DataFilterOperator : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLessThan = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLessThanOrEqualTo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsEqualTo = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotEqualTo = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsGreaterThanOrEqualTo = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsGreaterThan = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartsWith = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndsWith = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contains = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsContainedIn = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSortDirection", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Data.Enumerations")]
    public enum DataSortDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormCompileMessage", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms")]
    public partial class FormCompileMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ColumnField;
        
        private string ControlIdField;
        
        private string ControlNameField;
        
        private string ControlTypeField;
        
        private string DescriptionField;
        
        private int LineField;
        
        private Mercury.Server.Application.FormCompileMessageType MessageTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Column {
            get {
                return this.ColumnField;
            }
            set {
                if ((this.ColumnField.Equals(value) != true)) {
                    this.ColumnField = value;
                    this.RaisePropertyChanged("Column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlId {
            get {
                return this.ControlIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlIdField, value) != true)) {
                    this.ControlIdField = value;
                    this.RaisePropertyChanged("ControlId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlName {
            get {
                return this.ControlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlNameField, value) != true)) {
                    this.ControlNameField = value;
                    this.RaisePropertyChanged("ControlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlType {
            get {
                return this.ControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlTypeField, value) != true)) {
                    this.ControlTypeField = value;
                    this.RaisePropertyChanged("ControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Line {
            get {
                return this.LineField;
            }
            set {
                if ((this.LineField.Equals(value) != true)) {
                    this.LineField = value;
                    this.RaisePropertyChanged("Line");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormCompileMessageType MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormCompileMessageType", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Forms.Enumerations")]
    public enum FormCompileMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server")]
    public partial class Session : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> EnterprisePermissionSetField;
        
        private long EnvironmentIdField;
        
        private string EnvironmentNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> EnvironmentPermissionSetField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> GroupMembershipField;
        
        private System.DateTime LastActivityDateField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> RoleMembershipField;
        
        private long SecurityAuthorityIdField;
        
        private string SecurityAuthorityNameField;
        
        private Mercury.Server.Application.SecurityAuthorityType SecurityAuthorityTypeField;
        
        private string TokenField;
        
        private string UserAccountIdField;
        
        private string UserAccountNameField;
        
        private string UserDisplayNameField;
        
        private System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkQueueTeamPermission> WorkQueuePermissionsField;
        
        private System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkTeamMembership> WorkTeamMembershipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> EnterprisePermissionSet {
            get {
                return this.EnterprisePermissionSetField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterprisePermissionSetField, value) != true)) {
                    this.EnterprisePermissionSetField = value;
                    this.RaisePropertyChanged("EnterprisePermissionSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EnvironmentId {
            get {
                return this.EnvironmentIdField;
            }
            set {
                if ((this.EnvironmentIdField.Equals(value) != true)) {
                    this.EnvironmentIdField = value;
                    this.RaisePropertyChanged("EnvironmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnvironmentName {
            get {
                return this.EnvironmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvironmentNameField, value) != true)) {
                    this.EnvironmentNameField = value;
                    this.RaisePropertyChanged("EnvironmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> EnvironmentPermissionSet {
            get {
                return this.EnvironmentPermissionSetField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvironmentPermissionSetField, value) != true)) {
                    this.EnvironmentPermissionSetField = value;
                    this.RaisePropertyChanged("EnvironmentPermissionSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> GroupMembership {
            get {
                return this.GroupMembershipField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupMembershipField, value) != true)) {
                    this.GroupMembershipField = value;
                    this.RaisePropertyChanged("GroupMembership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActivityDate {
            get {
                return this.LastActivityDateField;
            }
            set {
                if ((this.LastActivityDateField.Equals(value) != true)) {
                    this.LastActivityDateField = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> RoleMembership {
            get {
                return this.RoleMembershipField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleMembershipField, value) != true)) {
                    this.RoleMembershipField = value;
                    this.RaisePropertyChanged("RoleMembership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAuthorityName {
            get {
                return this.SecurityAuthorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAuthorityNameField, value) != true)) {
                    this.SecurityAuthorityNameField = value;
                    this.RaisePropertyChanged("SecurityAuthorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.SecurityAuthorityType SecurityAuthorityType {
            get {
                return this.SecurityAuthorityTypeField;
            }
            set {
                if ((this.SecurityAuthorityTypeField.Equals(value) != true)) {
                    this.SecurityAuthorityTypeField = value;
                    this.RaisePropertyChanged("SecurityAuthorityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountId {
            get {
                return this.UserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountIdField, value) != true)) {
                    this.UserAccountIdField = value;
                    this.RaisePropertyChanged("UserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountName {
            get {
                return this.UserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountNameField, value) != true)) {
                    this.UserAccountNameField = value;
                    this.RaisePropertyChanged("UserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDisplayName {
            get {
                return this.UserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDisplayNameField, value) != true)) {
                    this.UserDisplayNameField = value;
                    this.RaisePropertyChanged("UserDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkQueueTeamPermission> WorkQueuePermissions {
            get {
                return this.WorkQueuePermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkQueuePermissionsField, value) != true)) {
                    this.WorkQueuePermissionsField = value;
                    this.RaisePropertyChanged("WorkQueuePermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, Mercury.Server.Application.WorkTeamMembership> WorkTeamMembership {
            get {
                return this.WorkTeamMembershipField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTeamMembershipField, value) != true)) {
                    this.WorkTeamMembershipField = value;
                    this.RaisePropertyChanged("WorkTeamMembership");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportExportResult", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.Objects" +
        "")]
    public partial class ImportExportResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.ServiceException ExceptionField;
        
        private bool HasExceptionField;
        
        private long IdField;
        
        private System.Guid InstanceIdField;
        
        private string ObjectNameField;
        
        private string ObjectTypeField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceException Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasException {
            get {
                return this.HasExceptionField;
            }
            set {
                if ((this.HasExceptionField.Equals(value) != true)) {
                    this.HasExceptionField = value;
                    this.RaisePropertyChanged("HasException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid InstanceId {
            get {
                return this.InstanceIdField;
            }
            set {
                if ((this.InstanceIdField.Equals(value) != true)) {
                    this.InstanceIdField = value;
                    this.RaisePropertyChanged("InstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectName {
            get {
                return this.ObjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectNameField, value) != true)) {
                    this.ObjectNameField = value;
                    this.RaisePropertyChanged("ObjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityAuthorityDirectoryEntry", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.Interfaces.Security" +
        "")]
    public partial class SecurityAuthorityDirectoryEntry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayNameField;
        
        private string DistinguishedNameField;
        
        private string NameField;
        
        private string ObjectSidField;
        
        private string ObjectTypeField;
        
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistinguishedName {
            get {
                return this.DistinguishedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistinguishedNameField, value) != true)) {
                    this.DistinguishedNameField = value;
                    this.RaisePropertyChanged("DistinguishedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectSid {
            get {
                return this.ObjectSidField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectSidField, value) != true)) {
                    this.ObjectSidField = value;
                    this.RaisePropertyChanged("ObjectSid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityGroup", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.Interfaces.Security" +
        "")]
    public partial class SecurityGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private long SecurityAuthorityIdField;
        
        private string SecurityAuthorityNameField;
        
        private string SecurityGroupIdField;
        
        private string SecurityGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityAuthorityName {
            get {
                return this.SecurityAuthorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAuthorityNameField, value) != true)) {
                    this.SecurityAuthorityNameField = value;
                    this.RaisePropertyChanged("SecurityAuthorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupId {
            get {
                return this.SecurityGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupIdField, value) != true)) {
                    this.SecurityGroupIdField = value;
                    this.RaisePropertyChanged("SecurityGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroupName {
            get {
                return this.SecurityGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupNameField, value) != true)) {
                    this.SecurityGroupNameField = value;
                    this.RaisePropertyChanged("SecurityGroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditAuthentication", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Audit")]
    public partial class AuditAuthentication : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AuthenticationTimeField;
        
        private long EnvironmentIdField;
        
        private System.DateTime LastActivityTimeField;
        
        private System.Nullable<System.DateTime> LogoffDateField;
        
        private System.DateTime LogonDateField;
        
        private long SecurityAuthorityIdField;
        
        private System.Guid SessionTokenField;
        
        private string UserAccountIdField;
        
        private string UserAccountNameField;
        
        private string UserDisplayNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthenticationTime {
            get {
                return this.AuthenticationTimeField;
            }
            set {
                if ((this.AuthenticationTimeField.Equals(value) != true)) {
                    this.AuthenticationTimeField = value;
                    this.RaisePropertyChanged("AuthenticationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EnvironmentId {
            get {
                return this.EnvironmentIdField;
            }
            set {
                if ((this.EnvironmentIdField.Equals(value) != true)) {
                    this.EnvironmentIdField = value;
                    this.RaisePropertyChanged("EnvironmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActivityTime {
            get {
                return this.LastActivityTimeField;
            }
            set {
                if ((this.LastActivityTimeField.Equals(value) != true)) {
                    this.LastActivityTimeField = value;
                    this.RaisePropertyChanged("LastActivityTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogoffDate {
            get {
                return this.LogoffDateField;
            }
            set {
                if ((this.LogoffDateField.Equals(value) != true)) {
                    this.LogoffDateField = value;
                    this.RaisePropertyChanged("LogoffDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogonDate {
            get {
                return this.LogonDateField;
            }
            set {
                if ((this.LogonDateField.Equals(value) != true)) {
                    this.LogonDateField = value;
                    this.RaisePropertyChanged("LogonDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SecurityAuthorityId {
            get {
                return this.SecurityAuthorityIdField;
            }
            set {
                if ((this.SecurityAuthorityIdField.Equals(value) != true)) {
                    this.SecurityAuthorityIdField = value;
                    this.RaisePropertyChanged("SecurityAuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionToken {
            get {
                return this.SessionTokenField;
            }
            set {
                if ((this.SessionTokenField.Equals(value) != true)) {
                    this.SessionTokenField = value;
                    this.RaisePropertyChanged("SessionToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountId {
            get {
                return this.UserAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountIdField, value) != true)) {
                    this.UserAccountIdField = value;
                    this.RaisePropertyChanged("UserAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountName {
            get {
                return this.UserAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountNameField, value) != true)) {
                    this.UserAccountNameField = value;
                    this.RaisePropertyChanged("UserAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDisplayName {
            get {
                return this.UserDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDisplayNameField, value) != true)) {
                    this.UserDisplayNameField = value;
                    this.RaisePropertyChanged("UserDisplayName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaxServerCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class FaxServerCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FaxServer> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FaxServer> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PrinterCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Printer> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Printer> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItemSenderCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueItemSenderCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemSender> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemSender> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItemAssignmentHistoryCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueItemAssignmentHistoryCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemAssignmentHistory> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItemAssignmentHistory> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItemWorkflowStepCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueItemWorkflowStepCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowStep> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowStep> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueItemCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueItemCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItem> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueItem> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkTeamCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkTeamCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeam> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkTeam> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueViewCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueViewCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueSummaryCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueSummaryCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueSummary> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueueSummary> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportingServerCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ReportingServerCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ReportingServer> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ReportingServer> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkflowCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Workflow> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Workflow> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkOutcomeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkOutcomeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkOutcome> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkOutcome> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class WorkQueueCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueue> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkQueue> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipServiceEventCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationMembershipServiceEventCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEvent> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEvent> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationMembershipCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembership> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembership> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipSummaryCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationMembershipSummaryCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipSummaryDataView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipSummaryDataView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipServiceEventDataViewCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationMembershipServiceEventDataViewCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEventDataView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipServiceEventDataView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipTriggerEventDataViewCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationMembershipTriggerEventDataViewCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipTriggerEventDataView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipTriggerEventDataView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationMembershipEntryStatusDataViewCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationMembershipEntryStatusDataViewCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipEntryStatusDataView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationMembershipEntryStatusDataView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderEnrollmentCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ProviderEnrollmentCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderEnrollment> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderEnrollment> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderAffiliationCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ProviderAffiliationCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderAffiliation> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderAffiliation> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderContractCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ProviderContractCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderContract> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderContract> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProviderServiceLocationCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ProviderServiceLocationCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderServiceLocation> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderServiceLocation> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoutingRuleCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class RoutingRuleCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.RoutingRule> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.RoutingRule> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberEnrollmentCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollment> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollment> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentCoverageCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberEnrollmentCoverageCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentCoverage> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentCoverage> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentPcpCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberEnrollmentPcpCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentPcp> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentPcp> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberEnrollmentTplCobCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberEnrollmentTplCobCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentTplCob> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentTplCob> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberRelationshipCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberRelationshipCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberRelationship> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberRelationship> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetricCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MetricCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Metric> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Metric> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberMetricCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberMetricCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberMetric> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberMetric> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationTypeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationTypeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationType> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PopulationType> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationHeadersCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PopulationHeadersCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultPopulationHeader> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultPopulationHeader> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgramCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ProgramCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Program> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Program> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultMedicalServiceHeaderCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class SearchResultMedicalServiceHeaderCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMedicalServiceHeader> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMedicalServiceHeader> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalServiceDetailSingletonCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MedicalServiceDetailSingletonCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSingleton> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSingleton> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalServiceDetailSetCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MedicalServiceDetailSetCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSet> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSet> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberServiceCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberServiceCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberService> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberService> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberServiceDetailSingletonCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberServiceDetailSingletonCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSingleton> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSingleton> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberServiceDetailSetCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberServiceDetailSetCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSet> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberServiceDetailSet> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CareOutcomeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CareOutcomeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareOutcome> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareOutcome> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BenefitPlanCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class BenefitPlanCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.BenefitPlan> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.BenefitPlan> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ContractCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Contract> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Contract> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageLevelCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CoverageLevelCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageLevel> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageLevel> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoverageTypeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CoverageTypeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageType> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CoverageType> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceTypeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class InsuranceTypeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.InsuranceType> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.InsuranceType> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsurerCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class InsurerCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Insurer> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Insurer> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultFormHeaderCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class SearchResultFormHeaderCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultFormHeader> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultFormHeader> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormCompileMessageCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class FormCompileMessageCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormCompileMessage> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormCompileMessage> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CareLevelCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CareLevelCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevel> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CareLevel> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarePlanCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CarePlanCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlan> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CarePlan> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProblemStatementCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ProblemStatementCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProblemStatement> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProblemStatement> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityContactCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EntityContactCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContact> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContact> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityContactInformationCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EntityContactInformationCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityDocumentCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EntityDocumentCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityDocumentDataView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityDocumentDataView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityNoteContentCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EntityNoteContentCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNoteContent> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNoteContent> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityNoteCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EntityNoteCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNote> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityNote> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ActionCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Action> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Action> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationTypeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class AuthorizationTypeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationType> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationType> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class AuthorizationCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Authorization> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Authorization> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationLineCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class AuthorizationLineCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationLine> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizationLine> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedServiceCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class AuthorizedServiceCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedService> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuthorizedService> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberAuthorizedServiceDetailCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberAuthorizedServiceDetailCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedServiceDetail> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedServiceDetail> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberAuthorizedServiceCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class MemberAuthorizedServiceCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedService> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberAuthorizedService> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ClaimCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Claim> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Claim> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimLineCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ClaimLineCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ClaimLine> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ClaimLine> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PharmacyClaimCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PharmacyClaimCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PharmacyClaim> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.PharmacyClaim> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityAddressCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EntityAddressCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityAddress> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityAddress> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorrespondenceCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CorrespondenceCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Correspondence> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Correspondence> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteTypeCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class NoteTypeCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.NoteType> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.NoteType> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityStateZipCodeViewCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class CityStateZipCodeViewCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CityStateZipCodeView> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.CityStateZipCodeView> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EnvironmentCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Environment> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Environment> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class PermissionCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Permission> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Permission> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class RoleCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRole> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRole> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolePermissionCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class RolePermissionCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRolePermission> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRolePermission> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleMembershipCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class RoleMembershipCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactRegardingCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class ContactRegardingCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ContactRegarding> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ContactRegarding> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditAuthenticationCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class AuditAuthenticationCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuditAuthentication> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.AuditAuthentication> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityGroupPermissionCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class SecurityGroupPermissionCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroupPermission> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroupPermission> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityAuthorityCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class SecurityAuthorityCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthority> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthority> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectoryEntryCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class DirectoryEntryCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthorityDirectoryEntry> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityAuthorityDirectoryEntry> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityGroupCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class SecurityGroupCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroup> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SecurityGroup> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentAccessCollectionResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.TypedCo" +
        "llections")]
    public partial class EnvironmentAccessCollectionResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentAccess> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentAccess> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectSaveResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class ObjectSaveResponse : Mercury.Server.Application.ResponseBase {
        
        private long IdField;
        
        private System.Guid InstanceIdField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid InstanceId {
            get {
                return this.InstanceIdField;
            }
            set {
                if ((this.InstanceIdField.Equals(value) != true)) {
                    this.InstanceIdField = value;
                    this.RaisePropertyChanged("InstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PrinterCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemSenderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueItemCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkTeamCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueSummaryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ReportingServerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkOutcomeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkQueueCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderEnrollmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderAffiliationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderContractCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProviderServiceLocationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoutingRuleCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberRelationshipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MetricCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberMetricCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PopulationHeadersCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProgramCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberServiceDetailSetCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareOutcomeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BenefitPlanCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContractCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageLevelCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CoverageTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsuranceTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.InsurerCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultFormHeaderCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormCompileMessageCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CareLevelCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CarePlanCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ProblemStatementCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityContactInformationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityDocumentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteContentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityNoteCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ActionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizationLineCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuthorizedServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ClaimLineCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PharmacyClaimCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EntityAddressCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CorrespondenceCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.NoteTypeCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.CityStateZipCodeViewCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.PermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoleCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RolePermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.RoleMembershipCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ContactRegardingCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.AuditAuthenticationCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupPermissionCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityAuthorityCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DirectoryEntryCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SecurityGroupCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.EnvironmentAccessCollectionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ObjectSaveResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryStringResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.BooleanResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.DictionaryKeyCountResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.WorkflowResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.GetWorkResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberDemographicsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.MemberCaseCreateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormSubmitResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlRaiseEventResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FormControlValueChangedResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.StringListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.StringResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.ImportExportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsGlobalResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsMemberResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.SearchResultsProviderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mercury.Server.Application.FaxServerCollectionResponse))]
    public partial class ResponseBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.ServiceException ExceptionField;
        
        private bool HasExceptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceException Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasException {
            get {
                return this.HasExceptionField;
            }
            set {
                if ((this.HasExceptionField.Equals(value) != true)) {
                    this.HasExceptionField = value;
                    this.RaisePropertyChanged("HasException");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class ServiceException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.ServiceException InnerExceptionField;
        
        private string MessageField;
        
        private string SourceField;
        
        private string StackTraceField;
        
        private string TargetSiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceException InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetSite {
            get {
                return this.TargetSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetSiteField, value) != true)) {
                    this.TargetSiteField = value;
                    this.RaisePropertyChanged("TargetSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictionaryResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class DictionaryResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.Generic.Dictionary<long, string> DictionaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<long, string> Dictionary {
            get {
                return this.DictionaryField;
            }
            set {
                if ((object.ReferenceEquals(this.DictionaryField, value) != true)) {
                    this.DictionaryField = value;
                    this.RaisePropertyChanged("Dictionary");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictionaryStringResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class DictionaryStringResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.Generic.Dictionary<string, string> DictionaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Dictionary {
            get {
                return this.DictionaryField;
            }
            set {
                if ((object.ReferenceEquals(this.DictionaryField, value) != true)) {
                    this.DictionaryField = value;
                    this.RaisePropertyChanged("Dictionary");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BooleanResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class BooleanResponse : Mercury.Server.Application.ResponseBase {
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DictionaryKeyCountResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class DictionaryKeyCountResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.Generic.Dictionary<string, long> DictionaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, long> Dictionary {
            get {
                return this.DictionaryField;
            }
            set {
                if ((object.ReferenceEquals(this.DictionaryField, value) != true)) {
                    this.DictionaryField = value;
                    this.RaisePropertyChanged("Dictionary");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class WorkflowResponse : Mercury.Server.Application.ResponseBase {
        
        private long ChainWorkQueueItemIdField;
        
        private Mercury.Server.Application.WorkflowUserInteractionRequestBase UserInteractionRequestField;
        
        private long WorkQueueItemIdField;
        
        private Mercury.Server.Application.Workflow WorkflowField;
        
        private System.Guid WorkflowInstanceIdField;
        
        private string WorkflowMessageField;
        
        private Mercury.Server.Application.WorkflowStatus WorkflowStatusField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowStep> WorkflowStepsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ChainWorkQueueItemId {
            get {
                return this.ChainWorkQueueItemIdField;
            }
            set {
                if ((this.ChainWorkQueueItemIdField.Equals(value) != true)) {
                    this.ChainWorkQueueItemIdField = value;
                    this.RaisePropertyChanged("ChainWorkQueueItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkflowUserInteractionRequestBase UserInteractionRequest {
            get {
                return this.UserInteractionRequestField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInteractionRequestField, value) != true)) {
                    this.UserInteractionRequestField = value;
                    this.RaisePropertyChanged("UserInteractionRequest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueItemId {
            get {
                return this.WorkQueueItemIdField;
            }
            set {
                if ((this.WorkQueueItemIdField.Equals(value) != true)) {
                    this.WorkQueueItemIdField = value;
                    this.RaisePropertyChanged("WorkQueueItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Workflow Workflow {
            get {
                return this.WorkflowField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowField, value) != true)) {
                    this.WorkflowField = value;
                    this.RaisePropertyChanged("Workflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WorkflowInstanceId {
            get {
                return this.WorkflowInstanceIdField;
            }
            set {
                if ((this.WorkflowInstanceIdField.Equals(value) != true)) {
                    this.WorkflowInstanceIdField = value;
                    this.RaisePropertyChanged("WorkflowInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowMessage {
            get {
                return this.WorkflowMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowMessageField, value) != true)) {
                    this.WorkflowMessageField = value;
                    this.RaisePropertyChanged("WorkflowMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkflowStatus WorkflowStatus {
            get {
                return this.WorkflowStatusField;
            }
            set {
                if ((this.WorkflowStatusField.Equals(value) != true)) {
                    this.WorkflowStatusField = value;
                    this.RaisePropertyChanged("WorkflowStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.WorkflowStep> WorkflowSteps {
            get {
                return this.WorkflowStepsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowStepsField, value) != true)) {
                    this.WorkflowStepsField = value;
                    this.RaisePropertyChanged("WorkflowSteps");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWorkResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class GetWorkResponse : Mercury.Server.Application.ResponseBase {
        
        private Mercury.Server.Application.WorkQueue WorkQueueField;
        
        private Mercury.Server.Application.WorkQueueItem WorkQueueItemField;
        
        private Mercury.Server.Application.Workflow WorkflowField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkQueue WorkQueue {
            get {
                return this.WorkQueueField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkQueueField, value) != true)) {
                    this.WorkQueueField = value;
                    this.RaisePropertyChanged("WorkQueue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.WorkQueueItem WorkQueueItem {
            get {
                return this.WorkQueueItemField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkQueueItemField, value) != true)) {
                    this.WorkQueueItemField = value;
                    this.RaisePropertyChanged("WorkQueueItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Workflow Workflow {
            get {
                return this.WorkflowField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowField, value) != true)) {
                    this.WorkflowField = value;
                    this.RaisePropertyChanged("Workflow");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberDemographicsResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class MemberDemographicsResponse : Mercury.Server.Application.ResponseBase {
        
        private Mercury.Server.Application.Entity EntityField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityAddress> EntityAddressesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation> EntityContactInformationsField;
        
        private Mercury.Server.Application.Member MemberField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentCoverage> MemberCurrentEnrollmentCoveragesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentPcp> MemberCurrentEnrollmentPcpsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollment> MemberEnrollmentsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberRelationship> MemberRelationshipsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderAffiliation> ProviderAffiliationsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Provider> ProvidersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Entity Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityAddress> EntityAddresses {
            get {
                return this.EntityAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityAddressesField, value) != true)) {
                    this.EntityAddressesField = value;
                    this.RaisePropertyChanged("EntityAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EntityContactInformation> EntityContactInformations {
            get {
                return this.EntityContactInformationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContactInformationsField, value) != true)) {
                    this.EntityContactInformationsField = value;
                    this.RaisePropertyChanged("EntityContactInformations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Member Member {
            get {
                return this.MemberField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberField, value) != true)) {
                    this.MemberField = value;
                    this.RaisePropertyChanged("Member");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentCoverage> MemberCurrentEnrollmentCoverages {
            get {
                return this.MemberCurrentEnrollmentCoveragesField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberCurrentEnrollmentCoveragesField, value) != true)) {
                    this.MemberCurrentEnrollmentCoveragesField = value;
                    this.RaisePropertyChanged("MemberCurrentEnrollmentCoverages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollmentPcp> MemberCurrentEnrollmentPcps {
            get {
                return this.MemberCurrentEnrollmentPcpsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberCurrentEnrollmentPcpsField, value) != true)) {
                    this.MemberCurrentEnrollmentPcpsField = value;
                    this.RaisePropertyChanged("MemberCurrentEnrollmentPcps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberEnrollment> MemberEnrollments {
            get {
                return this.MemberEnrollmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberEnrollmentsField, value) != true)) {
                    this.MemberEnrollmentsField = value;
                    this.RaisePropertyChanged("MemberEnrollments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.MemberRelationship> MemberRelationships {
            get {
                return this.MemberRelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberRelationshipsField, value) != true)) {
                    this.MemberRelationshipsField = value;
                    this.RaisePropertyChanged("MemberRelationships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ProviderAffiliation> ProviderAffiliations {
            get {
                return this.ProviderAffiliationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderAffiliationsField, value) != true)) {
                    this.ProviderAffiliationsField = value;
                    this.RaisePropertyChanged("ProviderAffiliations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Provider> Providers {
            get {
                return this.ProvidersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvidersField, value) != true)) {
                    this.ProvidersField = value;
                    this.RaisePropertyChanged("Providers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberCaseCreateResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class MemberCaseCreateResponse : Mercury.Server.Application.ResponseBase {
        
        private Mercury.Server.Application.MemberCase MemberCaseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MemberCase MemberCase {
            get {
                return this.MemberCaseField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberCaseField, value) != true)) {
                    this.MemberCaseField = value;
                    this.RaisePropertyChanged("MemberCase");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormSubmitResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class FormSubmitResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormCompileMessage> CollectionField;
        
        private Mercury.Server.Application.Form FormField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.FormCompileMessage> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Form Form {
            get {
                return this.FormField;
            }
            set {
                if ((object.ReferenceEquals(this.FormField, value) != true)) {
                    this.FormField = value;
                    this.RaisePropertyChanged("Form");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlRaiseEventResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class FormControlRaiseEventResponse : Mercury.Server.Application.ResponseBase {
        
        private Mercury.Server.Application.Form FormField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Form Form {
            get {
                return this.FormField;
            }
            set {
                if ((object.ReferenceEquals(this.FormField, value) != true)) {
                    this.FormField = value;
                    this.RaisePropertyChanged("Form");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormControlValueChangedResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class FormControlValueChangedResponse : Mercury.Server.Application.ResponseBase {
        
        private Mercury.Server.Application.Form FormField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.Form Form {
            get {
                return this.FormField;
            }
            set {
                if ((object.ReferenceEquals(this.FormField, value) != true)) {
                    this.FormField = value;
                    this.RaisePropertyChanged("Form");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class ImageResponse : Mercury.Server.Application.ResponseBase {
        
        private string ExtensionField;
        
        private string ImageBase64Field;
        
        private string ImageNameField;
        
        private string MimeTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageBase64 {
            get {
                return this.ImageBase64Field;
            }
            set {
                if ((object.ReferenceEquals(this.ImageBase64Field, value) != true)) {
                    this.ImageBase64Field = value;
                    this.RaisePropertyChanged("ImageBase64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringListResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class StringListResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<string> ResultListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> ResultList {
            get {
                return this.ResultListField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultListField, value) != true)) {
                    this.ResultListField = value;
                    this.RaisePropertyChanged("ResultList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class StringResponse : Mercury.Server.Application.ResponseBase {
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportExportResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses")]
    public partial class ImportExportResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ImportExportResult> ResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.ImportExportResult> Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaxServerConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Public.Faxing")]
    public partial class FaxServerConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FaxQueueNameField;
        
        private string FaxUrlField;
        
        private int MonitorIntervalField;
        
        private int MonitorTimeoutField;
        
        private string SenderEmailAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxQueueName {
            get {
                return this.FaxQueueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxQueueNameField, value) != true)) {
                    this.FaxQueueNameField = value;
                    this.RaisePropertyChanged("FaxQueueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxUrl {
            get {
                return this.FaxUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxUrlField, value) != true)) {
                    this.FaxUrlField = value;
                    this.RaisePropertyChanged("FaxUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonitorInterval {
            get {
                return this.MonitorIntervalField;
            }
            set {
                if ((this.MonitorIntervalField.Equals(value) != true)) {
                    this.MonitorIntervalField = value;
                    this.RaisePropertyChanged("MonitorInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonitorTimeout {
            get {
                return this.MonitorTimeoutField;
            }
            set {
                if ((this.MonitorTimeoutField.Equals(value) != true)) {
                    this.MonitorTimeoutField = value;
                    this.RaisePropertyChanged("MonitorTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderEmailAddress {
            get {
                return this.SenderEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderEmailAddressField, value) != true)) {
                    this.SenderEmailAddressField = value;
                    this.RaisePropertyChanged("SenderEmailAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Duplexing", Namespace="http://schemas.datacontract.org/2004/07/System.Printing")]
    public enum Duplexing : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneSided = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoSidedShortEdge = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoSidedLongEdge = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrinterCapabilities", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Printing")]
    public partial class PrinterCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, string> ColorOptionsField;
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Duplexing> DuplexingField;
        
        private System.Collections.Generic.Dictionary<string, string> InputBinsField;
        
        private System.Collections.Generic.Dictionary<string, string> OutputBinsField;
        
        private System.Collections.Generic.Dictionary<string, string> PageResolutionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ColorOptions {
            get {
                return this.ColorOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorOptionsField, value) != true)) {
                    this.ColorOptionsField = value;
                    this.RaisePropertyChanged("ColorOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.Duplexing> Duplexing {
            get {
                return this.DuplexingField;
            }
            set {
                if ((object.ReferenceEquals(this.DuplexingField, value) != true)) {
                    this.DuplexingField = value;
                    this.RaisePropertyChanged("Duplexing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> InputBins {
            get {
                return this.InputBinsField;
            }
            set {
                if ((object.ReferenceEquals(this.InputBinsField, value) != true)) {
                    this.InputBinsField = value;
                    this.RaisePropertyChanged("InputBins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> OutputBins {
            get {
                return this.OutputBinsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputBinsField, value) != true)) {
                    this.OutputBinsField = value;
                    this.RaisePropertyChanged("OutputBins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PageResolutions {
            get {
                return this.PageResolutionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageResolutionsField, value) != true)) {
                    this.PageResolutionsField = value;
                    this.RaisePropertyChanged("PageResolutions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultGlobal", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Search")]
    public partial class SearchResultGlobal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Detail1Field;
        
        private string Detail2Field;
        
        private System.DateTime EffectiveDateField;
        
        private string NameField;
        
        private long ObjectIdField;
        
        private string ObjectTypeField;
        
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail1 {
            get {
                return this.Detail1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Detail1Field, value) != true)) {
                    this.Detail1Field = value;
                    this.RaisePropertyChanged("Detail1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail2 {
            get {
                return this.Detail2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Detail2Field, value) != true)) {
                    this.Detail2Field = value;
                    this.RaisePropertyChanged("Detail2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultMember", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Search")]
    public partial class SearchResultMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime BirthDateField;
        
        private int CurrentAgeField;
        
        private bool CurrentlyEnrolledField;
        
        private long EntityIdField;
        
        private string GenderField;
        
        private long MemberIdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentAge {
            get {
                return this.CurrentAgeField;
            }
            set {
                if ((this.CurrentAgeField.Equals(value) != true)) {
                    this.CurrentAgeField = value;
                    this.RaisePropertyChanged("CurrentAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrentlyEnrolled {
            get {
                return this.CurrentlyEnrolledField;
            }
            set {
                if ((this.CurrentlyEnrolledField.Equals(value) != true)) {
                    this.CurrentlyEnrolledField = value;
                    this.RaisePropertyChanged("CurrentlyEnrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultProvider", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Search")]
    public partial class SearchResultProvider : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long EntityIdField;
        
        private string ExternalProviderIdField;
        
        private string FederalTaxIdField;
        
        private string NameField;
        
        private string NationalProviderIdField;
        
        private string PrimarySpecialtyNameField;
        
        private long ProviderIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalProviderId {
            get {
                return this.ExternalProviderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalProviderIdField, value) != true)) {
                    this.ExternalProviderIdField = value;
                    this.RaisePropertyChanged("ExternalProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FederalTaxId {
            get {
                return this.FederalTaxIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FederalTaxIdField, value) != true)) {
                    this.FederalTaxIdField = value;
                    this.RaisePropertyChanged("FederalTaxId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalProviderId {
            get {
                return this.NationalProviderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalProviderIdField, value) != true)) {
                    this.NationalProviderIdField = value;
                    this.RaisePropertyChanged("NationalProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimarySpecialtyName {
            get {
                return this.PrimarySpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimarySpecialtyNameField, value) != true)) {
                    this.PrimarySpecialtyNameField = value;
                    this.RaisePropertyChanged("PrimarySpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProviderId {
            get {
                return this.ProviderIdField;
            }
            set {
                if ((this.ProviderIdField.Equals(value) != true)) {
                    this.ProviderIdField = value;
                    this.RaisePropertyChanged("ProviderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultPopulationHeader", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Search")]
    public partial class SearchResultPopulationHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private string DescriptionField;
        
        private bool EnabledField;
        
        private long IdField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private string NameField;
        
        private string ObjectTypeField;
        
        private bool VisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultMedicalServiceHeader", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Search")]
    public partial class SearchResultMedicalServiceHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private string DescriptionField;
        
        private bool EnabledField;
        
        private long IdField;
        
        private System.DateTime LastPaidDateField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private string NameField;
        
        private string ObjectTypeField;
        
        private Mercury.Server.Application.MedicalServiceType ServiceTypeField;
        
        private Mercury.Server.Application.ServiceSetType SetTypeField;
        
        private bool VisibleField;
        
        private int WithinDaysField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPaidDate {
            get {
                return this.LastPaidDateField;
            }
            set {
                if ((this.LastPaidDateField.Equals(value) != true)) {
                    this.LastPaidDateField = value;
                    this.RaisePropertyChanged("LastPaidDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.MedicalServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.ServiceSetType SetType {
            get {
                return this.SetTypeField;
            }
            set {
                if ((this.SetTypeField.Equals(value) != true)) {
                    this.SetTypeField = value;
                    this.RaisePropertyChanged("SetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WithinDays {
            get {
                return this.WithinDaysField;
            }
            set {
                if ((this.WithinDaysField.Equals(value) != true)) {
                    this.WithinDaysField = value;
                    this.RaisePropertyChanged("WithinDays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultFormHeader", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Core.Search")]
    public partial class SearchResultFormHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfoField;
        
        private string DescriptionField;
        
        private bool EnabledField;
        
        private System.Guid FormInstanceIdField;
        
        private Mercury.Server.Application.FormType FormTypeField;
        
        private long IdField;
        
        private Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfoField;
        
        private string NameField;
        
        private string ObjectTypeField;
        
        private string TitleField;
        
        private bool VisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp CreateAccountInfo {
            get {
                return this.CreateAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateAccountInfoField, value) != true)) {
                    this.CreateAccountInfoField = value;
                    this.RaisePropertyChanged("CreateAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormInstanceId {
            get {
                return this.FormInstanceIdField;
            }
            set {
                if ((this.FormInstanceIdField.Equals(value) != true)) {
                    this.FormInstanceIdField = value;
                    this.RaisePropertyChanged("FormInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.FormType FormType {
            get {
                return this.FormTypeField;
            }
            set {
                if ((this.FormTypeField.Equals(value) != true)) {
                    this.FormTypeField = value;
                    this.RaisePropertyChanged("FormType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mercury.Server.Application.AuthorityAccountStamp ModifiedAccountInfo {
            get {
                return this.ModifiedAccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedAccountInfoField, value) != true)) {
                    this.ModifiedAccountInfoField = value;
                    this.RaisePropertyChanged("ModifiedAccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectType {
            get {
                return this.ObjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypeField, value) != true)) {
                    this.ObjectTypeField = value;
                    this.RaisePropertyChanged("ObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultsGlobalResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.SearchR" +
        "esults")]
    public partial class SearchResultsGlobalResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultGlobal> CollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultGlobal> Collection {
            get {
                return this.CollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionField, value) != true)) {
                    this.CollectionField = value;
                    this.RaisePropertyChanged("Collection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultsMemberResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.SearchR" +
        "esults")]
    public partial class SearchResultsMemberResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMember> ResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultMember> Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResultsProviderResponse", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Services.Responses.SearchR" +
        "esults")]
    public partial class SearchResultsProviderResponse : Mercury.Server.Application.ResponseBase {
        
        private System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultProvider> ResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.SearchResultProvider> Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowStartRequest", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows")]
    public partial class WorkflowStartRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, object> ArgumentsField;
        
        private long WorkQueueItemIdField;
        
        private long WorkflowIdField;
        
        private System.Guid WorkflowInstanceIdField;
        
        private string WorkflowNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Arguments {
            get {
                return this.ArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgumentsField, value) != true)) {
                    this.ArgumentsField = value;
                    this.RaisePropertyChanged("Arguments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkQueueItemId {
            get {
                return this.WorkQueueItemIdField;
            }
            set {
                if ((this.WorkQueueItemIdField.Equals(value) != true)) {
                    this.WorkQueueItemIdField = value;
                    this.RaisePropertyChanged("WorkQueueItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WorkflowInstanceId {
            get {
                return this.WorkflowInstanceIdField;
            }
            set {
                if ((this.WorkflowInstanceIdField.Equals(value) != true)) {
                    this.WorkflowInstanceIdField = value;
                    this.RaisePropertyChanged("WorkflowInstanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowName {
            get {
                return this.WorkflowNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowNameField, value) != true)) {
                    this.WorkflowNameField = value;
                    this.RaisePropertyChanged("WorkflowName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowStatus", Namespace="http://schemas.datacontract.org/2004/07/Mercury.Server.Workflows")]
    public enum WorkflowStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aborted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loaded = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Persisted = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resumed = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspended = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminated = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unloaded = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.Application.IApplication")]
    public interface IApplication {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ReportingServerGet", ReplyAction="http://tempuri.org/IApplication/ReportingServerGetResponse")]
        System.IAsyncResult BeginReportingServerGet(string token, long reportingServerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ReportingServer EndReportingServerGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ReportingServerGetByName", ReplyAction="http://tempuri.org/IApplication/ReportingServerGetByNameResponse")]
        System.IAsyncResult BeginReportingServerGetByName(string token, string reportingServerName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ReportingServer EndReportingServerGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ReportingServerSave", ReplyAction="http://tempuri.org/IApplication/ReportingServerSaveResponse")]
        System.IAsyncResult BeginReportingServerSave(string token, Mercury.Server.Application.ReportingServer reportingServer, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndReportingServerSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FaxServersAvailable", ReplyAction="http://tempuri.org/IApplication/FaxServersAvailableResponse")]
        System.IAsyncResult BeginFaxServersAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FaxServerCollectionResponse EndFaxServersAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FaxServerDictionary", ReplyAction="http://tempuri.org/IApplication/FaxServerDictionaryResponse")]
        System.IAsyncResult BeginFaxServerDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndFaxServerDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FaxServerGet", ReplyAction="http://tempuri.org/IApplication/FaxServerGetResponse")]
        System.IAsyncResult BeginFaxServerGet(string token, long reportingServerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FaxServer EndFaxServerGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FaxServerGetByName", ReplyAction="http://tempuri.org/IApplication/FaxServerGetByNameResponse")]
        System.IAsyncResult BeginFaxServerGetByName(string token, string reportingServerName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FaxServer EndFaxServerGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FaxServerSave", ReplyAction="http://tempuri.org/IApplication/FaxServerSaveResponse")]
        System.IAsyncResult BeginFaxServerSave(string token, Mercury.Server.Application.FaxServer reportingServer, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndFaxServerSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrintersAvailable", ReplyAction="http://tempuri.org/IApplication/PrintersAvailableResponse")]
        System.IAsyncResult BeginPrintersAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PrinterCollectionResponse EndPrintersAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrintQueuesAvailable", ReplyAction="http://tempuri.org/IApplication/PrintQueuesAvailableResponse")]
        System.IAsyncResult BeginPrintQueuesAvailable(string token, string printServerName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryStringResponse EndPrintQueuesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrinterDictionary", ReplyAction="http://tempuri.org/IApplication/PrinterDictionaryResponse")]
        System.IAsyncResult BeginPrinterDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndPrinterDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrinterGet", ReplyAction="http://tempuri.org/IApplication/PrinterGetResponse")]
        System.IAsyncResult BeginPrinterGet(string token, long printerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Printer EndPrinterGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrinterGetByName", ReplyAction="http://tempuri.org/IApplication/PrinterGetByNameResponse")]
        System.IAsyncResult BeginPrinterGetByName(string token, string printerName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Printer EndPrinterGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrinterCapabilitiesGet", ReplyAction="http://tempuri.org/IApplication/PrinterCapabilitiesGetResponse")]
        System.IAsyncResult BeginPrinterCapabilitiesGet(string token, string printServerName, string printQueueName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PrinterCapabilities EndPrinterCapabilitiesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PrinterSave", ReplyAction="http://tempuri.org/IApplication/PrinterSaveResponse")]
        System.IAsyncResult BeginPrinterSave(string token, Mercury.Server.Application.Printer printer, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndPrinterSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SearchGlobal", ReplyAction="http://tempuri.org/IApplication/SearchGlobalResponse")]
        System.IAsyncResult BeginSearchGlobal(string token, string criteria, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultsGlobalResponse EndSearchGlobal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SearchMemberByName", ReplyAction="http://tempuri.org/IApplication/SearchMemberByNameResponse")]
        System.IAsyncResult BeginSearchMemberByName(string token, string memberName, System.Nullable<System.DateTime> birthDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultsMemberResponse EndSearchMemberByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SearchMemberById", ReplyAction="http://tempuri.org/IApplication/SearchMemberByIdResponse")]
        System.IAsyncResult BeginSearchMemberById(string token, string memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultsMemberResponse EndSearchMemberById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SearchMember", ReplyAction="http://tempuri.org/IApplication/SearchMemberResponse")]
        System.IAsyncResult BeginSearchMember(string token, string memberName, System.Nullable<System.DateTime> birthDate, string memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultsMemberResponse EndSearchMember(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SearchProvider", ReplyAction="http://tempuri.org/IApplication/SearchProviderResponse")]
        System.IAsyncResult BeginSearchProvider(string token, string memberName, string providerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultsProviderResponse EndSearchProvider(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SearchProviderByName", ReplyAction="http://tempuri.org/IApplication/SearchProviderByNameResponse")]
        System.IAsyncResult BeginSearchProviderByName(string token, string providerName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultsProviderResponse EndSearchProviderByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemClose", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemCloseResponse")]
        System.IAsyncResult BeginWorkQueueItemClose(string token, long workQueueItemId, long workOutcomeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndWorkQueueItemClose(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemSuspend", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemSuspendResponse")]
        System.IAsyncResult BeginWorkQueueItemSuspend(string token, long workQueueItemId, string lastStep, string nextStep, int constraintDays, int milestoneDays, bool releaseItem, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndWorkQueueItemSuspend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemSendersGet", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemSendersGetResponse")]
        System.IAsyncResult BeginWorkQueueItemSendersGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueItemSenderCollectionResponse EndWorkQueueItemSendersGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemAssignmentHistoryGet", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemAssignmentHistoryGetResponse")]
        System.IAsyncResult BeginWorkQueueItemAssignmentHistoryGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse EndWorkQueueItemAssignmentHistoryGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemWorkflowStepsGet", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemWorkflowStepsGetResponse")]
        System.IAsyncResult BeginWorkQueueItemWorkflowStepsGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse EndWorkQueueItemWorkflowStepsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemsGetCount", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemsGetCountResponse")]
        System.IAsyncResult BeginWorkQueueItemsGetCount(string token, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.AsyncCallback callback, object asyncState);
        
        long EndWorkQueueItemsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemsGetCountByView", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemsGetCountByViewResponse")]
        System.IAsyncResult BeginWorkQueueItemsGetCountByView(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.AsyncCallback callback, object asyncState);
        
        long EndWorkQueueItemsGetCountByView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemsGetByViewPage", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemsGetByViewPageResponse")]
        System.IAsyncResult BeginWorkQueueItemsGetByViewPage(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor> sorts, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueItemCollectionResponse EndWorkQueueItemsGetByViewPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkTeamsAvailable", ReplyAction="http://tempuri.org/IApplication/WorkTeamsAvailableResponse")]
        System.IAsyncResult BeginWorkTeamsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkTeamCollectionResponse EndWorkTeamsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkTeamsForSession", ReplyAction="http://tempuri.org/IApplication/WorkTeamsForSessionResponse")]
        System.IAsyncResult BeginWorkTeamsForSession(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkTeamCollectionResponse EndWorkTeamsForSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkTeamGet", ReplyAction="http://tempuri.org/IApplication/WorkTeamGetResponse")]
        System.IAsyncResult BeginWorkTeamGet(string token, long workTeamId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkTeam EndWorkTeamGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkTeamGetByName", ReplyAction="http://tempuri.org/IApplication/WorkTeamGetByNameResponse")]
        System.IAsyncResult BeginWorkTeamGetByName(string token, string workTeamName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkTeam EndWorkTeamGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkTeamSave", ReplyAction="http://tempuri.org/IApplication/WorkTeamSaveResponse")]
        System.IAsyncResult BeginWorkTeamSave(string token, Mercury.Server.Application.WorkTeam workTeam, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndWorkTeamSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueViewsAvailable", ReplyAction="http://tempuri.org/IApplication/WorkQueueViewsAvailableResponse")]
        System.IAsyncResult BeginWorkQueueViewsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueViewCollectionResponse EndWorkQueueViewsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueViewDictionary", ReplyAction="http://tempuri.org/IApplication/WorkQueueViewDictionaryResponse")]
        System.IAsyncResult BeginWorkQueueViewDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndWorkQueueViewDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueViewGet", ReplyAction="http://tempuri.org/IApplication/WorkQueueViewGetResponse")]
        System.IAsyncResult BeginWorkQueueViewGet(string token, long workQueueViewId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueView EndWorkQueueViewGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueViewGetByName", ReplyAction="http://tempuri.org/IApplication/WorkQueueViewGetByNameResponse")]
        System.IAsyncResult BeginWorkQueueViewGetByName(string token, string workQueueViewName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueView EndWorkQueueViewGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueViewSave", ReplyAction="http://tempuri.org/IApplication/WorkQueueViewSaveResponse")]
        System.IAsyncResult BeginWorkQueueViewSave(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndWorkQueueViewSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueView_ValidateFieldDefinition", ReplyAction="http://tempuri.org/IApplication/WorkQueueView_ValidateFieldDefinitionResponse")]
        System.IAsyncResult BeginWorkQueueView_ValidateFieldDefinition(string token, Mercury.Server.Application.WorkQueueView workQueueView, Mercury.Server.Application.WorkQueueViewFieldDefinition fieldDefinition, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryStringResponse EndWorkQueueView_ValidateFieldDefinition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueView_WellKnownFields", ReplyAction="http://tempuri.org/IApplication/WorkQueueView_WellKnownFieldsResponse")]
        System.IAsyncResult BeginWorkQueueView_WellKnownFields(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, bool> EndWorkQueueView_WellKnownFields(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueMonitorSummary", ReplyAction="http://tempuri.org/IApplication/WorkQueueMonitorSummaryResponse")]
        System.IAsyncResult BeginWorkQueueMonitorSummary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueSummaryCollectionResponse EndWorkQueueMonitorSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueMonitorAgingByWorkQueue", ReplyAction="http://tempuri.org/IApplication/WorkQueueMonitorAgingByWorkQueueResponse")]
        System.IAsyncResult BeginWorkQueueMonitorAgingByWorkQueue(string token, long workQueueId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryKeyCountResponse EndWorkQueueMonitorAgingByWorkQueue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueMonitorAgingAvailableByWorkQueue", ReplyAction="http://tempuri.org/IApplication/WorkQueueMonitorAgingAvailableByWorkQueueResponse" +
            "")]
        System.IAsyncResult BeginWorkQueueMonitorAgingAvailableByWorkQueue(string token, long workQueueId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryKeyCountResponse EndWorkQueueMonitorAgingAvailableByWorkQueue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ReportingServersAvailable", ReplyAction="http://tempuri.org/IApplication/ReportingServersAvailableResponse")]
        System.IAsyncResult BeginReportingServersAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ReportingServerCollectionResponse EndReportingServersAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ReportingServerDictionary", ReplyAction="http://tempuri.org/IApplication/ReportingServerDictionaryResponse")]
        System.IAsyncResult BeginReportingServerDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndReportingServerDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/RoutingRuleGet", ReplyAction="http://tempuri.org/IApplication/RoutingRuleGetResponse")]
        System.IAsyncResult BeginRoutingRuleGet(string token, long routingRuleId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.RoutingRule EndRoutingRuleGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/RoutingRuleSave", ReplyAction="http://tempuri.org/IApplication/RoutingRuleSaveResponse")]
        System.IAsyncResult BeginRoutingRuleSave(string token, Mercury.Server.Application.RoutingRule routingRule, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndRoutingRuleSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowsAvailable", ReplyAction="http://tempuri.org/IApplication/WorkflowsAvailableResponse")]
        System.IAsyncResult BeginWorkflowsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkflowCollectionResponse EndWorkflowsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowGet", ReplyAction="http://tempuri.org/IApplication/WorkflowGetResponse")]
        System.IAsyncResult BeginWorkflowGet(string token, long workflowId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Workflow EndWorkflowGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowGetByName", ReplyAction="http://tempuri.org/IApplication/WorkflowGetByNameResponse")]
        System.IAsyncResult BeginWorkflowGetByName(string token, string workflowName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Workflow EndWorkflowGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowGetByWorkQueueId", ReplyAction="http://tempuri.org/IApplication/WorkflowGetByWorkQueueIdResponse")]
        System.IAsyncResult BeginWorkflowGetByWorkQueueId(string token, long workQueueId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Workflow EndWorkflowGetByWorkQueueId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowSave", ReplyAction="http://tempuri.org/IApplication/WorkflowSaveResponse")]
        System.IAsyncResult BeginWorkflowSave(string token, Mercury.Server.Application.Workflow workflow, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndWorkflowSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowStart", ReplyAction="http://tempuri.org/IApplication/WorkflowStartResponse")]
        System.IAsyncResult BeginWorkflowStart(string token, Mercury.Server.Application.WorkflowStartRequest startRequest, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkflowResponse EndWorkflowStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkflowContinue", ReplyAction="http://tempuri.org/IApplication/WorkflowContinueResponse")]
        System.IAsyncResult BeginWorkflowContinue(string token, string workflowName, System.Guid workflowInstanceId, Mercury.Server.Application.WorkflowUserInteractionResponseBase userInteractionResponse, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkflowResponse EndWorkflowContinue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkOutcomesAvailable", ReplyAction="http://tempuri.org/IApplication/WorkOutcomesAvailableResponse")]
        System.IAsyncResult BeginWorkOutcomesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkOutcomeCollectionResponse EndWorkOutcomesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkOutcomeDictionary", ReplyAction="http://tempuri.org/IApplication/WorkOutcomeDictionaryResponse")]
        System.IAsyncResult BeginWorkOutcomeDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndWorkOutcomeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkOutcomeGet", ReplyAction="http://tempuri.org/IApplication/WorkOutcomeGetResponse")]
        System.IAsyncResult BeginWorkOutcomeGet(string token, long workOutcomeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkOutcome EndWorkOutcomeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkOutcomeGetByName", ReplyAction="http://tempuri.org/IApplication/WorkOutcomeGetByNameResponse")]
        System.IAsyncResult BeginWorkOutcomeGetByName(string token, string workOutcomeName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkOutcome EndWorkOutcomeGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkOutcomeSave", ReplyAction="http://tempuri.org/IApplication/WorkOutcomeSaveResponse")]
        System.IAsyncResult BeginWorkOutcomeSave(string token, Mercury.Server.Application.WorkOutcome workOutcome, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndWorkOutcomeSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueuesAvailable", ReplyAction="http://tempuri.org/IApplication/WorkQueuesAvailableResponse")]
        System.IAsyncResult BeginWorkQueuesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueCollectionResponse EndWorkQueuesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueDictionary", ReplyAction="http://tempuri.org/IApplication/WorkQueueDictionaryResponse")]
        System.IAsyncResult BeginWorkQueueDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndWorkQueueDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueGet", ReplyAction="http://tempuri.org/IApplication/WorkQueueGetResponse")]
        System.IAsyncResult BeginWorkQueueGet(string token, long workQueueId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueue EndWorkQueueGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueGetByName", ReplyAction="http://tempuri.org/IApplication/WorkQueueGetByNameResponse")]
        System.IAsyncResult BeginWorkQueueGetByName(string token, string workQueueName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueue EndWorkQueueGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueGetByWorkQueueItem", ReplyAction="http://tempuri.org/IApplication/WorkQueueGetByWorkQueueItemResponse")]
        System.IAsyncResult BeginWorkQueueGetByWorkQueueItem(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueue EndWorkQueueGetByWorkQueueItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueSave", ReplyAction="http://tempuri.org/IApplication/WorkQueueSaveResponse")]
        System.IAsyncResult BeginWorkQueueSave(string token, Mercury.Server.Application.WorkQueue workQueue, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndWorkQueueSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueGetWork", ReplyAction="http://tempuri.org/IApplication/WorkQueueGetWorkResponse")]
        System.IAsyncResult BeginWorkQueueGetWork(string token, long workQueueId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.GetWorkResponse EndWorkQueueGetWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueInsertEntity", ReplyAction="http://tempuri.org/IApplication/WorkQueueInsertEntityResponse")]
        System.IAsyncResult BeginWorkQueueInsertEntity(string token, long workQueueId, long entityId, Mercury.Server.Application.CoreObject sender, Mercury.Server.Application.CoreObject eventObject, long eventInstanceId, string eventDescription, int priority, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndWorkQueueInsertEntity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemGet", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemGetResponse")]
        System.IAsyncResult BeginWorkQueueItemGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.WorkQueueItem EndWorkQueueItemGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemAssignTo", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemAssignToResponse")]
        System.IAsyncResult BeginWorkQueueItemAssignTo(string token, long workQueueItemId, long securityAuthorityId, string userAccountId, string userAccountName, string userDisplayName, string assignmentSource, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndWorkQueueItemAssignTo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/WorkQueueItemMoveToQueue", ReplyAction="http://tempuri.org/IApplication/WorkQueueItemMoveToQueueResponse")]
        System.IAsyncResult BeginWorkQueueItemMoveToQueue(string token, long workQueueItemId, long workQueueId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndWorkQueueItemMoveToQueue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationGet", ReplyAction="http://tempuri.org/IApplication/PopulationGetResponse")]
        System.IAsyncResult BeginPopulationGet(string token, long populationId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Population EndPopulationGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationServiceEventGet", ReplyAction="http://tempuri.org/IApplication/PopulationServiceEventGetResponse")]
        System.IAsyncResult BeginPopulationServiceEventGet(string token, long populationServiceEventId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationServiceEvent EndPopulationServiceEventGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationSave", ReplyAction="http://tempuri.org/IApplication/PopulationSaveResponse")]
        System.IAsyncResult BeginPopulationSave(string token, Mercury.Server.Application.Population population, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndPopulationSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationDelete", ReplyAction="http://tempuri.org/IApplication/PopulationDeleteResponse")]
        System.IAsyncResult BeginPopulationDelete(string token, long populationId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndPopulationDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/Population_DataBindingContexts", ReplyAction="http://tempuri.org/IApplication/Population_DataBindingContextsResponse")]
        System.IAsyncResult BeginPopulation_DataBindingContexts(string token, Mercury.Server.Application.Population population, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndPopulation_DataBindingContexts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipGet", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipGetResponse")]
        System.IAsyncResult BeginPopulationMembershipGet(string token, long populationMembershipId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembership EndPopulationMembershipGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipServiceEventsGetByPopulationM" +
            "embership", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipServiceEventsGetByPopulationM" +
            "embershipResponse")]
        System.IAsyncResult BeginPopulationMembershipServiceEventsGetByPopulationMembership(string token, long populationMembershipId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse EndPopulationMembershipServiceEventsGetByPopulationMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipServiceEventGet", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipServiceEventGetResponse")]
        System.IAsyncResult BeginPopulationMembershipServiceEventGet(string token, long populationMembershipServiceEventId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipServiceEvent EndPopulationMembershipServiceEventGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipGetByMember", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipGetByMemberResponse")]
        System.IAsyncResult BeginPopulationMembershipGetByMember(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipCollectionResponse EndPopulationMembershipGetByMember(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipSummaryByMember", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipSummaryByMemberResponse")]
        System.IAsyncResult BeginPopulationMembershipSummaryByMember(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse EndPopulationMembershipSummaryByMember(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipServiceEventsByMembershipData" +
            "View", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipServiceEventsByMembershipData" +
            "ViewResponse")]
        System.IAsyncResult BeginPopulationMembershipServiceEventsByMembershipDataView(string token, long membershipId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse EndPopulationMembershipServiceEventsByMembershipDataView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipTriggerEventsByMembershipData" +
            "View", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipTriggerEventsByMembershipData" +
            "ViewResponse")]
        System.IAsyncResult BeginPopulationMembershipTriggerEventsByMembershipDataView(string token, long membershipId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse EndPopulationMembershipTriggerEventsByMembershipDataView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipGetCountByName", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipGetCountByNameResponse")]
        System.IAsyncResult BeginPopulationMembershipGetCountByName(string token, long populationId, string namePrefix, System.AsyncCallback callback, object asyncState);
        
        long EndPopulationMembershipGetCountByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationMembershipGetByMembershipPage", ReplyAction="http://tempuri.org/IApplication/PopulationMembershipGetByMembershipPageResponse")]
        System.IAsyncResult BeginPopulationMembershipGetByMembershipPage(string token, long populationId, string namePrefix, long initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse EndPopulationMembershipGetByMembershipPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderGet", ReplyAction="http://tempuri.org/IApplication/ProviderGetResponse")]
        System.IAsyncResult BeginProviderGet(string token, long providerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Provider EndProviderGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderGetByEntityId", ReplyAction="http://tempuri.org/IApplication/ProviderGetByEntityIdResponse")]
        System.IAsyncResult BeginProviderGetByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Provider EndProviderGetByEntityId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderEnrollmentsGet", ReplyAction="http://tempuri.org/IApplication/ProviderEnrollmentsGetResponse")]
        System.IAsyncResult BeginProviderEnrollmentsGet(string token, long providerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderEnrollmentCollectionResponse EndProviderEnrollmentsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderEnrollmentGet", ReplyAction="http://tempuri.org/IApplication/ProviderEnrollmentGetResponse")]
        System.IAsyncResult BeginProviderEnrollmentGet(string token, long providerEnrollmentId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderEnrollment EndProviderEnrollmentGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderAffiliationsGet", ReplyAction="http://tempuri.org/IApplication/ProviderAffiliationsGetResponse")]
        System.IAsyncResult BeginProviderAffiliationsGet(string token, long providerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderAffiliationCollectionResponse EndProviderAffiliationsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderAffiliationGet", ReplyAction="http://tempuri.org/IApplication/ProviderAffiliationGetResponse")]
        System.IAsyncResult BeginProviderAffiliationGet(string token, long providerAffiliationId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderAffiliation EndProviderAffiliationGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderContractsGet", ReplyAction="http://tempuri.org/IApplication/ProviderContractsGetResponse")]
        System.IAsyncResult BeginProviderContractsGet(string token, long providerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderContractCollectionResponse EndProviderContractsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderContractGet", ReplyAction="http://tempuri.org/IApplication/ProviderContractGetResponse")]
        System.IAsyncResult BeginProviderContractGet(string token, long providerContractId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderContract EndProviderContractGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProviderServiceLocationsGet", ReplyAction="http://tempuri.org/IApplication/ProviderServiceLocationsGetResponse")]
        System.IAsyncResult BeginProviderServiceLocationsGet(string token, long providerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProviderServiceLocationCollectionResponse EndProviderServiceLocationsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SponsorGet", ReplyAction="http://tempuri.org/IApplication/SponsorGetResponse")]
        System.IAsyncResult BeginSponsorGet(string token, long sponsorId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Sponsor EndSponsorGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/RoutingRulesAvailable", ReplyAction="http://tempuri.org/IApplication/RoutingRulesAvailableResponse")]
        System.IAsyncResult BeginRoutingRulesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.RoutingRuleCollectionResponse EndRoutingRulesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberGet", ReplyAction="http://tempuri.org/IApplication/MemberGetResponse")]
        System.IAsyncResult BeginMemberGet(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Member EndMemberGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberGetByEntityId", ReplyAction="http://tempuri.org/IApplication/MemberGetByEntityIdResponse")]
        System.IAsyncResult BeginMemberGetByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Member EndMemberGetByEntityId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberGetDemographics", ReplyAction="http://tempuri.org/IApplication/MemberGetDemographicsResponse")]
        System.IAsyncResult BeginMemberGetDemographics(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberDemographicsResponse EndMemberGetDemographics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberGetDemographicsByEntityId", ReplyAction="http://tempuri.org/IApplication/MemberGetDemographicsByEntityIdResponse")]
        System.IAsyncResult BeginMemberGetDemographicsByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberDemographicsResponse EndMemberGetDemographicsByEntityId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollment EndMemberEnrollmentGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentsGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentsGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentsGet(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentCollectionResponse EndMemberEnrollmentsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentCoverageGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentCoverageGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentCoverageGet(string token, long memberEnrollmentCoverageId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentCoverage EndMemberEnrollmentCoverageGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentCoveragesGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentCoveragesGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentCoveragesGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse EndMemberEnrollmentCoveragesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentPcpGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentPcpGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentPcpGet(string token, long memberEnrollmentPcpId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentPcp EndMemberEnrollmentPcpGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentPcpsGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentPcpsGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentPcpsGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse EndMemberEnrollmentPcpsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentTplCobGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentTplCobGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentTplCobGet(string token, long memberEnrollmentTplCobId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentTplCob EndMemberEnrollmentTplCobGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberEnrollmentTplCobsGet", ReplyAction="http://tempuri.org/IApplication/MemberEnrollmentTplCobsGetResponse")]
        System.IAsyncResult BeginMemberEnrollmentTplCobsGet(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse EndMemberEnrollmentTplCobsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberRelationshipGet", ReplyAction="http://tempuri.org/IApplication/MemberRelationshipGetResponse")]
        System.IAsyncResult BeginMemberRelationshipGet(string token, long memberRelationshipId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberRelationship EndMemberRelationshipGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberRelationshipsGet", ReplyAction="http://tempuri.org/IApplication/MemberRelationshipsGetResponse")]
        System.IAsyncResult BeginMemberRelationshipsGet(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberRelationshipCollectionResponse EndMemberRelationshipsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MetricsAvailable", ReplyAction="http://tempuri.org/IApplication/MetricsAvailableResponse")]
        System.IAsyncResult BeginMetricsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MetricCollectionResponse EndMetricsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MetricGet", ReplyAction="http://tempuri.org/IApplication/MetricGetResponse")]
        System.IAsyncResult BeginMetricGet(string token, long metricId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Metric EndMetricGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MetricSave", ReplyAction="http://tempuri.org/IApplication/MetricSaveResponse")]
        System.IAsyncResult BeginMetricSave(string token, Mercury.Server.Application.Metric metric, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndMetricSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberMetricAddManual", ReplyAction="http://tempuri.org/IApplication/MemberMetricAddManualResponse")]
        System.IAsyncResult BeginMemberMetricAddManual(string token, long memberId, long metricId, System.DateTime eventDate, decimal value, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndMemberMetricAddManual(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberMetricRemoveManual", ReplyAction="http://tempuri.org/IApplication/MemberMetricRemoveManualResponse")]
        System.IAsyncResult BeginMemberMetricRemoveManual(string token, long memberMetricId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndMemberMetricRemoveManual(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberMetricsGetCount", ReplyAction="http://tempuri.org/IApplication/MemberMetricsGetCountResponse")]
        System.IAsyncResult BeginMemberMetricsGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState);
        
        long EndMemberMetricsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberMetricsGetByPage", ReplyAction="http://tempuri.org/IApplication/MemberMetricsGetByPageResponse")]
        System.IAsyncResult BeginMemberMetricsGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberMetricCollectionResponse EndMemberMetricsGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationTypesAvailable", ReplyAction="http://tempuri.org/IApplication/PopulationTypesAvailableResponse")]
        System.IAsyncResult BeginPopulationTypesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationTypeCollectionResponse EndPopulationTypesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationTypeGet", ReplyAction="http://tempuri.org/IApplication/PopulationTypeGetResponse")]
        System.IAsyncResult BeginPopulationTypeGet(string token, long populationTypeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationType EndPopulationTypeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationTypeSave", ReplyAction="http://tempuri.org/IApplication/PopulationTypeSaveResponse")]
        System.IAsyncResult BeginPopulationTypeSave(string token, Mercury.Server.Application.PopulationType populationType, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndPopulationTypeSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/PopulationsAvailable", ReplyAction="http://tempuri.org/IApplication/PopulationsAvailableResponse")]
        System.IAsyncResult BeginPopulationsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PopulationHeadersCollectionResponse EndPopulationsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/InsurerDictionary", ReplyAction="http://tempuri.org/IApplication/InsurerDictionaryResponse")]
        System.IAsyncResult BeginInsurerDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndInsurerDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/InsurerGet", ReplyAction="http://tempuri.org/IApplication/InsurerGetResponse")]
        System.IAsyncResult BeginInsurerGet(string token, long insurerId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Insurer EndInsurerGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProgramsAvailable", ReplyAction="http://tempuri.org/IApplication/ProgramsAvailableResponse")]
        System.IAsyncResult BeginProgramsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProgramCollectionResponse EndProgramsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProgramDictionary", ReplyAction="http://tempuri.org/IApplication/ProgramDictionaryResponse")]
        System.IAsyncResult BeginProgramDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndProgramDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProgramGet", ReplyAction="http://tempuri.org/IApplication/ProgramGetResponse")]
        System.IAsyncResult BeginProgramGet(string token, long programId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Program EndProgramGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceHeadersGet", ReplyAction="http://tempuri.org/IApplication/MedicalServiceHeadersGetResponse")]
        System.IAsyncResult BeginMedicalServiceHeadersGet(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse EndMedicalServiceHeadersGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceHeadersGetByType", ReplyAction="http://tempuri.org/IApplication/MedicalServiceHeadersGetByTypeResponse")]
        System.IAsyncResult BeginMedicalServiceHeadersGetByType(string token, Mercury.Server.Application.MedicalServiceType serviceType, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse EndMedicalServiceHeadersGetByType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceGet", ReplyAction="http://tempuri.org/IApplication/MedicalServiceGetResponse")]
        System.IAsyncResult BeginMedicalServiceGet(string token, long serviceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Service EndMedicalServiceGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceGetIdByName", ReplyAction="http://tempuri.org/IApplication/MedicalServiceGetIdByNameResponse")]
        System.IAsyncResult BeginMedicalServiceGetIdByName(string token, string serviceName, System.AsyncCallback callback, object asyncState);
        
        long EndMedicalServiceGetIdByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceDelete", ReplyAction="http://tempuri.org/IApplication/MedicalServiceDeleteResponse")]
        System.IAsyncResult BeginMedicalServiceDelete(string token, long serviceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndMedicalServiceDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSingletonGet", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSingletonGetResponse")]
        System.IAsyncResult BeginMedicalServiceSingletonGet(string token, long serviceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ServiceSingleton EndMedicalServiceSingletonGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSingletonSave", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSingletonSaveResponse")]
        System.IAsyncResult BeginMedicalServiceSingletonSave(string token, Mercury.Server.Application.ServiceSingleton singleton, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndMedicalServiceSingletonSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSingletonDefinitionValidate", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSingletonDefinitionValidateResponse" +
            "")]
        System.IAsyncResult BeginMedicalServiceSingletonDefinitionValidate(string token, Mercury.Server.Application.ServiceSingletonDefinition singletonDefinition, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndMedicalServiceSingletonDefinitionValidate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSingletonPreview", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSingletonPreviewResponse")]
        System.IAsyncResult BeginMedicalServiceSingletonPreview(string token, Mercury.Server.Application.ServiceSingleton serviceSingleton, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse EndMedicalServiceSingletonPreview(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSetPreview", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSetPreviewResponse")]
        System.IAsyncResult BeginMedicalServiceSetPreview(string token, Mercury.Server.Application.ServiceSet serviceSet, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse EndMedicalServiceSetPreview(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSetGet", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSetGetResponse")]
        System.IAsyncResult BeginMedicalServiceSetGet(string token, long serviceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ServiceSet EndMedicalServiceSetGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSetDefinitionValidate", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSetDefinitionValidateResponse")]
        System.IAsyncResult BeginMedicalServiceSetDefinitionValidate(string token, Mercury.Server.Application.ServiceSetDefinition setDefinition, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndMedicalServiceSetDefinitionValidate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MedicalServiceSetSave", ReplyAction="http://tempuri.org/IApplication/MedicalServiceSetSaveResponse")]
        System.IAsyncResult BeginMedicalServiceSetSave(string token, Mercury.Server.Application.ServiceSet serviceSet, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndMedicalServiceSetSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServiceGet", ReplyAction="http://tempuri.org/IApplication/MemberServiceGetResponse")]
        System.IAsyncResult BeginMemberServiceGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberService EndMemberServiceGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServiceAddManual", ReplyAction="http://tempuri.org/IApplication/MemberServiceAddManualResponse")]
        System.IAsyncResult BeginMemberServiceAddManual(string token, long memberId, long serviceId, System.DateTime eventDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndMemberServiceAddManual(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServiceRemoveManual", ReplyAction="http://tempuri.org/IApplication/MemberServiceRemoveManualResponse")]
        System.IAsyncResult BeginMemberServiceRemoveManual(string token, long memberServiceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndMemberServiceRemoveManual(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServicesGetCount", ReplyAction="http://tempuri.org/IApplication/MemberServicesGetCountResponse")]
        System.IAsyncResult BeginMemberServicesGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState);
        
        long EndMemberServicesGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServicesGetByPage", ReplyAction="http://tempuri.org/IApplication/MemberServicesGetByPageResponse")]
        System.IAsyncResult BeginMemberServicesGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberServiceCollectionResponse EndMemberServicesGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServiceDetailSingletonGet", ReplyAction="http://tempuri.org/IApplication/MemberServiceDetailSingletonGetResponse")]
        System.IAsyncResult BeginMemberServiceDetailSingletonGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse EndMemberServiceDetailSingletonGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberServiceDetailSetGet", ReplyAction="http://tempuri.org/IApplication/MemberServiceDetailSetGetResponse")]
        System.IAsyncResult BeginMemberServiceDetailSetGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberServiceDetailSetCollectionResponse EndMemberServiceDetailSetGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProblemStatementGet", ReplyAction="http://tempuri.org/IApplication/ProblemStatementGetResponse")]
        System.IAsyncResult BeginProblemStatementGet(string token, long problemStatementId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProblemStatement EndProblemStatementGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProblemStatementSave", ReplyAction="http://tempuri.org/IApplication/ProblemStatementSaveResponse")]
        System.IAsyncResult BeginProblemStatementSave(string token, Mercury.Server.Application.ProblemStatement problemStatement, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndProblemStatementSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareOutcomesAvailable", ReplyAction="http://tempuri.org/IApplication/CareOutcomesAvailableResponse")]
        System.IAsyncResult BeginCareOutcomesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CareOutcomeCollectionResponse EndCareOutcomesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareOutcomeDictionary", ReplyAction="http://tempuri.org/IApplication/CareOutcomeDictionaryResponse")]
        System.IAsyncResult BeginCareOutcomeDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndCareOutcomeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareOutcomeGet", ReplyAction="http://tempuri.org/IApplication/CareOutcomeGetResponse")]
        System.IAsyncResult BeginCareOutcomeGet(string token, long careOutcomeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CareOutcome EndCareOutcomeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareOutcomeGetByName", ReplyAction="http://tempuri.org/IApplication/CareOutcomeGetByNameResponse")]
        System.IAsyncResult BeginCareOutcomeGetByName(string token, string careOutcomeName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CareOutcome EndCareOutcomeGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareOutcomeSave", ReplyAction="http://tempuri.org/IApplication/CareOutcomeSaveResponse")]
        System.IAsyncResult BeginCareOutcomeSave(string token, Mercury.Server.Application.CareOutcome careOutcome, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndCareOutcomeSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberCaseCreate", ReplyAction="http://tempuri.org/IApplication/MemberCaseCreateResponse")]
        System.IAsyncResult BeginMemberCaseCreate(string token, long memberId, bool ignoreExisting, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberCaseCreateResponse EndMemberCaseCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberCaseGet", ReplyAction="http://tempuri.org/IApplication/MemberCaseGetResponse")]
        System.IAsyncResult BeginMemberCaseGet(string token, long memberCaseId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberCase EndMemberCaseGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/BenefitPlansAvailable", ReplyAction="http://tempuri.org/IApplication/BenefitPlansAvailableResponse")]
        System.IAsyncResult BeginBenefitPlansAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BenefitPlanCollectionResponse EndBenefitPlansAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/BenefitPlanDictionary", ReplyAction="http://tempuri.org/IApplication/BenefitPlanDictionaryResponse")]
        System.IAsyncResult BeginBenefitPlanDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndBenefitPlanDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/BenefitPlanGet", ReplyAction="http://tempuri.org/IApplication/BenefitPlanGetResponse")]
        System.IAsyncResult BeginBenefitPlanGet(string token, long benefitPlanId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BenefitPlan EndBenefitPlanGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContractsAvailable", ReplyAction="http://tempuri.org/IApplication/ContractsAvailableResponse")]
        System.IAsyncResult BeginContractsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ContractCollectionResponse EndContractsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContractDictionary", ReplyAction="http://tempuri.org/IApplication/ContractDictionaryResponse")]
        System.IAsyncResult BeginContractDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndContractDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContractGet", ReplyAction="http://tempuri.org/IApplication/ContractGetResponse")]
        System.IAsyncResult BeginContractGet(string token, long contractId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Contract EndContractGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoverageLevelsAvailable", ReplyAction="http://tempuri.org/IApplication/CoverageLevelsAvailableResponse")]
        System.IAsyncResult BeginCoverageLevelsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CoverageLevelCollectionResponse EndCoverageLevelsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoverageLevelDictionary", ReplyAction="http://tempuri.org/IApplication/CoverageLevelDictionaryResponse")]
        System.IAsyncResult BeginCoverageLevelDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndCoverageLevelDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoverageLevelGet", ReplyAction="http://tempuri.org/IApplication/CoverageLevelGetResponse")]
        System.IAsyncResult BeginCoverageLevelGet(string token, long coverageLevelId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CoverageLevel EndCoverageLevelGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoverageTypesAvailable", ReplyAction="http://tempuri.org/IApplication/CoverageTypesAvailableResponse")]
        System.IAsyncResult BeginCoverageTypesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CoverageTypeCollectionResponse EndCoverageTypesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoverageTypeDictionary", ReplyAction="http://tempuri.org/IApplication/CoverageTypeDictionaryResponse")]
        System.IAsyncResult BeginCoverageTypeDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndCoverageTypeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoverageTypeGet", ReplyAction="http://tempuri.org/IApplication/CoverageTypeGetResponse")]
        System.IAsyncResult BeginCoverageTypeGet(string token, long coverageTypeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CoverageType EndCoverageTypeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/InsuranceTypesAvailable", ReplyAction="http://tempuri.org/IApplication/InsuranceTypesAvailableResponse")]
        System.IAsyncResult BeginInsuranceTypesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.InsuranceTypeCollectionResponse EndInsuranceTypesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/InsuranceTypeDictionary", ReplyAction="http://tempuri.org/IApplication/InsuranceTypeDictionaryResponse")]
        System.IAsyncResult BeginInsuranceTypeDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndInsuranceTypeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/InsuranceTypeGet", ReplyAction="http://tempuri.org/IApplication/InsuranceTypeGetResponse")]
        System.IAsyncResult BeginInsuranceTypeGet(string token, long insuranceTypeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.InsuranceType EndInsuranceTypeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/InsurersAvailable", ReplyAction="http://tempuri.org/IApplication/InsurersAvailableResponse")]
        System.IAsyncResult BeginInsurersAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.InsurerCollectionResponse EndInsurersAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteGetMostRecentByType", ReplyAction="http://tempuri.org/IApplication/EntityNoteGetMostRecentByTypeResponse")]
        System.IAsyncResult BeginEntityNoteGetMostRecentByType(string token, long entityId, long noteTypeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityNote EndEntityNoteGetMostRecentByType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormsAvailable", ReplyAction="http://tempuri.org/IApplication/FormsAvailableResponse")]
        System.IAsyncResult BeginFormsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SearchResultFormHeaderCollectionResponse EndFormsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormGet", ReplyAction="http://tempuri.org/IApplication/FormGetResponse")]
        System.IAsyncResult BeginFormGet(string token, long formId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Form EndFormGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormGetByName", ReplyAction="http://tempuri.org/IApplication/FormGetByNameResponse")]
        System.IAsyncResult BeginFormGetByName(string token, string formName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Form EndFormGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormGetByEntityFormId", ReplyAction="http://tempuri.org/IApplication/FormGetByEntityFormIdResponse")]
        System.IAsyncResult BeginFormGetByEntityFormId(string token, long entityFormId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Form EndFormGetByEntityFormId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormCompile", ReplyAction="http://tempuri.org/IApplication/FormCompileResponse")]
        System.IAsyncResult BeginFormCompile(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FormCompileMessageCollectionResponse EndFormCompile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormSubmit", ReplyAction="http://tempuri.org/IApplication/FormSubmitResponse")]
        System.IAsyncResult BeginFormSubmit(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FormSubmitResponse EndFormSubmit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormSave", ReplyAction="http://tempuri.org/IApplication/FormSaveResponse")]
        System.IAsyncResult BeginFormSave(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndFormSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_DataBindableProperties", ReplyAction="http://tempuri.org/IApplication/FormControl_DataBindablePropertiesResponse")]
        System.IAsyncResult BeginFormControl_DataBindableProperties(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndFormControl_DataBindableProperties(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_DataBindingContexts", ReplyAction="http://tempuri.org/IApplication/FormControl_DataBindingContextsResponse")]
        System.IAsyncResult BeginFormControl_DataBindingContexts(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndFormControl_DataBindingContexts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_DataBindingAllowed", ReplyAction="http://tempuri.org/IApplication/FormControl_DataBindingAllowedResponse")]
        System.IAsyncResult BeginFormControl_DataBindingAllowed(string token, Mercury.Server.Application.Form form, System.Guid controlId, string bindableProperty, string forDataType, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndFormControl_DataBindingAllowed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_EvaluateDataBinding", ReplyAction="http://tempuri.org/IApplication/FormControl_EvaluateDataBindingResponse")]
        System.IAsyncResult BeginFormControl_EvaluateDataBinding(string token, Mercury.Server.Application.Form form, System.Guid controlId, Mercury.Server.Application.FormControlDataBinding dataBinding, System.AsyncCallback callback, object asyncState);
        
        string EndFormControl_EvaluateDataBinding(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/Form_OnDataSourceChanged", ReplyAction="http://tempuri.org/IApplication/Form_OnDataSourceChangedResponse")]
        System.IAsyncResult BeginForm_OnDataSourceChanged(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Form EndForm_OnDataSourceChanged(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_Events", ReplyAction="http://tempuri.org/IApplication/FormControl_EventsResponse")]
        System.IAsyncResult BeginFormControl_Events(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndFormControl_Events(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_EventHandler_Compile", ReplyAction="http://tempuri.org/IApplication/FormControl_EventHandler_CompileResponse")]
        System.IAsyncResult BeginFormControl_EventHandler_Compile(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FormCompileMessageCollectionResponse EndFormControl_EventHandler_Compile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_RaiseEvent", ReplyAction="http://tempuri.org/IApplication/FormControl_RaiseEventResponse")]
        System.IAsyncResult BeginFormControl_RaiseEvent(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FormControlRaiseEventResponse EndFormControl_RaiseEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControl_ValueChanged", ReplyAction="http://tempuri.org/IApplication/FormControl_ValueChangedResponse")]
        System.IAsyncResult BeginFormControl_ValueChanged(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.FormControlValueChangedResponse EndFormControl_ValueChanged(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/FormControlSelection_ReferenceGetPage", ReplyAction="http://tempuri.org/IApplication/FormControlSelection_ReferenceGetPageResponse")]
        System.IAsyncResult BeginFormControlSelection_ReferenceGetPage(string token, Mercury.Server.Application.Form form, System.Guid controlId, string text, int initialRow, int pageSize, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndFormControlSelection_ReferenceGetPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareLevelsAvailable", ReplyAction="http://tempuri.org/IApplication/CareLevelsAvailableResponse")]
        System.IAsyncResult BeginCareLevelsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CareLevelCollectionResponse EndCareLevelsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareLevelGet", ReplyAction="http://tempuri.org/IApplication/CareLevelGetResponse")]
        System.IAsyncResult BeginCareLevelGet(string token, long careLevelId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CareLevel EndCareLevelGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CareLevelSave", ReplyAction="http://tempuri.org/IApplication/CareLevelSaveResponse")]
        System.IAsyncResult BeginCareLevelSave(string token, Mercury.Server.Application.CareLevel careLevel, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndCareLevelSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CarePlansAvailable", ReplyAction="http://tempuri.org/IApplication/CarePlansAvailableResponse")]
        System.IAsyncResult BeginCarePlansAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CarePlanCollectionResponse EndCarePlansAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CarePlanGet", ReplyAction="http://tempuri.org/IApplication/CarePlanGetResponse")]
        System.IAsyncResult BeginCarePlanGet(string token, long carePlanId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CarePlan EndCarePlanGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CarePlanSave", ReplyAction="http://tempuri.org/IApplication/CarePlanSaveResponse")]
        System.IAsyncResult BeginCarePlanSave(string token, Mercury.Server.Application.CarePlan carePlan, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndCarePlanSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProblemStatementsAvailable", ReplyAction="http://tempuri.org/IApplication/ProblemStatementsAvailableResponse")]
        System.IAsyncResult BeginProblemStatementsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ProblemStatementCollectionResponse EndProblemStatementsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityAddressSave", ReplyAction="http://tempuri.org/IApplication/EntityAddressSaveResponse")]
        System.IAsyncResult BeginEntityAddressSave(string token, Mercury.Server.Application.EntityAddress entityAddress, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEntityAddressSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityAddressTerminate", ReplyAction="http://tempuri.org/IApplication/EntityAddressTerminateResponse")]
        System.IAsyncResult BeginEntityAddressTerminate(string token, Mercury.Server.Application.EntityAddress entityAddress, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEntityAddressTerminate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactGet", ReplyAction="http://tempuri.org/IApplication/EntityContactGetResponse")]
        System.IAsyncResult BeginEntityContactGet(string token, long entityContactId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityContact EndEntityContactGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactsGetCount", ReplyAction="http://tempuri.org/IApplication/EntityContactsGetCountResponse")]
        System.IAsyncResult BeginEntityContactsGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        long EndEntityContactsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactsGetByPage", ReplyAction="http://tempuri.org/IApplication/EntityContactsGetByPageResponse")]
        System.IAsyncResult BeginEntityContactsGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityContactCollectionResponse EndEntityContactsGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactSave", ReplyAction="http://tempuri.org/IApplication/EntityContactSaveResponse")]
        System.IAsyncResult BeginEntityContactSave(string token, Mercury.Server.Application.EntityContact entityContact, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEntityContactSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactInformationGet", ReplyAction="http://tempuri.org/IApplication/EntityContactInformationGetResponse")]
        System.IAsyncResult BeginEntityContactInformationGet(string token, long entityContactInformationId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityContactInformation EndEntityContactInformationGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactInformationGetByTypeDate", ReplyAction="http://tempuri.org/IApplication/EntityContactInformationGetByTypeDateResponse")]
        System.IAsyncResult BeginEntityContactInformationGetByTypeDate(string token, long entityId, Mercury.Server.Application.EntityContactType contactType, System.DateTime forDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityContactInformation EndEntityContactInformationGetByTypeDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactInformationsGet", ReplyAction="http://tempuri.org/IApplication/EntityContactInformationsGetResponse")]
        System.IAsyncResult BeginEntityContactInformationsGet(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityContactInformationCollectionResponse EndEntityContactInformationsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactInformationSave", ReplyAction="http://tempuri.org/IApplication/EntityContactInformationSaveResponse")]
        System.IAsyncResult BeginEntityContactInformationSave(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEntityContactInformationSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityContactInformationTerminate", ReplyAction="http://tempuri.org/IApplication/EntityContactInformationTerminateResponse")]
        System.IAsyncResult BeginEntityContactInformationTerminate(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEntityContactInformationTerminate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityCorrespondenceGet", ReplyAction="http://tempuri.org/IApplication/EntityCorrespondenceGetResponse")]
        System.IAsyncResult BeginEntityCorrespondenceGet(string token, long entityCorrespondenceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityCorrespondence EndEntityCorrespondenceGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityCorrespondenceImageGet", ReplyAction="http://tempuri.org/IApplication/EntityCorrespondenceImageGetResponse")]
        System.IAsyncResult BeginEntityCorrespondenceImageGet(string token, long entityCorrespondenceId, bool render, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ImageResponse EndEntityCorrespondenceImageGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityCorrespondenceSave", ReplyAction="http://tempuri.org/IApplication/EntityCorrespondenceSaveResponse")]
        System.IAsyncResult BeginEntityCorrespondenceSave(string token, Mercury.Server.Application.EntityCorrespondence entityCorrespondence, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEntityCorrespondenceSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityDocumentsGetCount", ReplyAction="http://tempuri.org/IApplication/EntityDocumentsGetCountResponse")]
        System.IAsyncResult BeginEntityDocumentsGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        long EndEntityDocumentsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityDocumentsGetByPage", ReplyAction="http://tempuri.org/IApplication/EntityDocumentsGetByPageResponse")]
        System.IAsyncResult BeginEntityDocumentsGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityDocumentCollectionResponse EndEntityDocumentsGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteGet", ReplyAction="http://tempuri.org/IApplication/EntityNoteGetResponse")]
        System.IAsyncResult BeginEntityNoteGet(string token, long entityNoteId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityNote EndEntityNoteGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteSave", ReplyAction="http://tempuri.org/IApplication/EntityNoteSaveResponse")]
        System.IAsyncResult BeginEntityNoteSave(string token, Mercury.Server.Application.EntityNote entityNote, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEntityNoteSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteTerminate", ReplyAction="http://tempuri.org/IApplication/EntityNoteTerminateResponse")]
        System.IAsyncResult BeginEntityNoteTerminate(string token, Mercury.Server.Application.EntityNote entityNote, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEntityNoteTerminate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteContentsGet", ReplyAction="http://tempuri.org/IApplication/EntityNoteContentsGetResponse")]
        System.IAsyncResult BeginEntityNoteContentsGet(string token, long entityNoteId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityNoteContentCollectionResponse EndEntityNoteContentsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteContentAppend", ReplyAction="http://tempuri.org/IApplication/EntityNoteContentAppendResponse")]
        System.IAsyncResult BeginEntityNoteContentAppend(string token, Mercury.Server.Application.EntityNote entityNote, string content, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEntityNoteContentAppend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNotesGetCount", ReplyAction="http://tempuri.org/IApplication/EntityNotesGetCountResponse")]
        System.IAsyncResult BeginEntityNotesGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        long EndEntityNotesGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNotesGetByPage", ReplyAction="http://tempuri.org/IApplication/EntityNotesGetByPageResponse")]
        System.IAsyncResult BeginEntityNotesGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityNoteCollectionResponse EndEntityNotesGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteGetMostRecentByImportance", ReplyAction="http://tempuri.org/IApplication/EntityNoteGetMostRecentByImportanceResponse")]
        System.IAsyncResult BeginEntityNoteGetMostRecentByImportance(string token, long entityId, Mercury.Server.Application.NoteImportance importance, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityNote EndEntityNoteGetMostRecentByImportance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityNoteGetMostRecentByAllImportances", ReplyAction="http://tempuri.org/IApplication/EntityNoteGetMostRecentByAllImportancesResponse")]
        System.IAsyncResult BeginEntityNoteGetMostRecentByAllImportances(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityNoteCollectionResponse EndEntityNoteGetMostRecentByAllImportances(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/RevenueCodeDictionary", ReplyAction="http://tempuri.org/IApplication/RevenueCodeDictionaryResponse")]
        System.IAsyncResult BeginRevenueCodeDictionary(string token, string revenueCodePrefix, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndRevenueCodeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/BillTypeDictionary", ReplyAction="http://tempuri.org/IApplication/BillTypeDictionaryResponse")]
        System.IAsyncResult BeginBillTypeDictionary(string token, string billTypePrefix, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndBillTypeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/Icd9ProcedureCodeDictionary", ReplyAction="http://tempuri.org/IApplication/Icd9ProcedureCodeDictionaryResponse")]
        System.IAsyncResult BeginIcd9ProcedureCodeDictionary(string token, string icd9Icd9ProcedureCodePrefix, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndIcd9ProcedureCodeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ActionsAvailable", ReplyAction="http://tempuri.org/IApplication/ActionsAvailableResponse")]
        System.IAsyncResult BeginActionsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ActionCollectionResponse EndActionsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizationTypesAvailable", ReplyAction="http://tempuri.org/IApplication/AuthorizationTypesAvailableResponse")]
        System.IAsyncResult BeginAuthorizationTypesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuthorizationTypeCollectionResponse EndAuthorizationTypesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizationTypeGet", ReplyAction="http://tempuri.org/IApplication/AuthorizationTypeGetResponse")]
        System.IAsyncResult BeginAuthorizationTypeGet(string token, long authorizationTypeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuthorizationType EndAuthorizationTypeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberAuthorizationsGetCount", ReplyAction="http://tempuri.org/IApplication/MemberAuthorizationsGetCountResponse")]
        System.IAsyncResult BeginMemberAuthorizationsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        long EndMemberAuthorizationsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberAuthorizationsGetByPage", ReplyAction="http://tempuri.org/IApplication/MemberAuthorizationsGetByPageResponse")]
        System.IAsyncResult BeginMemberAuthorizationsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuthorizationCollectionResponse EndMemberAuthorizationsGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizationLineGetByAuthorization", ReplyAction="http://tempuri.org/IApplication/AuthorizationLineGetByAuthorizationResponse")]
        System.IAsyncResult BeginAuthorizationLineGetByAuthorization(string token, long authorizationId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuthorizationLineCollectionResponse EndAuthorizationLineGetByAuthorization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizedServicesAvailable", ReplyAction="http://tempuri.org/IApplication/AuthorizedServicesAvailableResponse")]
        System.IAsyncResult BeginAuthorizedServicesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuthorizedServiceCollectionResponse EndAuthorizedServicesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizedServiceGet", ReplyAction="http://tempuri.org/IApplication/AuthorizedServiceGetResponse")]
        System.IAsyncResult BeginAuthorizedServiceGet(string token, long metricId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuthorizedService EndAuthorizedServiceGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizedServiceSave", ReplyAction="http://tempuri.org/IApplication/AuthorizedServiceSaveResponse")]
        System.IAsyncResult BeginAuthorizedServiceSave(string token, Mercury.Server.Application.AuthorizedService metric, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndAuthorizedServiceSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/AuthorizedServicePreview", ReplyAction="http://tempuri.org/IApplication/AuthorizedServicePreviewResponse")]
        System.IAsyncResult BeginAuthorizedServicePreview(string token, Mercury.Server.Application.AuthorizedService authorizedService, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse EndAuthorizedServicePreview(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberAuthorizedServicesGetCount", ReplyAction="http://tempuri.org/IApplication/MemberAuthorizedServicesGetCountResponse")]
        System.IAsyncResult BeginMemberAuthorizedServicesGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState);
        
        long EndMemberAuthorizedServicesGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberAuthorizedServicesGetByPage", ReplyAction="http://tempuri.org/IApplication/MemberAuthorizedServicesGetByPageResponse")]
        System.IAsyncResult BeginMemberAuthorizedServicesGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse EndMemberAuthorizedServicesGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberAuthorizedServiceDetailsGet", ReplyAction="http://tempuri.org/IApplication/MemberAuthorizedServiceDetailsGetResponse")]
        System.IAsyncResult BeginMemberAuthorizedServiceDetailsGet(string token, long memberAuthorizedServiceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse EndMemberAuthorizedServiceDetailsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberClaimsGetCount", ReplyAction="http://tempuri.org/IApplication/MemberClaimsGetCountResponse")]
        System.IAsyncResult BeginMemberClaimsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        long EndMemberClaimsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberClaimsGetByPage", ReplyAction="http://tempuri.org/IApplication/MemberClaimsGetByPageResponse")]
        System.IAsyncResult BeginMemberClaimsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ClaimCollectionResponse EndMemberClaimsGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ClaimLinesGet", ReplyAction="http://tempuri.org/IApplication/ClaimLinesGetResponse")]
        System.IAsyncResult BeginClaimLinesGet(string token, long claimId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ClaimLineCollectionResponse EndClaimLinesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberPharmacyClaimsGetCount", ReplyAction="http://tempuri.org/IApplication/MemberPharmacyClaimsGetCountResponse")]
        System.IAsyncResult BeginMemberPharmacyClaimsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState);
        
        long EndMemberPharmacyClaimsGetCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/MemberPharmacyClaimsGetByPage", ReplyAction="http://tempuri.org/IApplication/MemberPharmacyClaimsGetByPageResponse")]
        System.IAsyncResult BeginMemberPharmacyClaimsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PharmacyClaimCollectionResponse EndMemberPharmacyClaimsGetByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityGet", ReplyAction="http://tempuri.org/IApplication/EntityGetResponse")]
        System.IAsyncResult BeginEntityGet(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Entity EndEntityGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityAddressGet", ReplyAction="http://tempuri.org/IApplication/EntityAddressGetResponse")]
        System.IAsyncResult BeginEntityAddressGet(string token, long entityAddressId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityAddress EndEntityAddressGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityAddressGetByTypeDate", ReplyAction="http://tempuri.org/IApplication/EntityAddressGetByTypeDateResponse")]
        System.IAsyncResult BeginEntityAddressGetByTypeDate(string token, long entityId, Mercury.Server.Application.EntityAddressType addressType, System.DateTime forDate, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityAddress EndEntityAddressGetByTypeDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EntityAddressesGet", ReplyAction="http://tempuri.org/IApplication/EntityAddressesGetResponse")]
        System.IAsyncResult BeginEntityAddressesGet(string token, long entityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EntityAddressCollectionResponse EndEntityAddressesGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContactRegardingGet", ReplyAction="http://tempuri.org/IApplication/ContactRegardingGetResponse")]
        System.IAsyncResult BeginContactRegardingGet(string token, long contactRegardingId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ContactRegarding EndContactRegardingGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContactRegardingGetByName", ReplyAction="http://tempuri.org/IApplication/ContactRegardingGetByNameResponse")]
        System.IAsyncResult BeginContactRegardingGetByName(string token, string contactRegardingName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ContactRegarding EndContactRegardingGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContactRegardingSave", ReplyAction="http://tempuri.org/IApplication/ContactRegardingSaveResponse")]
        System.IAsyncResult BeginContactRegardingSave(string token, Mercury.Server.Application.ContactRegarding contactRegarding, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndContactRegardingSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CorrespondencesAvailable", ReplyAction="http://tempuri.org/IApplication/CorrespondencesAvailableResponse")]
        System.IAsyncResult BeginCorrespondencesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CorrespondenceCollectionResponse EndCorrespondencesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CorrespondenceDictionary", ReplyAction="http://tempuri.org/IApplication/CorrespondenceDictionaryResponse")]
        System.IAsyncResult BeginCorrespondenceDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndCorrespondenceDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CorrespondenceGet", ReplyAction="http://tempuri.org/IApplication/CorrespondenceGetResponse")]
        System.IAsyncResult BeginCorrespondenceGet(string token, long correspondenceId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Correspondence EndCorrespondenceGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CorrespondenceGetByName", ReplyAction="http://tempuri.org/IApplication/CorrespondenceGetByNameResponse")]
        System.IAsyncResult BeginCorrespondenceGetByName(string token, string correspondenceName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Correspondence EndCorrespondenceGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CorrespondenceSave", ReplyAction="http://tempuri.org/IApplication/CorrespondenceSaveResponse")]
        System.IAsyncResult BeginCorrespondenceSave(string token, Mercury.Server.Application.Correspondence correspondence, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndCorrespondenceSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CorrespondenceContentGet", ReplyAction="http://tempuri.org/IApplication/CorrespondenceContentGetResponse")]
        System.IAsyncResult BeginCorrespondenceContentGet(string token, long correspondenceContentId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CorrespondenceContent EndCorrespondenceContentGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/NoteTypesAvailable", ReplyAction="http://tempuri.org/IApplication/NoteTypesAvailableResponse")]
        System.IAsyncResult BeginNoteTypesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.NoteTypeCollectionResponse EndNoteTypesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/NoteTypeDictionary", ReplyAction="http://tempuri.org/IApplication/NoteTypeDictionaryResponse")]
        System.IAsyncResult BeginNoteTypeDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndNoteTypeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/NoteTypeGet", ReplyAction="http://tempuri.org/IApplication/NoteTypeGetResponse")]
        System.IAsyncResult BeginNoteTypeGet(string token, long noteTypeId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.NoteType EndNoteTypeGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/NoteTypeGetByName", ReplyAction="http://tempuri.org/IApplication/NoteTypeGetByNameResponse")]
        System.IAsyncResult BeginNoteTypeGetByName(string token, string noteTypeName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.NoteType EndNoteTypeGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/NoteTypeSave", ReplyAction="http://tempuri.org/IApplication/NoteTypeSaveResponse")]
        System.IAsyncResult BeginNoteTypeSave(string token, Mercury.Server.Application.NoteType noteType, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndNoteTypeSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/StateReference", ReplyAction="http://tempuri.org/IApplication/StateReferenceResponse")]
        System.IAsyncResult BeginStateReference(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndStateReference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/StateReferenceByZipCode", ReplyAction="http://tempuri.org/IApplication/StateReferenceByZipCodeResponse")]
        System.IAsyncResult BeginStateReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState);
        
        string EndStateReferenceByZipCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CityReferenceByState", ReplyAction="http://tempuri.org/IApplication/CityReferenceByStateResponse")]
        System.IAsyncResult BeginCityReferenceByState(string token, string state, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CityStateZipCodeViewCollectionResponse EndCityReferenceByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CityStateReferenceByZipCode", ReplyAction="http://tempuri.org/IApplication/CityStateReferenceByZipCodeResponse")]
        System.IAsyncResult BeginCityStateReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.CityStateZipCodeView EndCityStateReferenceByZipCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CityReferenceByZipCode", ReplyAction="http://tempuri.org/IApplication/CityReferenceByZipCodeResponse")]
        System.IAsyncResult BeginCityReferenceByZipCode(string token, string ZipCode, System.AsyncCallback callback, object asyncState);
        
        string EndCityReferenceByZipCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CityReferenceByStateCityName", ReplyAction="http://tempuri.org/IApplication/CityReferenceByStateCityNameResponse")]
        System.IAsyncResult BeginCityReferenceByStateCityName(string token, string state, string cityName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndCityReferenceByStateCityName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CountyReferenceByState", ReplyAction="http://tempuri.org/IApplication/CountyReferenceByStateResponse")]
        System.IAsyncResult BeginCountyReferenceByState(string token, string state, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndCountyReferenceByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CountyReferenceByZipCode", ReplyAction="http://tempuri.org/IApplication/CountyReferenceByZipCodeResponse")]
        System.IAsyncResult BeginCountyReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState);
        
        string EndCountyReferenceByZipCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/DiagnosisDictionary", ReplyAction="http://tempuri.org/IApplication/DiagnosisDictionaryResponse")]
        System.IAsyncResult BeginDiagnosisDictionary(string token, string diagnosisPrefix, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndDiagnosisDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/DiagnosisDescription", ReplyAction="http://tempuri.org/IApplication/DiagnosisDescriptionResponse")]
        System.IAsyncResult BeginDiagnosisDescription(string token, string diagnosisCode, System.AsyncCallback callback, object asyncState);
        
        string EndDiagnosisDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ProcedureCodeDictionary", ReplyAction="http://tempuri.org/IApplication/ProcedureCodeDictionaryResponse")]
        System.IAsyncResult BeginProcedureCodeDictionary(string token, string procedureCodePrefix, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndProcedureCodeDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentSave", ReplyAction="http://tempuri.org/IApplication/EnvironmentSaveResponse")]
        System.IAsyncResult BeginEnvironmentSave(string token, Mercury.Server.Application.Environment environment, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEnvironmentSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentDelete", ReplyAction="http://tempuri.org/IApplication/EnvironmentDeleteResponse")]
        System.IAsyncResult BeginEnvironmentDelete(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEnvironmentDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentList", ReplyAction="http://tempuri.org/IApplication/EnvironmentListResponse")]
        System.IAsyncResult BeginEnvironmentList(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndEnvironmentList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentDictionary", ReplyAction="http://tempuri.org/IApplication/EnvironmentDictionaryResponse")]
        System.IAsyncResult BeginEnvironmentDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndEnvironmentDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentsAvailable", ReplyAction="http://tempuri.org/IApplication/EnvironmentsAvailableResponse")]
        System.IAsyncResult BeginEnvironmentsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EnvironmentCollectionResponse EndEnvironmentsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/HasEnvironmentPermissionByEnvironment", ReplyAction="http://tempuri.org/IApplication/HasEnvironmentPermissionByEnvironmentResponse")]
        System.IAsyncResult BeginHasEnvironmentPermissionByEnvironment(string token, string environmentName, string permissionName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndHasEnvironmentPermissionByEnvironment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentPermissionList", ReplyAction="http://tempuri.org/IApplication/EnvironmentPermissionListResponse")]
        System.IAsyncResult BeginEnvironmentPermissionList(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndEnvironmentPermissionList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentPermissionsAvailable", ReplyAction="http://tempuri.org/IApplication/EnvironmentPermissionsAvailableResponse")]
        System.IAsyncResult BeginEnvironmentPermissionsAvailable(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PermissionCollectionResponse EndEnvironmentPermissionsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleList", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleListResponse")]
        System.IAsyncResult BeginEnvironmentRoleList(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndEnvironmentRoleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleDictionary", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleDictionaryResponse")]
        System.IAsyncResult BeginEnvironmentRoleDictionary(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndEnvironmentRoleDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRolesAvailable", ReplyAction="http://tempuri.org/IApplication/EnvironmentRolesAvailableResponse")]
        System.IAsyncResult BeginEnvironmentRolesAvailable(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.RoleCollectionResponse EndEnvironmentRolesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleGetPermissions", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleGetPermissionsResponse")]
        System.IAsyncResult BeginEnvironmentRoleGetPermissions(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.RolePermissionCollectionResponse EndEnvironmentRoleGetPermissions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleGetMembership", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleGetMembershipResponse")]
        System.IAsyncResult BeginEnvironmentRoleGetMembership(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.RoleMembershipCollectionResponse EndEnvironmentRoleGetMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleGetByEnvironment", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleGetByEnvironmentResponse")]
        System.IAsyncResult BeginEnvironmentRoleGetByEnvironment(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EnvironmentRole EndEnvironmentRoleGetByEnvironment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleSaveByEnvironment", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleSaveByEnvironmentResponse")]
        System.IAsyncResult BeginEnvironmentRoleSaveByEnvironment(string token, string environmentName, Mercury.Server.Application.EnvironmentRole environmentRole, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ObjectSaveResponse EndEnvironmentRoleSaveByEnvironment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleSetMembership", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleSetMembershipResponse")]
        System.IAsyncResult BeginEnvironmentRoleSetMembership(string token, string environmentName, string roleName, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> roleMembership, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEnvironmentRoleSetMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentRoleSetPermission", ReplyAction="http://tempuri.org/IApplication/EnvironmentRoleSetPermissionResponse")]
        System.IAsyncResult BeginEnvironmentRoleSetPermission(string token, string environmentName, string roleName, long permissionId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndEnvironmentRoleSetPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoreObjectDictionary", ReplyAction="http://tempuri.org/IApplication/CoreObjectDictionaryResponse")]
        System.IAsyncResult BeginCoreObjectDictionary(string token, string objectType, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndCoreObjectDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoreObject_Validate", ReplyAction="http://tempuri.org/IApplication/CoreObject_ValidateResponse")]
        System.IAsyncResult BeginCoreObject_Validate(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryStringResponse EndCoreObject_Validate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoreObject_DataBindingContexts", ReplyAction="http://tempuri.org/IApplication/CoreObject_DataBindingContextsResponse")]
        System.IAsyncResult BeginCoreObject_DataBindingContexts(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryStringResponse EndCoreObject_DataBindingContexts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoreObject_EvaluateDataBinding", ReplyAction="http://tempuri.org/IApplication/CoreObject_EvaluateDataBindingResponse")]
        System.IAsyncResult BeginCoreObject_EvaluateDataBinding(string token, Mercury.Server.Application.CoreObject coreObject, string bindingContext, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringResponse EndCoreObject_EvaluateDataBinding(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoreObject_XmlSerialize", ReplyAction="http://tempuri.org/IApplication/CoreObject_XmlSerializeResponse")]
        System.IAsyncResult BeginCoreObject_XmlSerialize(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringResponse EndCoreObject_XmlSerialize(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/CoreObject_XmlImport", ReplyAction="http://tempuri.org/IApplication/CoreObject_XmlImportResponse")]
        System.IAsyncResult BeginCoreObject_XmlImport(string token, string serializedXml, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ImportExportResponse EndCoreObject_XmlImport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContactRegardingsAvailable", ReplyAction="http://tempuri.org/IApplication/ContactRegardingsAvailableResponse")]
        System.IAsyncResult BeginContactRegardingsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.ContactRegardingCollectionResponse EndContactRegardingsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ContactRegardingDictionary", ReplyAction="http://tempuri.org/IApplication/ContactRegardingDictionaryResponse")]
        System.IAsyncResult BeginContactRegardingDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndContactRegardingDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/VersionServer", ReplyAction="http://tempuri.org/IApplication/VersionServerResponse")]
        System.IAsyncResult BeginVersionServer(string token, System.AsyncCallback callback, object asyncState);
        
        string EndVersionServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SessionGet", ReplyAction="http://tempuri.org/IApplication/SessionGetResponse")]
        System.IAsyncResult BeginSessionGet(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Session EndSessionGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/ActiveSessionsAvailable", ReplyAction="http://tempuri.org/IApplication/ActiveSessionsAvailableResponse")]
        System.IAsyncResult BeginActiveSessionsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.AuditAuthenticationCollectionResponse EndActiveSessionsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnterprisePermissionList", ReplyAction="http://tempuri.org/IApplication/EnterprisePermissionListResponse")]
        System.IAsyncResult BeginEnterprisePermissionList(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.StringListResponse EndEnterprisePermissionList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnterprisePermissionDictionary", ReplyAction="http://tempuri.org/IApplication/EnterprisePermissionDictionaryResponse")]
        System.IAsyncResult BeginEnterprisePermissionDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndEnterprisePermissionDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnterprisePermissionsAvailable", ReplyAction="http://tempuri.org/IApplication/EnterprisePermissionsAvailableResponse")]
        System.IAsyncResult BeginEnterprisePermissionsAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.PermissionCollectionResponse EndEnterprisePermissionsAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityGroupEnterprisePermissionsGet", ReplyAction="http://tempuri.org/IApplication/SecurityGroupEnterprisePermissionsGetResponse")]
        System.IAsyncResult BeginSecurityGroupEnterprisePermissionsGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SecurityGroupPermissionCollectionResponse EndSecurityGroupEnterprisePermissionsGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityGroupEnterprisePermissionSave", ReplyAction="http://tempuri.org/IApplication/SecurityGroupEnterprisePermissionSaveResponse")]
        System.IAsyncResult BeginSecurityGroupEnterprisePermissionSave(string token, long securityAuthorityId, string securityGroupId, long permissionId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndSecurityGroupEnterprisePermissionSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthoritiesAvailable", ReplyAction="http://tempuri.org/IApplication/SecurityAuthoritiesAvailableResponse")]
        System.IAsyncResult BeginSecurityAuthoritiesAvailable(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SecurityAuthorityCollectionResponse EndSecurityAuthoritiesAvailable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthorityDictionary", ReplyAction="http://tempuri.org/IApplication/SecurityAuthorityDictionaryResponse")]
        System.IAsyncResult BeginSecurityAuthorityDictionary(string token, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryResponse EndSecurityAuthorityDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthorityGroupGetMembership", ReplyAction="http://tempuri.org/IApplication/SecurityAuthorityGroupGetMembershipResponse")]
        System.IAsyncResult BeginSecurityAuthorityGroupGetMembership(string token, long securityAuthorityId, string securityGroupId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DirectoryEntryCollectionResponse EndSecurityAuthorityGroupGetMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthorityGetByName", ReplyAction="http://tempuri.org/IApplication/SecurityAuthorityGetByNameResponse")]
        System.IAsyncResult BeginSecurityAuthorityGetByName(string token, string securityAuthorityName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SecurityAuthority EndSecurityAuthorityGetByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthorityGet", ReplyAction="http://tempuri.org/IApplication/SecurityAuthorityGetResponse")]
        System.IAsyncResult BeginSecurityAuthorityGet(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SecurityAuthority EndSecurityAuthorityGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthoritySave", ReplyAction="http://tempuri.org/IApplication/SecurityAuthoritySaveResponse")]
        System.IAsyncResult BeginSecurityAuthoritySave(string token, Mercury.Server.Application.SecurityAuthority securityAuthority, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndSecurityAuthoritySave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthorityDelete", ReplyAction="http://tempuri.org/IApplication/SecurityAuthorityDeleteResponse")]
        System.IAsyncResult BeginSecurityAuthorityDelete(string token, string securityAuthorityName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndSecurityAuthorityDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthorityProviderBrowseDirectory", ReplyAction="http://tempuri.org/IApplication/SecurityAuthorityProviderBrowseDirectoryResponse")]
        System.IAsyncResult BeginSecurityAuthorityProviderBrowseDirectory(string token, string securityAuthorityName, string directoryPath, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DirectoryEntryCollectionResponse EndSecurityAuthorityProviderBrowseDirectory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupDictionary", ReplyAction="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupDictionaryResponse")]
        System.IAsyncResult BeginSecurityAuthoritySecurityGroupDictionary(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DictionaryStringResponse EndSecurityAuthoritySecurityGroupDictionary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroups", ReplyAction="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupsResponse")]
        System.IAsyncResult BeginSecurityAuthoritySecurityGroups(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SecurityGroupCollectionResponse EndSecurityAuthoritySecurityGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupGet", ReplyAction="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupGetResponse")]
        System.IAsyncResult BeginSecurityAuthoritySecurityGroupGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.SecurityGroup EndSecurityAuthoritySecurityGroupGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupMembership", ReplyAction="http://tempuri.org/IApplication/SecurityAuthoritySecurityGroupMembershipResponse")]
        System.IAsyncResult BeginSecurityAuthoritySecurityGroupMembership(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.DirectoryEntryCollectionResponse EndSecurityAuthoritySecurityGroupMembership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentAccessGetByEnvironmentName", ReplyAction="http://tempuri.org/IApplication/EnvironmentAccessGetByEnvironmentNameResponse")]
        System.IAsyncResult BeginEnvironmentAccessGetByEnvironmentName(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EnvironmentAccessCollectionResponse EndEnvironmentAccessGetByEnvironmentName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityGroupEnvironmentAccessGet", ReplyAction="http://tempuri.org/IApplication/SecurityGroupEnvironmentAccessGetResponse")]
        System.IAsyncResult BeginSecurityGroupEnvironmentAccessGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.EnvironmentAccessCollectionResponse EndSecurityGroupEnvironmentAccessGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/SecurityGroupEnvironmentAccessSave", ReplyAction="http://tempuri.org/IApplication/SecurityGroupEnvironmentAccessSaveResponse")]
        System.IAsyncResult BeginSecurityGroupEnvironmentAccessSave(string token, long securityAuthorityId, string securityGroupId, long environmentId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.BooleanResponse EndSecurityGroupEnvironmentAccessSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentGet", ReplyAction="http://tempuri.org/IApplication/EnvironmentGetResponse")]
        System.IAsyncResult BeginEnvironmentGet(string token, long environmentId, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Environment EndEnvironmentGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplication/EnvironmentGetByName", ReplyAction="http://tempuri.org/IApplication/EnvironmentGetByNameResponse")]
        System.IAsyncResult BeginEnvironmentGetByName(string token, string environmentName, System.AsyncCallback callback, object asyncState);
        
        Mercury.Server.Application.Environment EndEnvironmentGetByName(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationChannel : Mercury.Server.Application.IApplication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportingServerGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportingServerGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ReportingServer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ReportingServer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportingServerGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportingServerGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ReportingServer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ReportingServer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportingServerSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportingServerSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaxServersAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FaxServersAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FaxServerCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FaxServerCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaxServerDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FaxServerDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaxServerGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FaxServerGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FaxServer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FaxServer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaxServerGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FaxServerGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FaxServer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FaxServer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaxServerSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FaxServerSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintersAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrintersAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PrinterCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PrinterCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintQueuesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrintQueuesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryStringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryStringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrinterDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrinterDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrinterGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrinterGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Printer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Printer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrinterGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrinterGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Printer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Printer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrinterCapabilitiesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrinterCapabilitiesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PrinterCapabilities Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PrinterCapabilities)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrinterSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrinterSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchGlobalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchGlobalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultsGlobalResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultsGlobalResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMemberByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMemberByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultsMemberResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultsMemberResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMemberByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMemberByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultsMemberResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultsMemberResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultsMemberResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultsMemberResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultsProviderResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultsProviderResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchProviderByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchProviderByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultsProviderResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultsProviderResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemSuspendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemSuspendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemSendersGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemSendersGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueItemSenderCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueItemSenderCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemAssignmentHistoryGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemAssignmentHistoryGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemWorkflowStepsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemWorkflowStepsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemsGetCountByViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemsGetCountByViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemsGetByViewPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemsGetByViewPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueItemCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueItemCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkTeamsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkTeamsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkTeamCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkTeamCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkTeamsForSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkTeamsForSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkTeamCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkTeamCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkTeamGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkTeamGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkTeam Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkTeam)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkTeamGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkTeamGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkTeam Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkTeam)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkTeamSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkTeamSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueViewsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueViewsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueViewCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueViewCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueViewDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueViewDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueViewGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueViewGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueViewGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueViewGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueViewSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueViewSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueView_ValidateFieldDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueView_ValidateFieldDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryStringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryStringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueView_WellKnownFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueView_WellKnownFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, bool> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, bool>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueMonitorSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueMonitorSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueSummaryCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueSummaryCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueMonitorAgingByWorkQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueMonitorAgingByWorkQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryKeyCountResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryKeyCountResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueMonitorAgingAvailableByWorkQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueMonitorAgingAvailableByWorkQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryKeyCountResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryKeyCountResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportingServersAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportingServersAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ReportingServerCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ReportingServerCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportingServerDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportingServerDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutingRuleGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoutingRuleGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.RoutingRule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.RoutingRule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutingRuleSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoutingRuleSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkflowCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkflowCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Workflow Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Workflow)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Workflow Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Workflow)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowGetByWorkQueueIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowGetByWorkQueueIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Workflow Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Workflow)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkflowResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkflowResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowContinueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkflowContinueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkflowResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkflowResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkOutcomesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkOutcomesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkOutcomeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkOutcomeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkOutcomeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkOutcomeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkOutcomeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkOutcomeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkOutcome Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkOutcome)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkOutcomeGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkOutcomeGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkOutcome Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkOutcome)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkOutcomeSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkOutcomeSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueuesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueuesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueGetByWorkQueueItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueGetByWorkQueueItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueGetWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueGetWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.GetWorkResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.GetWorkResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueInsertEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueInsertEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.WorkQueueItem Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.WorkQueueItem)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemAssignToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemAssignToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkQueueItemMoveToQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WorkQueueItemMoveToQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Population Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Population)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationServiceEventGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationServiceEventGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationServiceEvent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationServiceEvent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Population_DataBindingContextsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Population_DataBindingContextsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembership Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembership)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipServiceEventsGetByPopulationMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipServiceEventsGetByPopulationMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipServiceEventGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipServiceEventGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipServiceEvent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipServiceEvent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipGetByMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipGetByMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipSummaryByMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipSummaryByMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipServiceEventsByMembershipDataViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipServiceEventsByMembershipDataViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipTriggerEventsByMembershipDataViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipTriggerEventsByMembershipDataViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipGetCountByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipGetCountByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationMembershipGetByMembershipPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationMembershipGetByMembershipPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Provider Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Provider)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderGetByEntityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderGetByEntityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Provider Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Provider)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderEnrollmentsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderEnrollmentsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderEnrollmentCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderEnrollmentCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderEnrollmentGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderEnrollmentGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderEnrollment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderEnrollment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderAffiliationsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderAffiliationsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderAffiliationCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderAffiliationCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderAffiliationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderAffiliationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderAffiliation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderAffiliation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderContractsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderContractsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderContractCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderContractCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderContractGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderContractGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderContract Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderContract)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderServiceLocationsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProviderServiceLocationsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProviderServiceLocationCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProviderServiceLocationCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SponsorGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SponsorGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Sponsor Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Sponsor)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutingRulesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoutingRulesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.RoutingRuleCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.RoutingRuleCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Member Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Member)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberGetByEntityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberGetByEntityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Member Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Member)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberGetDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberGetDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberDemographicsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberDemographicsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberGetDemographicsByEntityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberGetDemographicsByEntityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberDemographicsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberDemographicsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentCoverageGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentCoverageGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentCoverage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentCoverage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentCoveragesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentCoveragesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentPcpGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentPcpGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentPcp Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentPcp)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentPcpsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentPcpsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentTplCobGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentTplCobGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentTplCob Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentTplCob)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberEnrollmentTplCobsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberEnrollmentTplCobsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberRelationshipGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberRelationshipGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberRelationship Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberRelationship)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberRelationshipsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberRelationshipsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberRelationshipCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberRelationshipCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetricsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetricsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MetricCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MetricCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetricGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetricGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Metric Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Metric)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetricSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetricSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberMetricAddManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberMetricAddManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberMetricRemoveManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberMetricRemoveManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberMetricsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberMetricsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberMetricsGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberMetricsGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberMetricCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberMetricCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationTypesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationTypesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationTypeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationTypeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationTypeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationTypeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationTypeSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationTypeSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PopulationsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PopulationsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PopulationHeadersCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PopulationHeadersCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsurerDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsurerDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsurerGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsurerGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Insurer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Insurer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProgramsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProgramsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProgramCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProgramCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProgramDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProgramDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProgramGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProgramGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Program Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Program)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceHeadersGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceHeadersGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceHeadersGetByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceHeadersGetByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Service Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Service)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceGetIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceGetIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSingletonGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSingletonGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ServiceSingleton Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ServiceSingleton)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSingletonSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSingletonSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSingletonDefinitionValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSingletonDefinitionValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSingletonPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSingletonPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSetPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSetPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSetGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSetGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ServiceSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ServiceSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSetDefinitionValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSetDefinitionValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalServiceSetSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MedicalServiceSetSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServiceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberService Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberService)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceAddManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServiceAddManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceRemoveManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServiceRemoveManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServicesGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServicesGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServicesGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServicesGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberServiceCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberServiceCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceDetailSingletonGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServiceDetailSingletonGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceDetailSetGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberServiceDetailSetGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberServiceDetailSetCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberServiceDetailSetCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProblemStatementGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProblemStatementGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProblemStatement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProblemStatement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProblemStatementSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProblemStatementSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareOutcomesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareOutcomesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CareOutcomeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CareOutcomeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareOutcomeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareOutcomeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareOutcomeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareOutcomeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CareOutcome Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CareOutcome)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareOutcomeGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareOutcomeGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CareOutcome Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CareOutcome)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareOutcomeSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareOutcomeSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberCaseCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberCaseCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberCaseCreateResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberCaseCreateResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberCaseGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberCaseGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberCase Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberCase)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BenefitPlansAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BenefitPlansAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BenefitPlanCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BenefitPlanCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BenefitPlanDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BenefitPlanDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BenefitPlanGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BenefitPlanGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BenefitPlan Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BenefitPlan)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ContractCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ContractCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Contract Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Contract)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageLevelsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoverageLevelsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CoverageLevelCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CoverageLevelCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageLevelDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoverageLevelDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageLevelGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoverageLevelGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CoverageLevel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CoverageLevel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageTypesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoverageTypesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CoverageTypeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CoverageTypeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageTypeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoverageTypeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoverageTypeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoverageTypeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CoverageType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CoverageType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuranceTypesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsuranceTypesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.InsuranceTypeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.InsuranceTypeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuranceTypeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsuranceTypeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuranceTypeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsuranceTypeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.InsuranceType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.InsuranceType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsurersAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsurersAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.InsurerCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.InsurerCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteGetMostRecentByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteGetMostRecentByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityNote Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityNote)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SearchResultFormHeaderCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SearchResultFormHeaderCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Form Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Form)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Form Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Form)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormGetByEntityFormIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormGetByEntityFormIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Form Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Form)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormCompileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormCompileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FormCompileMessageCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FormCompileMessageCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormSubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormSubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FormSubmitResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FormSubmitResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_DataBindablePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_DataBindablePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_DataBindingContextsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_DataBindingContextsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_DataBindingAllowedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_DataBindingAllowedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_EvaluateDataBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_EvaluateDataBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Form_OnDataSourceChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Form_OnDataSourceChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Form Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Form)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_EventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_EventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_EventHandler_CompileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_EventHandler_CompileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FormCompileMessageCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FormCompileMessageCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_RaiseEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_RaiseEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FormControlRaiseEventResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FormControlRaiseEventResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControl_ValueChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControl_ValueChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.FormControlValueChangedResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.FormControlValueChangedResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormControlSelection_ReferenceGetPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FormControlSelection_ReferenceGetPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareLevelsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareLevelsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CareLevelCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CareLevelCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareLevelGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareLevelGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CareLevel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CareLevel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CareLevelSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CareLevelSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarePlansAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CarePlansAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CarePlanCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CarePlanCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarePlanGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CarePlanGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CarePlan Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CarePlan)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarePlanSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CarePlanSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProblemStatementsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProblemStatementsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ProblemStatementCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ProblemStatementCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityAddressSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityAddressSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityAddressTerminateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityAddressTerminateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityContact Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityContact)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactsGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactsGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityContactCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityContactCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactInformationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactInformationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityContactInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityContactInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactInformationGetByTypeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactInformationGetByTypeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityContactInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityContactInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactInformationsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactInformationsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityContactInformationCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityContactInformationCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactInformationSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactInformationSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityContactInformationTerminateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityContactInformationTerminateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityCorrespondenceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityCorrespondenceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityCorrespondence Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityCorrespondence)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityCorrespondenceImageGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityCorrespondenceImageGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ImageResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ImageResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityCorrespondenceSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityCorrespondenceSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityDocumentsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityDocumentsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityDocumentsGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityDocumentsGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityDocumentCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityDocumentCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityNote Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityNote)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteTerminateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteTerminateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteContentsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteContentsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityNoteContentCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityNoteContentCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteContentAppendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteContentAppendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNotesGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNotesGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNotesGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNotesGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityNoteCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityNoteCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteGetMostRecentByImportanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteGetMostRecentByImportanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityNote Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityNote)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityNoteGetMostRecentByAllImportancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityNoteGetMostRecentByAllImportancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityNoteCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityNoteCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RevenueCodeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RevenueCodeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BillTypeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BillTypeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Icd9ProcedureCodeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Icd9ProcedureCodeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActionsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActionsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ActionCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ActionCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationTypesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizationTypesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuthorizationTypeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuthorizationTypeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationTypeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizationTypeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuthorizationType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuthorizationType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberAuthorizationsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberAuthorizationsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberAuthorizationsGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberAuthorizationsGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuthorizationCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuthorizationCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationLineGetByAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizationLineGetByAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuthorizationLineCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuthorizationLineCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizedServicesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizedServicesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuthorizedServiceCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuthorizedServiceCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizedServiceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizedServiceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuthorizedService Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuthorizedService)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizedServiceSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizedServiceSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizedServicePreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizedServicePreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberAuthorizedServicesGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberAuthorizedServicesGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberAuthorizedServicesGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberAuthorizedServicesGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberAuthorizedServiceDetailsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberAuthorizedServiceDetailsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberClaimsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberClaimsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberClaimsGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberClaimsGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ClaimCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ClaimCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClaimLinesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClaimLinesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ClaimLineCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ClaimLineCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberPharmacyClaimsGetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberPharmacyClaimsGetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberPharmacyClaimsGetByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MemberPharmacyClaimsGetByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PharmacyClaimCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PharmacyClaimCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Entity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Entity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityAddressGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityAddressGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityAddress Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityAddress)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityAddressGetByTypeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityAddressGetByTypeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityAddress Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityAddress)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityAddressesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityAddressesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EntityAddressCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EntityAddressCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactRegardingGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContactRegardingGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ContactRegarding Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ContactRegarding)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactRegardingGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContactRegardingGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ContactRegarding Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ContactRegarding)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactRegardingSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContactRegardingSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorrespondencesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CorrespondencesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CorrespondenceCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CorrespondenceCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorrespondenceDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CorrespondenceDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorrespondenceGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CorrespondenceGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Correspondence Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Correspondence)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorrespondenceGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CorrespondenceGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Correspondence Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Correspondence)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorrespondenceSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CorrespondenceSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorrespondenceContentGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CorrespondenceContentGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CorrespondenceContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CorrespondenceContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteTypesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NoteTypesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.NoteTypeCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.NoteTypeCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteTypeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NoteTypeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteTypeGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NoteTypeGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.NoteType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.NoteType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteTypeGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NoteTypeGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.NoteType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.NoteType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteTypeSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NoteTypeSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StateReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StateReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StateReferenceByZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StateReferenceByZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CityReferenceByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CityReferenceByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CityStateZipCodeViewCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CityStateZipCodeViewCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CityStateReferenceByZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CityStateReferenceByZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.CityStateZipCodeView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.CityStateZipCodeView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CityReferenceByZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CityReferenceByZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CityReferenceByStateCityNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CityReferenceByStateCityNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountyReferenceByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CountyReferenceByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountyReferenceByZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CountyReferenceByZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiagnosisDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DiagnosisDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiagnosisDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DiagnosisDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcedureCodeDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcedureCodeDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EnvironmentCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EnvironmentCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HasEnvironmentPermissionByEnvironmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HasEnvironmentPermissionByEnvironmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentPermissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentPermissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentPermissionsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentPermissionsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PermissionCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PermissionCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRolesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRolesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.RoleCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.RoleCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleGetPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleGetPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.RolePermissionCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.RolePermissionCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleGetMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleGetMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.RoleMembershipCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.RoleMembershipCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleGetByEnvironmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleGetByEnvironmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EnvironmentRole Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EnvironmentRole)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleSaveByEnvironmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleSaveByEnvironmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ObjectSaveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ObjectSaveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleSetMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleSetMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentRoleSetPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentRoleSetPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreObjectDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoreObjectDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreObject_ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoreObject_ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryStringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryStringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreObject_DataBindingContextsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoreObject_DataBindingContextsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryStringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryStringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreObject_EvaluateDataBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoreObject_EvaluateDataBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreObject_XmlSerializeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoreObject_XmlSerializeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreObject_XmlImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CoreObject_XmlImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ImportExportResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ImportExportResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactRegardingsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContactRegardingsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.ContactRegardingCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.ContactRegardingCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactRegardingDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContactRegardingDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VersionServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VersionServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SessionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Session Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Session)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActiveSessionsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActiveSessionsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.AuditAuthenticationCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.AuditAuthenticationCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnterprisePermissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnterprisePermissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.StringListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.StringListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnterprisePermissionDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnterprisePermissionDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnterprisePermissionsAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnterprisePermissionsAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.PermissionCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.PermissionCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityGroupEnterprisePermissionsGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityGroupEnterprisePermissionsGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SecurityGroupPermissionCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SecurityGroupPermissionCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityGroupEnterprisePermissionSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityGroupEnterprisePermissionSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthoritiesAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthoritiesAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SecurityAuthorityCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SecurityAuthorityCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthorityDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthorityDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthorityGroupGetMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthorityGroupGetMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DirectoryEntryCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DirectoryEntryCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthorityGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthorityGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SecurityAuthority Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SecurityAuthority)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthorityGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthorityGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SecurityAuthority Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SecurityAuthority)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthoritySaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthoritySaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthorityDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthorityDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthorityProviderBrowseDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthorityProviderBrowseDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DirectoryEntryCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DirectoryEntryCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthoritySecurityGroupDictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthoritySecurityGroupDictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DictionaryStringResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DictionaryStringResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthoritySecurityGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthoritySecurityGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SecurityGroupCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SecurityGroupCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthoritySecurityGroupGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthoritySecurityGroupGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.SecurityGroup Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.SecurityGroup)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityAuthoritySecurityGroupMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityAuthoritySecurityGroupMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.DirectoryEntryCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.DirectoryEntryCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentAccessGetByEnvironmentNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentAccessGetByEnvironmentNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EnvironmentAccessCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EnvironmentAccessCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityGroupEnvironmentAccessGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityGroupEnvironmentAccessGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.EnvironmentAccessCollectionResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.EnvironmentAccessCollectionResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityGroupEnvironmentAccessSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SecurityGroupEnvironmentAccessSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.BooleanResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.BooleanResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Environment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Environment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnvironmentGetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnvironmentGetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Mercury.Server.Application.Environment Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Mercury.Server.Application.Environment)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationClient : System.ServiceModel.ClientBase<Mercury.Server.Application.IApplication>, Mercury.Server.Application.IApplication {
        
        private BeginOperationDelegate onBeginReportingServerGetDelegate;
        
        private EndOperationDelegate onEndReportingServerGetDelegate;
        
        private System.Threading.SendOrPostCallback onReportingServerGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportingServerGetByNameDelegate;
        
        private EndOperationDelegate onEndReportingServerGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onReportingServerGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportingServerSaveDelegate;
        
        private EndOperationDelegate onEndReportingServerSaveDelegate;
        
        private System.Threading.SendOrPostCallback onReportingServerSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginFaxServersAvailableDelegate;
        
        private EndOperationDelegate onEndFaxServersAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onFaxServersAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginFaxServerDictionaryDelegate;
        
        private EndOperationDelegate onEndFaxServerDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onFaxServerDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginFaxServerGetDelegate;
        
        private EndOperationDelegate onEndFaxServerGetDelegate;
        
        private System.Threading.SendOrPostCallback onFaxServerGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginFaxServerGetByNameDelegate;
        
        private EndOperationDelegate onEndFaxServerGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onFaxServerGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginFaxServerSaveDelegate;
        
        private EndOperationDelegate onEndFaxServerSaveDelegate;
        
        private System.Threading.SendOrPostCallback onFaxServerSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintersAvailableDelegate;
        
        private EndOperationDelegate onEndPrintersAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onPrintersAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintQueuesAvailableDelegate;
        
        private EndOperationDelegate onEndPrintQueuesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onPrintQueuesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrinterDictionaryDelegate;
        
        private EndOperationDelegate onEndPrinterDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onPrinterDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrinterGetDelegate;
        
        private EndOperationDelegate onEndPrinterGetDelegate;
        
        private System.Threading.SendOrPostCallback onPrinterGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrinterGetByNameDelegate;
        
        private EndOperationDelegate onEndPrinterGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onPrinterGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrinterCapabilitiesGetDelegate;
        
        private EndOperationDelegate onEndPrinterCapabilitiesGetDelegate;
        
        private System.Threading.SendOrPostCallback onPrinterCapabilitiesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrinterSaveDelegate;
        
        private EndOperationDelegate onEndPrinterSaveDelegate;
        
        private System.Threading.SendOrPostCallback onPrinterSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchGlobalDelegate;
        
        private EndOperationDelegate onEndSearchGlobalDelegate;
        
        private System.Threading.SendOrPostCallback onSearchGlobalCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchMemberByNameDelegate;
        
        private EndOperationDelegate onEndSearchMemberByNameDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMemberByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchMemberByIdDelegate;
        
        private EndOperationDelegate onEndSearchMemberByIdDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMemberByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchMemberDelegate;
        
        private EndOperationDelegate onEndSearchMemberDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMemberCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchProviderDelegate;
        
        private EndOperationDelegate onEndSearchProviderDelegate;
        
        private System.Threading.SendOrPostCallback onSearchProviderCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchProviderByNameDelegate;
        
        private EndOperationDelegate onEndSearchProviderByNameDelegate;
        
        private System.Threading.SendOrPostCallback onSearchProviderByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemCloseDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemCloseDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemSuspendDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemSuspendDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemSuspendCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemSendersGetDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemSendersGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemSendersGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemAssignmentHistoryGetDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemAssignmentHistoryGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemAssignmentHistoryGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemWorkflowStepsGetDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemWorkflowStepsGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemWorkflowStepsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemsGetCountDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemsGetCountByViewDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemsGetCountByViewDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemsGetCountByViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemsGetByViewPageDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemsGetByViewPageDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemsGetByViewPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkTeamsAvailableDelegate;
        
        private EndOperationDelegate onEndWorkTeamsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onWorkTeamsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkTeamsForSessionDelegate;
        
        private EndOperationDelegate onEndWorkTeamsForSessionDelegate;
        
        private System.Threading.SendOrPostCallback onWorkTeamsForSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkTeamGetDelegate;
        
        private EndOperationDelegate onEndWorkTeamGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkTeamGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkTeamGetByNameDelegate;
        
        private EndOperationDelegate onEndWorkTeamGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onWorkTeamGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkTeamSaveDelegate;
        
        private EndOperationDelegate onEndWorkTeamSaveDelegate;
        
        private System.Threading.SendOrPostCallback onWorkTeamSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueViewsAvailableDelegate;
        
        private EndOperationDelegate onEndWorkQueueViewsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueViewsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueViewDictionaryDelegate;
        
        private EndOperationDelegate onEndWorkQueueViewDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueViewDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueViewGetDelegate;
        
        private EndOperationDelegate onEndWorkQueueViewGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueViewGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueViewGetByNameDelegate;
        
        private EndOperationDelegate onEndWorkQueueViewGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueViewGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueViewSaveDelegate;
        
        private EndOperationDelegate onEndWorkQueueViewSaveDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueViewSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueView_ValidateFieldDefinitionDelegate;
        
        private EndOperationDelegate onEndWorkQueueView_ValidateFieldDefinitionDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueView_ValidateFieldDefinitionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueView_WellKnownFieldsDelegate;
        
        private EndOperationDelegate onEndWorkQueueView_WellKnownFieldsDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueView_WellKnownFieldsCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueMonitorSummaryDelegate;
        
        private EndOperationDelegate onEndWorkQueueMonitorSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueMonitorSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueMonitorAgingByWorkQueueDelegate;
        
        private EndOperationDelegate onEndWorkQueueMonitorAgingByWorkQueueDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueMonitorAgingByWorkQueueCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueMonitorAgingAvailableByWorkQueueDelegate;
        
        private EndOperationDelegate onEndWorkQueueMonitorAgingAvailableByWorkQueueDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueMonitorAgingAvailableByWorkQueueCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportingServersAvailableDelegate;
        
        private EndOperationDelegate onEndReportingServersAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onReportingServersAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportingServerDictionaryDelegate;
        
        private EndOperationDelegate onEndReportingServerDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onReportingServerDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoutingRuleGetDelegate;
        
        private EndOperationDelegate onEndRoutingRuleGetDelegate;
        
        private System.Threading.SendOrPostCallback onRoutingRuleGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoutingRuleSaveDelegate;
        
        private EndOperationDelegate onEndRoutingRuleSaveDelegate;
        
        private System.Threading.SendOrPostCallback onRoutingRuleSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowsAvailableDelegate;
        
        private EndOperationDelegate onEndWorkflowsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowGetDelegate;
        
        private EndOperationDelegate onEndWorkflowGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowGetByNameDelegate;
        
        private EndOperationDelegate onEndWorkflowGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowGetByWorkQueueIdDelegate;
        
        private EndOperationDelegate onEndWorkflowGetByWorkQueueIdDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowGetByWorkQueueIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowSaveDelegate;
        
        private EndOperationDelegate onEndWorkflowSaveDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowStartDelegate;
        
        private EndOperationDelegate onEndWorkflowStartDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkflowContinueDelegate;
        
        private EndOperationDelegate onEndWorkflowContinueDelegate;
        
        private System.Threading.SendOrPostCallback onWorkflowContinueCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkOutcomesAvailableDelegate;
        
        private EndOperationDelegate onEndWorkOutcomesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onWorkOutcomesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkOutcomeDictionaryDelegate;
        
        private EndOperationDelegate onEndWorkOutcomeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onWorkOutcomeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkOutcomeGetDelegate;
        
        private EndOperationDelegate onEndWorkOutcomeGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkOutcomeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkOutcomeGetByNameDelegate;
        
        private EndOperationDelegate onEndWorkOutcomeGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onWorkOutcomeGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkOutcomeSaveDelegate;
        
        private EndOperationDelegate onEndWorkOutcomeSaveDelegate;
        
        private System.Threading.SendOrPostCallback onWorkOutcomeSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueuesAvailableDelegate;
        
        private EndOperationDelegate onEndWorkQueuesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueuesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueDictionaryDelegate;
        
        private EndOperationDelegate onEndWorkQueueDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueGetDelegate;
        
        private EndOperationDelegate onEndWorkQueueGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueGetByNameDelegate;
        
        private EndOperationDelegate onEndWorkQueueGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueGetByWorkQueueItemDelegate;
        
        private EndOperationDelegate onEndWorkQueueGetByWorkQueueItemDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueGetByWorkQueueItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueSaveDelegate;
        
        private EndOperationDelegate onEndWorkQueueSaveDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueGetWorkDelegate;
        
        private EndOperationDelegate onEndWorkQueueGetWorkDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueGetWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueInsertEntityDelegate;
        
        private EndOperationDelegate onEndWorkQueueInsertEntityDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueInsertEntityCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemGetDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemGetDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemAssignToDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemAssignToDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemAssignToCompletedDelegate;
        
        private BeginOperationDelegate onBeginWorkQueueItemMoveToQueueDelegate;
        
        private EndOperationDelegate onEndWorkQueueItemMoveToQueueDelegate;
        
        private System.Threading.SendOrPostCallback onWorkQueueItemMoveToQueueCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationGetDelegate;
        
        private EndOperationDelegate onEndPopulationGetDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationServiceEventGetDelegate;
        
        private EndOperationDelegate onEndPopulationServiceEventGetDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationServiceEventGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationSaveDelegate;
        
        private EndOperationDelegate onEndPopulationSaveDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationDeleteDelegate;
        
        private EndOperationDelegate onEndPopulationDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulation_DataBindingContextsDelegate;
        
        private EndOperationDelegate onEndPopulation_DataBindingContextsDelegate;
        
        private System.Threading.SendOrPostCallback onPopulation_DataBindingContextsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipGetDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipGetDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipServiceEventsGetByPopulationMembershipDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipServiceEventsGetByPopulationMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipServiceEventsGetByPopulationMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipServiceEventGetDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipServiceEventGetDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipServiceEventGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipGetByMemberDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipGetByMemberDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipGetByMemberCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipSummaryByMemberDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipSummaryByMemberDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipSummaryByMemberCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipServiceEventsByMembershipDataViewDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipServiceEventsByMembershipDataViewDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipServiceEventsByMembershipDataViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipTriggerEventsByMembershipDataViewDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipTriggerEventsByMembershipDataViewDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipTriggerEventsByMembershipDataViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipGetCountByNameDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipGetCountByNameDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipGetCountByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationMembershipGetByMembershipPageDelegate;
        
        private EndOperationDelegate onEndPopulationMembershipGetByMembershipPageDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationMembershipGetByMembershipPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderGetDelegate;
        
        private EndOperationDelegate onEndProviderGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderGetByEntityIdDelegate;
        
        private EndOperationDelegate onEndProviderGetByEntityIdDelegate;
        
        private System.Threading.SendOrPostCallback onProviderGetByEntityIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderEnrollmentsGetDelegate;
        
        private EndOperationDelegate onEndProviderEnrollmentsGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderEnrollmentsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderEnrollmentGetDelegate;
        
        private EndOperationDelegate onEndProviderEnrollmentGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderEnrollmentGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderAffiliationsGetDelegate;
        
        private EndOperationDelegate onEndProviderAffiliationsGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderAffiliationsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderAffiliationGetDelegate;
        
        private EndOperationDelegate onEndProviderAffiliationGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderAffiliationGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderContractsGetDelegate;
        
        private EndOperationDelegate onEndProviderContractsGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderContractsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderContractGetDelegate;
        
        private EndOperationDelegate onEndProviderContractGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderContractGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProviderServiceLocationsGetDelegate;
        
        private EndOperationDelegate onEndProviderServiceLocationsGetDelegate;
        
        private System.Threading.SendOrPostCallback onProviderServiceLocationsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSponsorGetDelegate;
        
        private EndOperationDelegate onEndSponsorGetDelegate;
        
        private System.Threading.SendOrPostCallback onSponsorGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoutingRulesAvailableDelegate;
        
        private EndOperationDelegate onEndRoutingRulesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onRoutingRulesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberGetDelegate;
        
        private EndOperationDelegate onEndMemberGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberGetByEntityIdDelegate;
        
        private EndOperationDelegate onEndMemberGetByEntityIdDelegate;
        
        private System.Threading.SendOrPostCallback onMemberGetByEntityIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberGetDemographicsDelegate;
        
        private EndOperationDelegate onEndMemberGetDemographicsDelegate;
        
        private System.Threading.SendOrPostCallback onMemberGetDemographicsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberGetDemographicsByEntityIdDelegate;
        
        private EndOperationDelegate onEndMemberGetDemographicsByEntityIdDelegate;
        
        private System.Threading.SendOrPostCallback onMemberGetDemographicsByEntityIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentsGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentsGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentCoverageGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentCoverageGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentCoverageGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentCoveragesGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentCoveragesGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentCoveragesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentPcpGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentPcpGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentPcpGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentPcpsGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentPcpsGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentPcpsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentTplCobGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentTplCobGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentTplCobGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberEnrollmentTplCobsGetDelegate;
        
        private EndOperationDelegate onEndMemberEnrollmentTplCobsGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberEnrollmentTplCobsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberRelationshipGetDelegate;
        
        private EndOperationDelegate onEndMemberRelationshipGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberRelationshipGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberRelationshipsGetDelegate;
        
        private EndOperationDelegate onEndMemberRelationshipsGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberRelationshipsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetricsAvailableDelegate;
        
        private EndOperationDelegate onEndMetricsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onMetricsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetricGetDelegate;
        
        private EndOperationDelegate onEndMetricGetDelegate;
        
        private System.Threading.SendOrPostCallback onMetricGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetricSaveDelegate;
        
        private EndOperationDelegate onEndMetricSaveDelegate;
        
        private System.Threading.SendOrPostCallback onMetricSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberMetricAddManualDelegate;
        
        private EndOperationDelegate onEndMemberMetricAddManualDelegate;
        
        private System.Threading.SendOrPostCallback onMemberMetricAddManualCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberMetricRemoveManualDelegate;
        
        private EndOperationDelegate onEndMemberMetricRemoveManualDelegate;
        
        private System.Threading.SendOrPostCallback onMemberMetricRemoveManualCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberMetricsGetCountDelegate;
        
        private EndOperationDelegate onEndMemberMetricsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onMemberMetricsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberMetricsGetByPageDelegate;
        
        private EndOperationDelegate onEndMemberMetricsGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onMemberMetricsGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationTypesAvailableDelegate;
        
        private EndOperationDelegate onEndPopulationTypesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationTypesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationTypeGetDelegate;
        
        private EndOperationDelegate onEndPopulationTypeGetDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationTypeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationTypeSaveDelegate;
        
        private EndOperationDelegate onEndPopulationTypeSaveDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationTypeSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginPopulationsAvailableDelegate;
        
        private EndOperationDelegate onEndPopulationsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onPopulationsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsurerDictionaryDelegate;
        
        private EndOperationDelegate onEndInsurerDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onInsurerDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsurerGetDelegate;
        
        private EndOperationDelegate onEndInsurerGetDelegate;
        
        private System.Threading.SendOrPostCallback onInsurerGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProgramsAvailableDelegate;
        
        private EndOperationDelegate onEndProgramsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onProgramsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginProgramDictionaryDelegate;
        
        private EndOperationDelegate onEndProgramDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onProgramDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginProgramGetDelegate;
        
        private EndOperationDelegate onEndProgramGetDelegate;
        
        private System.Threading.SendOrPostCallback onProgramGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceHeadersGetDelegate;
        
        private EndOperationDelegate onEndMedicalServiceHeadersGetDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceHeadersGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceHeadersGetByTypeDelegate;
        
        private EndOperationDelegate onEndMedicalServiceHeadersGetByTypeDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceHeadersGetByTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceGetDelegate;
        
        private EndOperationDelegate onEndMedicalServiceGetDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceGetIdByNameDelegate;
        
        private EndOperationDelegate onEndMedicalServiceGetIdByNameDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceGetIdByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceDeleteDelegate;
        
        private EndOperationDelegate onEndMedicalServiceDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSingletonGetDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSingletonGetDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSingletonGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSingletonSaveDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSingletonSaveDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSingletonSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSingletonDefinitionValidateDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSingletonDefinitionValidateDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSingletonDefinitionValidateCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSingletonPreviewDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSingletonPreviewDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSingletonPreviewCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSetPreviewDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSetPreviewDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSetPreviewCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSetGetDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSetGetDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSetGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSetDefinitionValidateDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSetDefinitionValidateDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSetDefinitionValidateCompletedDelegate;
        
        private BeginOperationDelegate onBeginMedicalServiceSetSaveDelegate;
        
        private EndOperationDelegate onEndMedicalServiceSetSaveDelegate;
        
        private System.Threading.SendOrPostCallback onMedicalServiceSetSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServiceGetDelegate;
        
        private EndOperationDelegate onEndMemberServiceGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServiceGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServiceAddManualDelegate;
        
        private EndOperationDelegate onEndMemberServiceAddManualDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServiceAddManualCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServiceRemoveManualDelegate;
        
        private EndOperationDelegate onEndMemberServiceRemoveManualDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServiceRemoveManualCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServicesGetCountDelegate;
        
        private EndOperationDelegate onEndMemberServicesGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServicesGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServicesGetByPageDelegate;
        
        private EndOperationDelegate onEndMemberServicesGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServicesGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServiceDetailSingletonGetDelegate;
        
        private EndOperationDelegate onEndMemberServiceDetailSingletonGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServiceDetailSingletonGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberServiceDetailSetGetDelegate;
        
        private EndOperationDelegate onEndMemberServiceDetailSetGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberServiceDetailSetGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProblemStatementGetDelegate;
        
        private EndOperationDelegate onEndProblemStatementGetDelegate;
        
        private System.Threading.SendOrPostCallback onProblemStatementGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginProblemStatementSaveDelegate;
        
        private EndOperationDelegate onEndProblemStatementSaveDelegate;
        
        private System.Threading.SendOrPostCallback onProblemStatementSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareOutcomesAvailableDelegate;
        
        private EndOperationDelegate onEndCareOutcomesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onCareOutcomesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareOutcomeDictionaryDelegate;
        
        private EndOperationDelegate onEndCareOutcomeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onCareOutcomeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareOutcomeGetDelegate;
        
        private EndOperationDelegate onEndCareOutcomeGetDelegate;
        
        private System.Threading.SendOrPostCallback onCareOutcomeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareOutcomeGetByNameDelegate;
        
        private EndOperationDelegate onEndCareOutcomeGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onCareOutcomeGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareOutcomeSaveDelegate;
        
        private EndOperationDelegate onEndCareOutcomeSaveDelegate;
        
        private System.Threading.SendOrPostCallback onCareOutcomeSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberCaseCreateDelegate;
        
        private EndOperationDelegate onEndMemberCaseCreateDelegate;
        
        private System.Threading.SendOrPostCallback onMemberCaseCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberCaseGetDelegate;
        
        private EndOperationDelegate onEndMemberCaseGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberCaseGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginBenefitPlansAvailableDelegate;
        
        private EndOperationDelegate onEndBenefitPlansAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onBenefitPlansAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginBenefitPlanDictionaryDelegate;
        
        private EndOperationDelegate onEndBenefitPlanDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onBenefitPlanDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginBenefitPlanGetDelegate;
        
        private EndOperationDelegate onEndBenefitPlanGetDelegate;
        
        private System.Threading.SendOrPostCallback onBenefitPlanGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractsAvailableDelegate;
        
        private EndOperationDelegate onEndContractsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onContractsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractDictionaryDelegate;
        
        private EndOperationDelegate onEndContractDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onContractDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractGetDelegate;
        
        private EndOperationDelegate onEndContractGetDelegate;
        
        private System.Threading.SendOrPostCallback onContractGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoverageLevelsAvailableDelegate;
        
        private EndOperationDelegate onEndCoverageLevelsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onCoverageLevelsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoverageLevelDictionaryDelegate;
        
        private EndOperationDelegate onEndCoverageLevelDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onCoverageLevelDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoverageLevelGetDelegate;
        
        private EndOperationDelegate onEndCoverageLevelGetDelegate;
        
        private System.Threading.SendOrPostCallback onCoverageLevelGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoverageTypesAvailableDelegate;
        
        private EndOperationDelegate onEndCoverageTypesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onCoverageTypesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoverageTypeDictionaryDelegate;
        
        private EndOperationDelegate onEndCoverageTypeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onCoverageTypeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoverageTypeGetDelegate;
        
        private EndOperationDelegate onEndCoverageTypeGetDelegate;
        
        private System.Threading.SendOrPostCallback onCoverageTypeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsuranceTypesAvailableDelegate;
        
        private EndOperationDelegate onEndInsuranceTypesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onInsuranceTypesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsuranceTypeDictionaryDelegate;
        
        private EndOperationDelegate onEndInsuranceTypeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onInsuranceTypeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsuranceTypeGetDelegate;
        
        private EndOperationDelegate onEndInsuranceTypeGetDelegate;
        
        private System.Threading.SendOrPostCallback onInsuranceTypeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsurersAvailableDelegate;
        
        private EndOperationDelegate onEndInsurersAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onInsurersAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteGetMostRecentByTypeDelegate;
        
        private EndOperationDelegate onEndEntityNoteGetMostRecentByTypeDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteGetMostRecentByTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormsAvailableDelegate;
        
        private EndOperationDelegate onEndFormsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onFormsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormGetDelegate;
        
        private EndOperationDelegate onEndFormGetDelegate;
        
        private System.Threading.SendOrPostCallback onFormGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormGetByNameDelegate;
        
        private EndOperationDelegate onEndFormGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onFormGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormGetByEntityFormIdDelegate;
        
        private EndOperationDelegate onEndFormGetByEntityFormIdDelegate;
        
        private System.Threading.SendOrPostCallback onFormGetByEntityFormIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormCompileDelegate;
        
        private EndOperationDelegate onEndFormCompileDelegate;
        
        private System.Threading.SendOrPostCallback onFormCompileCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormSubmitDelegate;
        
        private EndOperationDelegate onEndFormSubmitDelegate;
        
        private System.Threading.SendOrPostCallback onFormSubmitCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormSaveDelegate;
        
        private EndOperationDelegate onEndFormSaveDelegate;
        
        private System.Threading.SendOrPostCallback onFormSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_DataBindablePropertiesDelegate;
        
        private EndOperationDelegate onEndFormControl_DataBindablePropertiesDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_DataBindablePropertiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_DataBindingContextsDelegate;
        
        private EndOperationDelegate onEndFormControl_DataBindingContextsDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_DataBindingContextsCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_DataBindingAllowedDelegate;
        
        private EndOperationDelegate onEndFormControl_DataBindingAllowedDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_DataBindingAllowedCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_EvaluateDataBindingDelegate;
        
        private EndOperationDelegate onEndFormControl_EvaluateDataBindingDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_EvaluateDataBindingCompletedDelegate;
        
        private BeginOperationDelegate onBeginForm_OnDataSourceChangedDelegate;
        
        private EndOperationDelegate onEndForm_OnDataSourceChangedDelegate;
        
        private System.Threading.SendOrPostCallback onForm_OnDataSourceChangedCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_EventsDelegate;
        
        private EndOperationDelegate onEndFormControl_EventsDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_EventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_EventHandler_CompileDelegate;
        
        private EndOperationDelegate onEndFormControl_EventHandler_CompileDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_EventHandler_CompileCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_RaiseEventDelegate;
        
        private EndOperationDelegate onEndFormControl_RaiseEventDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_RaiseEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControl_ValueChangedDelegate;
        
        private EndOperationDelegate onEndFormControl_ValueChangedDelegate;
        
        private System.Threading.SendOrPostCallback onFormControl_ValueChangedCompletedDelegate;
        
        private BeginOperationDelegate onBeginFormControlSelection_ReferenceGetPageDelegate;
        
        private EndOperationDelegate onEndFormControlSelection_ReferenceGetPageDelegate;
        
        private System.Threading.SendOrPostCallback onFormControlSelection_ReferenceGetPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareLevelsAvailableDelegate;
        
        private EndOperationDelegate onEndCareLevelsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onCareLevelsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareLevelGetDelegate;
        
        private EndOperationDelegate onEndCareLevelGetDelegate;
        
        private System.Threading.SendOrPostCallback onCareLevelGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCareLevelSaveDelegate;
        
        private EndOperationDelegate onEndCareLevelSaveDelegate;
        
        private System.Threading.SendOrPostCallback onCareLevelSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginCarePlansAvailableDelegate;
        
        private EndOperationDelegate onEndCarePlansAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onCarePlansAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginCarePlanGetDelegate;
        
        private EndOperationDelegate onEndCarePlanGetDelegate;
        
        private System.Threading.SendOrPostCallback onCarePlanGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCarePlanSaveDelegate;
        
        private EndOperationDelegate onEndCarePlanSaveDelegate;
        
        private System.Threading.SendOrPostCallback onCarePlanSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginProblemStatementsAvailableDelegate;
        
        private EndOperationDelegate onEndProblemStatementsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onProblemStatementsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityAddressSaveDelegate;
        
        private EndOperationDelegate onEndEntityAddressSaveDelegate;
        
        private System.Threading.SendOrPostCallback onEntityAddressSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityAddressTerminateDelegate;
        
        private EndOperationDelegate onEndEntityAddressTerminateDelegate;
        
        private System.Threading.SendOrPostCallback onEntityAddressTerminateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactGetDelegate;
        
        private EndOperationDelegate onEndEntityContactGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactsGetCountDelegate;
        
        private EndOperationDelegate onEndEntityContactsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactsGetByPageDelegate;
        
        private EndOperationDelegate onEndEntityContactsGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactsGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactSaveDelegate;
        
        private EndOperationDelegate onEndEntityContactSaveDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactInformationGetDelegate;
        
        private EndOperationDelegate onEndEntityContactInformationGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactInformationGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactInformationGetByTypeDateDelegate;
        
        private EndOperationDelegate onEndEntityContactInformationGetByTypeDateDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactInformationGetByTypeDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactInformationsGetDelegate;
        
        private EndOperationDelegate onEndEntityContactInformationsGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactInformationsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactInformationSaveDelegate;
        
        private EndOperationDelegate onEndEntityContactInformationSaveDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactInformationSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityContactInformationTerminateDelegate;
        
        private EndOperationDelegate onEndEntityContactInformationTerminateDelegate;
        
        private System.Threading.SendOrPostCallback onEntityContactInformationTerminateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityCorrespondenceGetDelegate;
        
        private EndOperationDelegate onEndEntityCorrespondenceGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityCorrespondenceGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityCorrespondenceImageGetDelegate;
        
        private EndOperationDelegate onEndEntityCorrespondenceImageGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityCorrespondenceImageGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityCorrespondenceSaveDelegate;
        
        private EndOperationDelegate onEndEntityCorrespondenceSaveDelegate;
        
        private System.Threading.SendOrPostCallback onEntityCorrespondenceSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityDocumentsGetCountDelegate;
        
        private EndOperationDelegate onEndEntityDocumentsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onEntityDocumentsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityDocumentsGetByPageDelegate;
        
        private EndOperationDelegate onEndEntityDocumentsGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onEntityDocumentsGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteGetDelegate;
        
        private EndOperationDelegate onEndEntityNoteGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteSaveDelegate;
        
        private EndOperationDelegate onEndEntityNoteSaveDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteTerminateDelegate;
        
        private EndOperationDelegate onEndEntityNoteTerminateDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteTerminateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteContentsGetDelegate;
        
        private EndOperationDelegate onEndEntityNoteContentsGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteContentsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteContentAppendDelegate;
        
        private EndOperationDelegate onEndEntityNoteContentAppendDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteContentAppendCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNotesGetCountDelegate;
        
        private EndOperationDelegate onEndEntityNotesGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNotesGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNotesGetByPageDelegate;
        
        private EndOperationDelegate onEndEntityNotesGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNotesGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteGetMostRecentByImportanceDelegate;
        
        private EndOperationDelegate onEndEntityNoteGetMostRecentByImportanceDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteGetMostRecentByImportanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityNoteGetMostRecentByAllImportancesDelegate;
        
        private EndOperationDelegate onEndEntityNoteGetMostRecentByAllImportancesDelegate;
        
        private System.Threading.SendOrPostCallback onEntityNoteGetMostRecentByAllImportancesCompletedDelegate;
        
        private BeginOperationDelegate onBeginRevenueCodeDictionaryDelegate;
        
        private EndOperationDelegate onEndRevenueCodeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onRevenueCodeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginBillTypeDictionaryDelegate;
        
        private EndOperationDelegate onEndBillTypeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onBillTypeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginIcd9ProcedureCodeDictionaryDelegate;
        
        private EndOperationDelegate onEndIcd9ProcedureCodeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onIcd9ProcedureCodeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginActionsAvailableDelegate;
        
        private EndOperationDelegate onEndActionsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onActionsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizationTypesAvailableDelegate;
        
        private EndOperationDelegate onEndAuthorizationTypesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizationTypesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizationTypeGetDelegate;
        
        private EndOperationDelegate onEndAuthorizationTypeGetDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizationTypeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberAuthorizationsGetCountDelegate;
        
        private EndOperationDelegate onEndMemberAuthorizationsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onMemberAuthorizationsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberAuthorizationsGetByPageDelegate;
        
        private EndOperationDelegate onEndMemberAuthorizationsGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onMemberAuthorizationsGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizationLineGetByAuthorizationDelegate;
        
        private EndOperationDelegate onEndAuthorizationLineGetByAuthorizationDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizationLineGetByAuthorizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizedServicesAvailableDelegate;
        
        private EndOperationDelegate onEndAuthorizedServicesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizedServicesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizedServiceGetDelegate;
        
        private EndOperationDelegate onEndAuthorizedServiceGetDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizedServiceGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizedServiceSaveDelegate;
        
        private EndOperationDelegate onEndAuthorizedServiceSaveDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizedServiceSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizedServicePreviewDelegate;
        
        private EndOperationDelegate onEndAuthorizedServicePreviewDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizedServicePreviewCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberAuthorizedServicesGetCountDelegate;
        
        private EndOperationDelegate onEndMemberAuthorizedServicesGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onMemberAuthorizedServicesGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberAuthorizedServicesGetByPageDelegate;
        
        private EndOperationDelegate onEndMemberAuthorizedServicesGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onMemberAuthorizedServicesGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberAuthorizedServiceDetailsGetDelegate;
        
        private EndOperationDelegate onEndMemberAuthorizedServiceDetailsGetDelegate;
        
        private System.Threading.SendOrPostCallback onMemberAuthorizedServiceDetailsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberClaimsGetCountDelegate;
        
        private EndOperationDelegate onEndMemberClaimsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onMemberClaimsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberClaimsGetByPageDelegate;
        
        private EndOperationDelegate onEndMemberClaimsGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onMemberClaimsGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginClaimLinesGetDelegate;
        
        private EndOperationDelegate onEndClaimLinesGetDelegate;
        
        private System.Threading.SendOrPostCallback onClaimLinesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberPharmacyClaimsGetCountDelegate;
        
        private EndOperationDelegate onEndMemberPharmacyClaimsGetCountDelegate;
        
        private System.Threading.SendOrPostCallback onMemberPharmacyClaimsGetCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginMemberPharmacyClaimsGetByPageDelegate;
        
        private EndOperationDelegate onEndMemberPharmacyClaimsGetByPageDelegate;
        
        private System.Threading.SendOrPostCallback onMemberPharmacyClaimsGetByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityGetDelegate;
        
        private EndOperationDelegate onEndEntityGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityAddressGetDelegate;
        
        private EndOperationDelegate onEndEntityAddressGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityAddressGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityAddressGetByTypeDateDelegate;
        
        private EndOperationDelegate onEndEntityAddressGetByTypeDateDelegate;
        
        private System.Threading.SendOrPostCallback onEntityAddressGetByTypeDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityAddressesGetDelegate;
        
        private EndOperationDelegate onEndEntityAddressesGetDelegate;
        
        private System.Threading.SendOrPostCallback onEntityAddressesGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginContactRegardingGetDelegate;
        
        private EndOperationDelegate onEndContactRegardingGetDelegate;
        
        private System.Threading.SendOrPostCallback onContactRegardingGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginContactRegardingGetByNameDelegate;
        
        private EndOperationDelegate onEndContactRegardingGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onContactRegardingGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginContactRegardingSaveDelegate;
        
        private EndOperationDelegate onEndContactRegardingSaveDelegate;
        
        private System.Threading.SendOrPostCallback onContactRegardingSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginCorrespondencesAvailableDelegate;
        
        private EndOperationDelegate onEndCorrespondencesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onCorrespondencesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginCorrespondenceDictionaryDelegate;
        
        private EndOperationDelegate onEndCorrespondenceDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onCorrespondenceDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCorrespondenceGetDelegate;
        
        private EndOperationDelegate onEndCorrespondenceGetDelegate;
        
        private System.Threading.SendOrPostCallback onCorrespondenceGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCorrespondenceGetByNameDelegate;
        
        private EndOperationDelegate onEndCorrespondenceGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onCorrespondenceGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCorrespondenceSaveDelegate;
        
        private EndOperationDelegate onEndCorrespondenceSaveDelegate;
        
        private System.Threading.SendOrPostCallback onCorrespondenceSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginCorrespondenceContentGetDelegate;
        
        private EndOperationDelegate onEndCorrespondenceContentGetDelegate;
        
        private System.Threading.SendOrPostCallback onCorrespondenceContentGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginNoteTypesAvailableDelegate;
        
        private EndOperationDelegate onEndNoteTypesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onNoteTypesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginNoteTypeDictionaryDelegate;
        
        private EndOperationDelegate onEndNoteTypeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onNoteTypeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginNoteTypeGetDelegate;
        
        private EndOperationDelegate onEndNoteTypeGetDelegate;
        
        private System.Threading.SendOrPostCallback onNoteTypeGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginNoteTypeGetByNameDelegate;
        
        private EndOperationDelegate onEndNoteTypeGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onNoteTypeGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginNoteTypeSaveDelegate;
        
        private EndOperationDelegate onEndNoteTypeSaveDelegate;
        
        private System.Threading.SendOrPostCallback onNoteTypeSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginStateReferenceDelegate;
        
        private EndOperationDelegate onEndStateReferenceDelegate;
        
        private System.Threading.SendOrPostCallback onStateReferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginStateReferenceByZipCodeDelegate;
        
        private EndOperationDelegate onEndStateReferenceByZipCodeDelegate;
        
        private System.Threading.SendOrPostCallback onStateReferenceByZipCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCityReferenceByStateDelegate;
        
        private EndOperationDelegate onEndCityReferenceByStateDelegate;
        
        private System.Threading.SendOrPostCallback onCityReferenceByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCityStateReferenceByZipCodeDelegate;
        
        private EndOperationDelegate onEndCityStateReferenceByZipCodeDelegate;
        
        private System.Threading.SendOrPostCallback onCityStateReferenceByZipCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCityReferenceByZipCodeDelegate;
        
        private EndOperationDelegate onEndCityReferenceByZipCodeDelegate;
        
        private System.Threading.SendOrPostCallback onCityReferenceByZipCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCityReferenceByStateCityNameDelegate;
        
        private EndOperationDelegate onEndCityReferenceByStateCityNameDelegate;
        
        private System.Threading.SendOrPostCallback onCityReferenceByStateCityNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCountyReferenceByStateDelegate;
        
        private EndOperationDelegate onEndCountyReferenceByStateDelegate;
        
        private System.Threading.SendOrPostCallback onCountyReferenceByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCountyReferenceByZipCodeDelegate;
        
        private EndOperationDelegate onEndCountyReferenceByZipCodeDelegate;
        
        private System.Threading.SendOrPostCallback onCountyReferenceByZipCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDiagnosisDictionaryDelegate;
        
        private EndOperationDelegate onEndDiagnosisDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onDiagnosisDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDiagnosisDescriptionDelegate;
        
        private EndOperationDelegate onEndDiagnosisDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onDiagnosisDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcedureCodeDictionaryDelegate;
        
        private EndOperationDelegate onEndProcedureCodeDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onProcedureCodeDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentSaveDelegate;
        
        private EndOperationDelegate onEndEnvironmentSaveDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentDeleteDelegate;
        
        private EndOperationDelegate onEndEnvironmentDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentListDelegate;
        
        private EndOperationDelegate onEndEnvironmentListDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentDictionaryDelegate;
        
        private EndOperationDelegate onEndEnvironmentDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentsAvailableDelegate;
        
        private EndOperationDelegate onEndEnvironmentsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginHasEnvironmentPermissionByEnvironmentDelegate;
        
        private EndOperationDelegate onEndHasEnvironmentPermissionByEnvironmentDelegate;
        
        private System.Threading.SendOrPostCallback onHasEnvironmentPermissionByEnvironmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentPermissionListDelegate;
        
        private EndOperationDelegate onEndEnvironmentPermissionListDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentPermissionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentPermissionsAvailableDelegate;
        
        private EndOperationDelegate onEndEnvironmentPermissionsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentPermissionsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleListDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleListDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleDictionaryDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRolesAvailableDelegate;
        
        private EndOperationDelegate onEndEnvironmentRolesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRolesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleGetPermissionsDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleGetPermissionsDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleGetPermissionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleGetMembershipDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleGetMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleGetMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleGetByEnvironmentDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleGetByEnvironmentDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleGetByEnvironmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleSaveByEnvironmentDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleSaveByEnvironmentDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleSaveByEnvironmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleSetMembershipDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleSetMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleSetMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentRoleSetPermissionDelegate;
        
        private EndOperationDelegate onEndEnvironmentRoleSetPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentRoleSetPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoreObjectDictionaryDelegate;
        
        private EndOperationDelegate onEndCoreObjectDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onCoreObjectDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoreObject_ValidateDelegate;
        
        private EndOperationDelegate onEndCoreObject_ValidateDelegate;
        
        private System.Threading.SendOrPostCallback onCoreObject_ValidateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoreObject_DataBindingContextsDelegate;
        
        private EndOperationDelegate onEndCoreObject_DataBindingContextsDelegate;
        
        private System.Threading.SendOrPostCallback onCoreObject_DataBindingContextsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoreObject_EvaluateDataBindingDelegate;
        
        private EndOperationDelegate onEndCoreObject_EvaluateDataBindingDelegate;
        
        private System.Threading.SendOrPostCallback onCoreObject_EvaluateDataBindingCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoreObject_XmlSerializeDelegate;
        
        private EndOperationDelegate onEndCoreObject_XmlSerializeDelegate;
        
        private System.Threading.SendOrPostCallback onCoreObject_XmlSerializeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoreObject_XmlImportDelegate;
        
        private EndOperationDelegate onEndCoreObject_XmlImportDelegate;
        
        private System.Threading.SendOrPostCallback onCoreObject_XmlImportCompletedDelegate;
        
        private BeginOperationDelegate onBeginContactRegardingsAvailableDelegate;
        
        private EndOperationDelegate onEndContactRegardingsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onContactRegardingsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginContactRegardingDictionaryDelegate;
        
        private EndOperationDelegate onEndContactRegardingDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onContactRegardingDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginVersionServerDelegate;
        
        private EndOperationDelegate onEndVersionServerDelegate;
        
        private System.Threading.SendOrPostCallback onVersionServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginSessionGetDelegate;
        
        private EndOperationDelegate onEndSessionGetDelegate;
        
        private System.Threading.SendOrPostCallback onSessionGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginActiveSessionsAvailableDelegate;
        
        private EndOperationDelegate onEndActiveSessionsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onActiveSessionsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnterprisePermissionListDelegate;
        
        private EndOperationDelegate onEndEnterprisePermissionListDelegate;
        
        private System.Threading.SendOrPostCallback onEnterprisePermissionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnterprisePermissionDictionaryDelegate;
        
        private EndOperationDelegate onEndEnterprisePermissionDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onEnterprisePermissionDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnterprisePermissionsAvailableDelegate;
        
        private EndOperationDelegate onEndEnterprisePermissionsAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onEnterprisePermissionsAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityGroupEnterprisePermissionsGetDelegate;
        
        private EndOperationDelegate onEndSecurityGroupEnterprisePermissionsGetDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityGroupEnterprisePermissionsGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityGroupEnterprisePermissionSaveDelegate;
        
        private EndOperationDelegate onEndSecurityGroupEnterprisePermissionSaveDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityGroupEnterprisePermissionSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthoritiesAvailableDelegate;
        
        private EndOperationDelegate onEndSecurityAuthoritiesAvailableDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthoritiesAvailableCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthorityDictionaryDelegate;
        
        private EndOperationDelegate onEndSecurityAuthorityDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthorityDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthorityGroupGetMembershipDelegate;
        
        private EndOperationDelegate onEndSecurityAuthorityGroupGetMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthorityGroupGetMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthorityGetByNameDelegate;
        
        private EndOperationDelegate onEndSecurityAuthorityGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthorityGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthorityGetDelegate;
        
        private EndOperationDelegate onEndSecurityAuthorityGetDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthorityGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthoritySaveDelegate;
        
        private EndOperationDelegate onEndSecurityAuthoritySaveDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthoritySaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthorityDeleteDelegate;
        
        private EndOperationDelegate onEndSecurityAuthorityDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthorityDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthorityProviderBrowseDirectoryDelegate;
        
        private EndOperationDelegate onEndSecurityAuthorityProviderBrowseDirectoryDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthorityProviderBrowseDirectoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthoritySecurityGroupDictionaryDelegate;
        
        private EndOperationDelegate onEndSecurityAuthoritySecurityGroupDictionaryDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthoritySecurityGroupDictionaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthoritySecurityGroupsDelegate;
        
        private EndOperationDelegate onEndSecurityAuthoritySecurityGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthoritySecurityGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthoritySecurityGroupGetDelegate;
        
        private EndOperationDelegate onEndSecurityAuthoritySecurityGroupGetDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthoritySecurityGroupGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityAuthoritySecurityGroupMembershipDelegate;
        
        private EndOperationDelegate onEndSecurityAuthoritySecurityGroupMembershipDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityAuthoritySecurityGroupMembershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentAccessGetByEnvironmentNameDelegate;
        
        private EndOperationDelegate onEndEnvironmentAccessGetByEnvironmentNameDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentAccessGetByEnvironmentNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityGroupEnvironmentAccessGetDelegate;
        
        private EndOperationDelegate onEndSecurityGroupEnvironmentAccessGetDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityGroupEnvironmentAccessGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSecurityGroupEnvironmentAccessSaveDelegate;
        
        private EndOperationDelegate onEndSecurityGroupEnvironmentAccessSaveDelegate;
        
        private System.Threading.SendOrPostCallback onSecurityGroupEnvironmentAccessSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentGetDelegate;
        
        private EndOperationDelegate onEndEnvironmentGetDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnvironmentGetByNameDelegate;
        
        private EndOperationDelegate onEndEnvironmentGetByNameDelegate;
        
        private System.Threading.SendOrPostCallback onEnvironmentGetByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ApplicationClient() {
        }
        
        public ApplicationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ReportingServerGetCompletedEventArgs> ReportingServerGetCompleted;
        
        public event System.EventHandler<ReportingServerGetByNameCompletedEventArgs> ReportingServerGetByNameCompleted;
        
        public event System.EventHandler<ReportingServerSaveCompletedEventArgs> ReportingServerSaveCompleted;
        
        public event System.EventHandler<FaxServersAvailableCompletedEventArgs> FaxServersAvailableCompleted;
        
        public event System.EventHandler<FaxServerDictionaryCompletedEventArgs> FaxServerDictionaryCompleted;
        
        public event System.EventHandler<FaxServerGetCompletedEventArgs> FaxServerGetCompleted;
        
        public event System.EventHandler<FaxServerGetByNameCompletedEventArgs> FaxServerGetByNameCompleted;
        
        public event System.EventHandler<FaxServerSaveCompletedEventArgs> FaxServerSaveCompleted;
        
        public event System.EventHandler<PrintersAvailableCompletedEventArgs> PrintersAvailableCompleted;
        
        public event System.EventHandler<PrintQueuesAvailableCompletedEventArgs> PrintQueuesAvailableCompleted;
        
        public event System.EventHandler<PrinterDictionaryCompletedEventArgs> PrinterDictionaryCompleted;
        
        public event System.EventHandler<PrinterGetCompletedEventArgs> PrinterGetCompleted;
        
        public event System.EventHandler<PrinterGetByNameCompletedEventArgs> PrinterGetByNameCompleted;
        
        public event System.EventHandler<PrinterCapabilitiesGetCompletedEventArgs> PrinterCapabilitiesGetCompleted;
        
        public event System.EventHandler<PrinterSaveCompletedEventArgs> PrinterSaveCompleted;
        
        public event System.EventHandler<SearchGlobalCompletedEventArgs> SearchGlobalCompleted;
        
        public event System.EventHandler<SearchMemberByNameCompletedEventArgs> SearchMemberByNameCompleted;
        
        public event System.EventHandler<SearchMemberByIdCompletedEventArgs> SearchMemberByIdCompleted;
        
        public event System.EventHandler<SearchMemberCompletedEventArgs> SearchMemberCompleted;
        
        public event System.EventHandler<SearchProviderCompletedEventArgs> SearchProviderCompleted;
        
        public event System.EventHandler<SearchProviderByNameCompletedEventArgs> SearchProviderByNameCompleted;
        
        public event System.EventHandler<WorkQueueItemCloseCompletedEventArgs> WorkQueueItemCloseCompleted;
        
        public event System.EventHandler<WorkQueueItemSuspendCompletedEventArgs> WorkQueueItemSuspendCompleted;
        
        public event System.EventHandler<WorkQueueItemSendersGetCompletedEventArgs> WorkQueueItemSendersGetCompleted;
        
        public event System.EventHandler<WorkQueueItemAssignmentHistoryGetCompletedEventArgs> WorkQueueItemAssignmentHistoryGetCompleted;
        
        public event System.EventHandler<WorkQueueItemWorkflowStepsGetCompletedEventArgs> WorkQueueItemWorkflowStepsGetCompleted;
        
        public event System.EventHandler<WorkQueueItemsGetCountCompletedEventArgs> WorkQueueItemsGetCountCompleted;
        
        public event System.EventHandler<WorkQueueItemsGetCountByViewCompletedEventArgs> WorkQueueItemsGetCountByViewCompleted;
        
        public event System.EventHandler<WorkQueueItemsGetByViewPageCompletedEventArgs> WorkQueueItemsGetByViewPageCompleted;
        
        public event System.EventHandler<WorkTeamsAvailableCompletedEventArgs> WorkTeamsAvailableCompleted;
        
        public event System.EventHandler<WorkTeamsForSessionCompletedEventArgs> WorkTeamsForSessionCompleted;
        
        public event System.EventHandler<WorkTeamGetCompletedEventArgs> WorkTeamGetCompleted;
        
        public event System.EventHandler<WorkTeamGetByNameCompletedEventArgs> WorkTeamGetByNameCompleted;
        
        public event System.EventHandler<WorkTeamSaveCompletedEventArgs> WorkTeamSaveCompleted;
        
        public event System.EventHandler<WorkQueueViewsAvailableCompletedEventArgs> WorkQueueViewsAvailableCompleted;
        
        public event System.EventHandler<WorkQueueViewDictionaryCompletedEventArgs> WorkQueueViewDictionaryCompleted;
        
        public event System.EventHandler<WorkQueueViewGetCompletedEventArgs> WorkQueueViewGetCompleted;
        
        public event System.EventHandler<WorkQueueViewGetByNameCompletedEventArgs> WorkQueueViewGetByNameCompleted;
        
        public event System.EventHandler<WorkQueueViewSaveCompletedEventArgs> WorkQueueViewSaveCompleted;
        
        public event System.EventHandler<WorkQueueView_ValidateFieldDefinitionCompletedEventArgs> WorkQueueView_ValidateFieldDefinitionCompleted;
        
        public event System.EventHandler<WorkQueueView_WellKnownFieldsCompletedEventArgs> WorkQueueView_WellKnownFieldsCompleted;
        
        public event System.EventHandler<WorkQueueMonitorSummaryCompletedEventArgs> WorkQueueMonitorSummaryCompleted;
        
        public event System.EventHandler<WorkQueueMonitorAgingByWorkQueueCompletedEventArgs> WorkQueueMonitorAgingByWorkQueueCompleted;
        
        public event System.EventHandler<WorkQueueMonitorAgingAvailableByWorkQueueCompletedEventArgs> WorkQueueMonitorAgingAvailableByWorkQueueCompleted;
        
        public event System.EventHandler<ReportingServersAvailableCompletedEventArgs> ReportingServersAvailableCompleted;
        
        public event System.EventHandler<ReportingServerDictionaryCompletedEventArgs> ReportingServerDictionaryCompleted;
        
        public event System.EventHandler<RoutingRuleGetCompletedEventArgs> RoutingRuleGetCompleted;
        
        public event System.EventHandler<RoutingRuleSaveCompletedEventArgs> RoutingRuleSaveCompleted;
        
        public event System.EventHandler<WorkflowsAvailableCompletedEventArgs> WorkflowsAvailableCompleted;
        
        public event System.EventHandler<WorkflowGetCompletedEventArgs> WorkflowGetCompleted;
        
        public event System.EventHandler<WorkflowGetByNameCompletedEventArgs> WorkflowGetByNameCompleted;
        
        public event System.EventHandler<WorkflowGetByWorkQueueIdCompletedEventArgs> WorkflowGetByWorkQueueIdCompleted;
        
        public event System.EventHandler<WorkflowSaveCompletedEventArgs> WorkflowSaveCompleted;
        
        public event System.EventHandler<WorkflowStartCompletedEventArgs> WorkflowStartCompleted;
        
        public event System.EventHandler<WorkflowContinueCompletedEventArgs> WorkflowContinueCompleted;
        
        public event System.EventHandler<WorkOutcomesAvailableCompletedEventArgs> WorkOutcomesAvailableCompleted;
        
        public event System.EventHandler<WorkOutcomeDictionaryCompletedEventArgs> WorkOutcomeDictionaryCompleted;
        
        public event System.EventHandler<WorkOutcomeGetCompletedEventArgs> WorkOutcomeGetCompleted;
        
        public event System.EventHandler<WorkOutcomeGetByNameCompletedEventArgs> WorkOutcomeGetByNameCompleted;
        
        public event System.EventHandler<WorkOutcomeSaveCompletedEventArgs> WorkOutcomeSaveCompleted;
        
        public event System.EventHandler<WorkQueuesAvailableCompletedEventArgs> WorkQueuesAvailableCompleted;
        
        public event System.EventHandler<WorkQueueDictionaryCompletedEventArgs> WorkQueueDictionaryCompleted;
        
        public event System.EventHandler<WorkQueueGetCompletedEventArgs> WorkQueueGetCompleted;
        
        public event System.EventHandler<WorkQueueGetByNameCompletedEventArgs> WorkQueueGetByNameCompleted;
        
        public event System.EventHandler<WorkQueueGetByWorkQueueItemCompletedEventArgs> WorkQueueGetByWorkQueueItemCompleted;
        
        public event System.EventHandler<WorkQueueSaveCompletedEventArgs> WorkQueueSaveCompleted;
        
        public event System.EventHandler<WorkQueueGetWorkCompletedEventArgs> WorkQueueGetWorkCompleted;
        
        public event System.EventHandler<WorkQueueInsertEntityCompletedEventArgs> WorkQueueInsertEntityCompleted;
        
        public event System.EventHandler<WorkQueueItemGetCompletedEventArgs> WorkQueueItemGetCompleted;
        
        public event System.EventHandler<WorkQueueItemAssignToCompletedEventArgs> WorkQueueItemAssignToCompleted;
        
        public event System.EventHandler<WorkQueueItemMoveToQueueCompletedEventArgs> WorkQueueItemMoveToQueueCompleted;
        
        public event System.EventHandler<PopulationGetCompletedEventArgs> PopulationGetCompleted;
        
        public event System.EventHandler<PopulationServiceEventGetCompletedEventArgs> PopulationServiceEventGetCompleted;
        
        public event System.EventHandler<PopulationSaveCompletedEventArgs> PopulationSaveCompleted;
        
        public event System.EventHandler<PopulationDeleteCompletedEventArgs> PopulationDeleteCompleted;
        
        public event System.EventHandler<Population_DataBindingContextsCompletedEventArgs> Population_DataBindingContextsCompleted;
        
        public event System.EventHandler<PopulationMembershipGetCompletedEventArgs> PopulationMembershipGetCompleted;
        
        public event System.EventHandler<PopulationMembershipServiceEventsGetByPopulationMembershipCompletedEventArgs> PopulationMembershipServiceEventsGetByPopulationMembershipCompleted;
        
        public event System.EventHandler<PopulationMembershipServiceEventGetCompletedEventArgs> PopulationMembershipServiceEventGetCompleted;
        
        public event System.EventHandler<PopulationMembershipGetByMemberCompletedEventArgs> PopulationMembershipGetByMemberCompleted;
        
        public event System.EventHandler<PopulationMembershipSummaryByMemberCompletedEventArgs> PopulationMembershipSummaryByMemberCompleted;
        
        public event System.EventHandler<PopulationMembershipServiceEventsByMembershipDataViewCompletedEventArgs> PopulationMembershipServiceEventsByMembershipDataViewCompleted;
        
        public event System.EventHandler<PopulationMembershipTriggerEventsByMembershipDataViewCompletedEventArgs> PopulationMembershipTriggerEventsByMembershipDataViewCompleted;
        
        public event System.EventHandler<PopulationMembershipGetCountByNameCompletedEventArgs> PopulationMembershipGetCountByNameCompleted;
        
        public event System.EventHandler<PopulationMembershipGetByMembershipPageCompletedEventArgs> PopulationMembershipGetByMembershipPageCompleted;
        
        public event System.EventHandler<ProviderGetCompletedEventArgs> ProviderGetCompleted;
        
        public event System.EventHandler<ProviderGetByEntityIdCompletedEventArgs> ProviderGetByEntityIdCompleted;
        
        public event System.EventHandler<ProviderEnrollmentsGetCompletedEventArgs> ProviderEnrollmentsGetCompleted;
        
        public event System.EventHandler<ProviderEnrollmentGetCompletedEventArgs> ProviderEnrollmentGetCompleted;
        
        public event System.EventHandler<ProviderAffiliationsGetCompletedEventArgs> ProviderAffiliationsGetCompleted;
        
        public event System.EventHandler<ProviderAffiliationGetCompletedEventArgs> ProviderAffiliationGetCompleted;
        
        public event System.EventHandler<ProviderContractsGetCompletedEventArgs> ProviderContractsGetCompleted;
        
        public event System.EventHandler<ProviderContractGetCompletedEventArgs> ProviderContractGetCompleted;
        
        public event System.EventHandler<ProviderServiceLocationsGetCompletedEventArgs> ProviderServiceLocationsGetCompleted;
        
        public event System.EventHandler<SponsorGetCompletedEventArgs> SponsorGetCompleted;
        
        public event System.EventHandler<RoutingRulesAvailableCompletedEventArgs> RoutingRulesAvailableCompleted;
        
        public event System.EventHandler<MemberGetCompletedEventArgs> MemberGetCompleted;
        
        public event System.EventHandler<MemberGetByEntityIdCompletedEventArgs> MemberGetByEntityIdCompleted;
        
        public event System.EventHandler<MemberGetDemographicsCompletedEventArgs> MemberGetDemographicsCompleted;
        
        public event System.EventHandler<MemberGetDemographicsByEntityIdCompletedEventArgs> MemberGetDemographicsByEntityIdCompleted;
        
        public event System.EventHandler<MemberEnrollmentGetCompletedEventArgs> MemberEnrollmentGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentsGetCompletedEventArgs> MemberEnrollmentsGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentCoverageGetCompletedEventArgs> MemberEnrollmentCoverageGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentCoveragesGetCompletedEventArgs> MemberEnrollmentCoveragesGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentPcpGetCompletedEventArgs> MemberEnrollmentPcpGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentPcpsGetCompletedEventArgs> MemberEnrollmentPcpsGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentTplCobGetCompletedEventArgs> MemberEnrollmentTplCobGetCompleted;
        
        public event System.EventHandler<MemberEnrollmentTplCobsGetCompletedEventArgs> MemberEnrollmentTplCobsGetCompleted;
        
        public event System.EventHandler<MemberRelationshipGetCompletedEventArgs> MemberRelationshipGetCompleted;
        
        public event System.EventHandler<MemberRelationshipsGetCompletedEventArgs> MemberRelationshipsGetCompleted;
        
        public event System.EventHandler<MetricsAvailableCompletedEventArgs> MetricsAvailableCompleted;
        
        public event System.EventHandler<MetricGetCompletedEventArgs> MetricGetCompleted;
        
        public event System.EventHandler<MetricSaveCompletedEventArgs> MetricSaveCompleted;
        
        public event System.EventHandler<MemberMetricAddManualCompletedEventArgs> MemberMetricAddManualCompleted;
        
        public event System.EventHandler<MemberMetricRemoveManualCompletedEventArgs> MemberMetricRemoveManualCompleted;
        
        public event System.EventHandler<MemberMetricsGetCountCompletedEventArgs> MemberMetricsGetCountCompleted;
        
        public event System.EventHandler<MemberMetricsGetByPageCompletedEventArgs> MemberMetricsGetByPageCompleted;
        
        public event System.EventHandler<PopulationTypesAvailableCompletedEventArgs> PopulationTypesAvailableCompleted;
        
        public event System.EventHandler<PopulationTypeGetCompletedEventArgs> PopulationTypeGetCompleted;
        
        public event System.EventHandler<PopulationTypeSaveCompletedEventArgs> PopulationTypeSaveCompleted;
        
        public event System.EventHandler<PopulationsAvailableCompletedEventArgs> PopulationsAvailableCompleted;
        
        public event System.EventHandler<InsurerDictionaryCompletedEventArgs> InsurerDictionaryCompleted;
        
        public event System.EventHandler<InsurerGetCompletedEventArgs> InsurerGetCompleted;
        
        public event System.EventHandler<ProgramsAvailableCompletedEventArgs> ProgramsAvailableCompleted;
        
        public event System.EventHandler<ProgramDictionaryCompletedEventArgs> ProgramDictionaryCompleted;
        
        public event System.EventHandler<ProgramGetCompletedEventArgs> ProgramGetCompleted;
        
        public event System.EventHandler<MedicalServiceHeadersGetCompletedEventArgs> MedicalServiceHeadersGetCompleted;
        
        public event System.EventHandler<MedicalServiceHeadersGetByTypeCompletedEventArgs> MedicalServiceHeadersGetByTypeCompleted;
        
        public event System.EventHandler<MedicalServiceGetCompletedEventArgs> MedicalServiceGetCompleted;
        
        public event System.EventHandler<MedicalServiceGetIdByNameCompletedEventArgs> MedicalServiceGetIdByNameCompleted;
        
        public event System.EventHandler<MedicalServiceDeleteCompletedEventArgs> MedicalServiceDeleteCompleted;
        
        public event System.EventHandler<MedicalServiceSingletonGetCompletedEventArgs> MedicalServiceSingletonGetCompleted;
        
        public event System.EventHandler<MedicalServiceSingletonSaveCompletedEventArgs> MedicalServiceSingletonSaveCompleted;
        
        public event System.EventHandler<MedicalServiceSingletonDefinitionValidateCompletedEventArgs> MedicalServiceSingletonDefinitionValidateCompleted;
        
        public event System.EventHandler<MedicalServiceSingletonPreviewCompletedEventArgs> MedicalServiceSingletonPreviewCompleted;
        
        public event System.EventHandler<MedicalServiceSetPreviewCompletedEventArgs> MedicalServiceSetPreviewCompleted;
        
        public event System.EventHandler<MedicalServiceSetGetCompletedEventArgs> MedicalServiceSetGetCompleted;
        
        public event System.EventHandler<MedicalServiceSetDefinitionValidateCompletedEventArgs> MedicalServiceSetDefinitionValidateCompleted;
        
        public event System.EventHandler<MedicalServiceSetSaveCompletedEventArgs> MedicalServiceSetSaveCompleted;
        
        public event System.EventHandler<MemberServiceGetCompletedEventArgs> MemberServiceGetCompleted;
        
        public event System.EventHandler<MemberServiceAddManualCompletedEventArgs> MemberServiceAddManualCompleted;
        
        public event System.EventHandler<MemberServiceRemoveManualCompletedEventArgs> MemberServiceRemoveManualCompleted;
        
        public event System.EventHandler<MemberServicesGetCountCompletedEventArgs> MemberServicesGetCountCompleted;
        
        public event System.EventHandler<MemberServicesGetByPageCompletedEventArgs> MemberServicesGetByPageCompleted;
        
        public event System.EventHandler<MemberServiceDetailSingletonGetCompletedEventArgs> MemberServiceDetailSingletonGetCompleted;
        
        public event System.EventHandler<MemberServiceDetailSetGetCompletedEventArgs> MemberServiceDetailSetGetCompleted;
        
        public event System.EventHandler<ProblemStatementGetCompletedEventArgs> ProblemStatementGetCompleted;
        
        public event System.EventHandler<ProblemStatementSaveCompletedEventArgs> ProblemStatementSaveCompleted;
        
        public event System.EventHandler<CareOutcomesAvailableCompletedEventArgs> CareOutcomesAvailableCompleted;
        
        public event System.EventHandler<CareOutcomeDictionaryCompletedEventArgs> CareOutcomeDictionaryCompleted;
        
        public event System.EventHandler<CareOutcomeGetCompletedEventArgs> CareOutcomeGetCompleted;
        
        public event System.EventHandler<CareOutcomeGetByNameCompletedEventArgs> CareOutcomeGetByNameCompleted;
        
        public event System.EventHandler<CareOutcomeSaveCompletedEventArgs> CareOutcomeSaveCompleted;
        
        public event System.EventHandler<MemberCaseCreateCompletedEventArgs> MemberCaseCreateCompleted;
        
        public event System.EventHandler<MemberCaseGetCompletedEventArgs> MemberCaseGetCompleted;
        
        public event System.EventHandler<BenefitPlansAvailableCompletedEventArgs> BenefitPlansAvailableCompleted;
        
        public event System.EventHandler<BenefitPlanDictionaryCompletedEventArgs> BenefitPlanDictionaryCompleted;
        
        public event System.EventHandler<BenefitPlanGetCompletedEventArgs> BenefitPlanGetCompleted;
        
        public event System.EventHandler<ContractsAvailableCompletedEventArgs> ContractsAvailableCompleted;
        
        public event System.EventHandler<ContractDictionaryCompletedEventArgs> ContractDictionaryCompleted;
        
        public event System.EventHandler<ContractGetCompletedEventArgs> ContractGetCompleted;
        
        public event System.EventHandler<CoverageLevelsAvailableCompletedEventArgs> CoverageLevelsAvailableCompleted;
        
        public event System.EventHandler<CoverageLevelDictionaryCompletedEventArgs> CoverageLevelDictionaryCompleted;
        
        public event System.EventHandler<CoverageLevelGetCompletedEventArgs> CoverageLevelGetCompleted;
        
        public event System.EventHandler<CoverageTypesAvailableCompletedEventArgs> CoverageTypesAvailableCompleted;
        
        public event System.EventHandler<CoverageTypeDictionaryCompletedEventArgs> CoverageTypeDictionaryCompleted;
        
        public event System.EventHandler<CoverageTypeGetCompletedEventArgs> CoverageTypeGetCompleted;
        
        public event System.EventHandler<InsuranceTypesAvailableCompletedEventArgs> InsuranceTypesAvailableCompleted;
        
        public event System.EventHandler<InsuranceTypeDictionaryCompletedEventArgs> InsuranceTypeDictionaryCompleted;
        
        public event System.EventHandler<InsuranceTypeGetCompletedEventArgs> InsuranceTypeGetCompleted;
        
        public event System.EventHandler<InsurersAvailableCompletedEventArgs> InsurersAvailableCompleted;
        
        public event System.EventHandler<EntityNoteGetMostRecentByTypeCompletedEventArgs> EntityNoteGetMostRecentByTypeCompleted;
        
        public event System.EventHandler<FormsAvailableCompletedEventArgs> FormsAvailableCompleted;
        
        public event System.EventHandler<FormGetCompletedEventArgs> FormGetCompleted;
        
        public event System.EventHandler<FormGetByNameCompletedEventArgs> FormGetByNameCompleted;
        
        public event System.EventHandler<FormGetByEntityFormIdCompletedEventArgs> FormGetByEntityFormIdCompleted;
        
        public event System.EventHandler<FormCompileCompletedEventArgs> FormCompileCompleted;
        
        public event System.EventHandler<FormSubmitCompletedEventArgs> FormSubmitCompleted;
        
        public event System.EventHandler<FormSaveCompletedEventArgs> FormSaveCompleted;
        
        public event System.EventHandler<FormControl_DataBindablePropertiesCompletedEventArgs> FormControl_DataBindablePropertiesCompleted;
        
        public event System.EventHandler<FormControl_DataBindingContextsCompletedEventArgs> FormControl_DataBindingContextsCompleted;
        
        public event System.EventHandler<FormControl_DataBindingAllowedCompletedEventArgs> FormControl_DataBindingAllowedCompleted;
        
        public event System.EventHandler<FormControl_EvaluateDataBindingCompletedEventArgs> FormControl_EvaluateDataBindingCompleted;
        
        public event System.EventHandler<Form_OnDataSourceChangedCompletedEventArgs> Form_OnDataSourceChangedCompleted;
        
        public event System.EventHandler<FormControl_EventsCompletedEventArgs> FormControl_EventsCompleted;
        
        public event System.EventHandler<FormControl_EventHandler_CompileCompletedEventArgs> FormControl_EventHandler_CompileCompleted;
        
        public event System.EventHandler<FormControl_RaiseEventCompletedEventArgs> FormControl_RaiseEventCompleted;
        
        public event System.EventHandler<FormControl_ValueChangedCompletedEventArgs> FormControl_ValueChangedCompleted;
        
        public event System.EventHandler<FormControlSelection_ReferenceGetPageCompletedEventArgs> FormControlSelection_ReferenceGetPageCompleted;
        
        public event System.EventHandler<CareLevelsAvailableCompletedEventArgs> CareLevelsAvailableCompleted;
        
        public event System.EventHandler<CareLevelGetCompletedEventArgs> CareLevelGetCompleted;
        
        public event System.EventHandler<CareLevelSaveCompletedEventArgs> CareLevelSaveCompleted;
        
        public event System.EventHandler<CarePlansAvailableCompletedEventArgs> CarePlansAvailableCompleted;
        
        public event System.EventHandler<CarePlanGetCompletedEventArgs> CarePlanGetCompleted;
        
        public event System.EventHandler<CarePlanSaveCompletedEventArgs> CarePlanSaveCompleted;
        
        public event System.EventHandler<ProblemStatementsAvailableCompletedEventArgs> ProblemStatementsAvailableCompleted;
        
        public event System.EventHandler<EntityAddressSaveCompletedEventArgs> EntityAddressSaveCompleted;
        
        public event System.EventHandler<EntityAddressTerminateCompletedEventArgs> EntityAddressTerminateCompleted;
        
        public event System.EventHandler<EntityContactGetCompletedEventArgs> EntityContactGetCompleted;
        
        public event System.EventHandler<EntityContactsGetCountCompletedEventArgs> EntityContactsGetCountCompleted;
        
        public event System.EventHandler<EntityContactsGetByPageCompletedEventArgs> EntityContactsGetByPageCompleted;
        
        public event System.EventHandler<EntityContactSaveCompletedEventArgs> EntityContactSaveCompleted;
        
        public event System.EventHandler<EntityContactInformationGetCompletedEventArgs> EntityContactInformationGetCompleted;
        
        public event System.EventHandler<EntityContactInformationGetByTypeDateCompletedEventArgs> EntityContactInformationGetByTypeDateCompleted;
        
        public event System.EventHandler<EntityContactInformationsGetCompletedEventArgs> EntityContactInformationsGetCompleted;
        
        public event System.EventHandler<EntityContactInformationSaveCompletedEventArgs> EntityContactInformationSaveCompleted;
        
        public event System.EventHandler<EntityContactInformationTerminateCompletedEventArgs> EntityContactInformationTerminateCompleted;
        
        public event System.EventHandler<EntityCorrespondenceGetCompletedEventArgs> EntityCorrespondenceGetCompleted;
        
        public event System.EventHandler<EntityCorrespondenceImageGetCompletedEventArgs> EntityCorrespondenceImageGetCompleted;
        
        public event System.EventHandler<EntityCorrespondenceSaveCompletedEventArgs> EntityCorrespondenceSaveCompleted;
        
        public event System.EventHandler<EntityDocumentsGetCountCompletedEventArgs> EntityDocumentsGetCountCompleted;
        
        public event System.EventHandler<EntityDocumentsGetByPageCompletedEventArgs> EntityDocumentsGetByPageCompleted;
        
        public event System.EventHandler<EntityNoteGetCompletedEventArgs> EntityNoteGetCompleted;
        
        public event System.EventHandler<EntityNoteSaveCompletedEventArgs> EntityNoteSaveCompleted;
        
        public event System.EventHandler<EntityNoteTerminateCompletedEventArgs> EntityNoteTerminateCompleted;
        
        public event System.EventHandler<EntityNoteContentsGetCompletedEventArgs> EntityNoteContentsGetCompleted;
        
        public event System.EventHandler<EntityNoteContentAppendCompletedEventArgs> EntityNoteContentAppendCompleted;
        
        public event System.EventHandler<EntityNotesGetCountCompletedEventArgs> EntityNotesGetCountCompleted;
        
        public event System.EventHandler<EntityNotesGetByPageCompletedEventArgs> EntityNotesGetByPageCompleted;
        
        public event System.EventHandler<EntityNoteGetMostRecentByImportanceCompletedEventArgs> EntityNoteGetMostRecentByImportanceCompleted;
        
        public event System.EventHandler<EntityNoteGetMostRecentByAllImportancesCompletedEventArgs> EntityNoteGetMostRecentByAllImportancesCompleted;
        
        public event System.EventHandler<RevenueCodeDictionaryCompletedEventArgs> RevenueCodeDictionaryCompleted;
        
        public event System.EventHandler<BillTypeDictionaryCompletedEventArgs> BillTypeDictionaryCompleted;
        
        public event System.EventHandler<Icd9ProcedureCodeDictionaryCompletedEventArgs> Icd9ProcedureCodeDictionaryCompleted;
        
        public event System.EventHandler<ActionsAvailableCompletedEventArgs> ActionsAvailableCompleted;
        
        public event System.EventHandler<AuthorizationTypesAvailableCompletedEventArgs> AuthorizationTypesAvailableCompleted;
        
        public event System.EventHandler<AuthorizationTypeGetCompletedEventArgs> AuthorizationTypeGetCompleted;
        
        public event System.EventHandler<MemberAuthorizationsGetCountCompletedEventArgs> MemberAuthorizationsGetCountCompleted;
        
        public event System.EventHandler<MemberAuthorizationsGetByPageCompletedEventArgs> MemberAuthorizationsGetByPageCompleted;
        
        public event System.EventHandler<AuthorizationLineGetByAuthorizationCompletedEventArgs> AuthorizationLineGetByAuthorizationCompleted;
        
        public event System.EventHandler<AuthorizedServicesAvailableCompletedEventArgs> AuthorizedServicesAvailableCompleted;
        
        public event System.EventHandler<AuthorizedServiceGetCompletedEventArgs> AuthorizedServiceGetCompleted;
        
        public event System.EventHandler<AuthorizedServiceSaveCompletedEventArgs> AuthorizedServiceSaveCompleted;
        
        public event System.EventHandler<AuthorizedServicePreviewCompletedEventArgs> AuthorizedServicePreviewCompleted;
        
        public event System.EventHandler<MemberAuthorizedServicesGetCountCompletedEventArgs> MemberAuthorizedServicesGetCountCompleted;
        
        public event System.EventHandler<MemberAuthorizedServicesGetByPageCompletedEventArgs> MemberAuthorizedServicesGetByPageCompleted;
        
        public event System.EventHandler<MemberAuthorizedServiceDetailsGetCompletedEventArgs> MemberAuthorizedServiceDetailsGetCompleted;
        
        public event System.EventHandler<MemberClaimsGetCountCompletedEventArgs> MemberClaimsGetCountCompleted;
        
        public event System.EventHandler<MemberClaimsGetByPageCompletedEventArgs> MemberClaimsGetByPageCompleted;
        
        public event System.EventHandler<ClaimLinesGetCompletedEventArgs> ClaimLinesGetCompleted;
        
        public event System.EventHandler<MemberPharmacyClaimsGetCountCompletedEventArgs> MemberPharmacyClaimsGetCountCompleted;
        
        public event System.EventHandler<MemberPharmacyClaimsGetByPageCompletedEventArgs> MemberPharmacyClaimsGetByPageCompleted;
        
        public event System.EventHandler<EntityGetCompletedEventArgs> EntityGetCompleted;
        
        public event System.EventHandler<EntityAddressGetCompletedEventArgs> EntityAddressGetCompleted;
        
        public event System.EventHandler<EntityAddressGetByTypeDateCompletedEventArgs> EntityAddressGetByTypeDateCompleted;
        
        public event System.EventHandler<EntityAddressesGetCompletedEventArgs> EntityAddressesGetCompleted;
        
        public event System.EventHandler<ContactRegardingGetCompletedEventArgs> ContactRegardingGetCompleted;
        
        public event System.EventHandler<ContactRegardingGetByNameCompletedEventArgs> ContactRegardingGetByNameCompleted;
        
        public event System.EventHandler<ContactRegardingSaveCompletedEventArgs> ContactRegardingSaveCompleted;
        
        public event System.EventHandler<CorrespondencesAvailableCompletedEventArgs> CorrespondencesAvailableCompleted;
        
        public event System.EventHandler<CorrespondenceDictionaryCompletedEventArgs> CorrespondenceDictionaryCompleted;
        
        public event System.EventHandler<CorrespondenceGetCompletedEventArgs> CorrespondenceGetCompleted;
        
        public event System.EventHandler<CorrespondenceGetByNameCompletedEventArgs> CorrespondenceGetByNameCompleted;
        
        public event System.EventHandler<CorrespondenceSaveCompletedEventArgs> CorrespondenceSaveCompleted;
        
        public event System.EventHandler<CorrespondenceContentGetCompletedEventArgs> CorrespondenceContentGetCompleted;
        
        public event System.EventHandler<NoteTypesAvailableCompletedEventArgs> NoteTypesAvailableCompleted;
        
        public event System.EventHandler<NoteTypeDictionaryCompletedEventArgs> NoteTypeDictionaryCompleted;
        
        public event System.EventHandler<NoteTypeGetCompletedEventArgs> NoteTypeGetCompleted;
        
        public event System.EventHandler<NoteTypeGetByNameCompletedEventArgs> NoteTypeGetByNameCompleted;
        
        public event System.EventHandler<NoteTypeSaveCompletedEventArgs> NoteTypeSaveCompleted;
        
        public event System.EventHandler<StateReferenceCompletedEventArgs> StateReferenceCompleted;
        
        public event System.EventHandler<StateReferenceByZipCodeCompletedEventArgs> StateReferenceByZipCodeCompleted;
        
        public event System.EventHandler<CityReferenceByStateCompletedEventArgs> CityReferenceByStateCompleted;
        
        public event System.EventHandler<CityStateReferenceByZipCodeCompletedEventArgs> CityStateReferenceByZipCodeCompleted;
        
        public event System.EventHandler<CityReferenceByZipCodeCompletedEventArgs> CityReferenceByZipCodeCompleted;
        
        public event System.EventHandler<CityReferenceByStateCityNameCompletedEventArgs> CityReferenceByStateCityNameCompleted;
        
        public event System.EventHandler<CountyReferenceByStateCompletedEventArgs> CountyReferenceByStateCompleted;
        
        public event System.EventHandler<CountyReferenceByZipCodeCompletedEventArgs> CountyReferenceByZipCodeCompleted;
        
        public event System.EventHandler<DiagnosisDictionaryCompletedEventArgs> DiagnosisDictionaryCompleted;
        
        public event System.EventHandler<DiagnosisDescriptionCompletedEventArgs> DiagnosisDescriptionCompleted;
        
        public event System.EventHandler<ProcedureCodeDictionaryCompletedEventArgs> ProcedureCodeDictionaryCompleted;
        
        public event System.EventHandler<EnvironmentSaveCompletedEventArgs> EnvironmentSaveCompleted;
        
        public event System.EventHandler<EnvironmentDeleteCompletedEventArgs> EnvironmentDeleteCompleted;
        
        public event System.EventHandler<EnvironmentListCompletedEventArgs> EnvironmentListCompleted;
        
        public event System.EventHandler<EnvironmentDictionaryCompletedEventArgs> EnvironmentDictionaryCompleted;
        
        public event System.EventHandler<EnvironmentsAvailableCompletedEventArgs> EnvironmentsAvailableCompleted;
        
        public event System.EventHandler<HasEnvironmentPermissionByEnvironmentCompletedEventArgs> HasEnvironmentPermissionByEnvironmentCompleted;
        
        public event System.EventHandler<EnvironmentPermissionListCompletedEventArgs> EnvironmentPermissionListCompleted;
        
        public event System.EventHandler<EnvironmentPermissionsAvailableCompletedEventArgs> EnvironmentPermissionsAvailableCompleted;
        
        public event System.EventHandler<EnvironmentRoleListCompletedEventArgs> EnvironmentRoleListCompleted;
        
        public event System.EventHandler<EnvironmentRoleDictionaryCompletedEventArgs> EnvironmentRoleDictionaryCompleted;
        
        public event System.EventHandler<EnvironmentRolesAvailableCompletedEventArgs> EnvironmentRolesAvailableCompleted;
        
        public event System.EventHandler<EnvironmentRoleGetPermissionsCompletedEventArgs> EnvironmentRoleGetPermissionsCompleted;
        
        public event System.EventHandler<EnvironmentRoleGetMembershipCompletedEventArgs> EnvironmentRoleGetMembershipCompleted;
        
        public event System.EventHandler<EnvironmentRoleGetByEnvironmentCompletedEventArgs> EnvironmentRoleGetByEnvironmentCompleted;
        
        public event System.EventHandler<EnvironmentRoleSaveByEnvironmentCompletedEventArgs> EnvironmentRoleSaveByEnvironmentCompleted;
        
        public event System.EventHandler<EnvironmentRoleSetMembershipCompletedEventArgs> EnvironmentRoleSetMembershipCompleted;
        
        public event System.EventHandler<EnvironmentRoleSetPermissionCompletedEventArgs> EnvironmentRoleSetPermissionCompleted;
        
        public event System.EventHandler<CoreObjectDictionaryCompletedEventArgs> CoreObjectDictionaryCompleted;
        
        public event System.EventHandler<CoreObject_ValidateCompletedEventArgs> CoreObject_ValidateCompleted;
        
        public event System.EventHandler<CoreObject_DataBindingContextsCompletedEventArgs> CoreObject_DataBindingContextsCompleted;
        
        public event System.EventHandler<CoreObject_EvaluateDataBindingCompletedEventArgs> CoreObject_EvaluateDataBindingCompleted;
        
        public event System.EventHandler<CoreObject_XmlSerializeCompletedEventArgs> CoreObject_XmlSerializeCompleted;
        
        public event System.EventHandler<CoreObject_XmlImportCompletedEventArgs> CoreObject_XmlImportCompleted;
        
        public event System.EventHandler<ContactRegardingsAvailableCompletedEventArgs> ContactRegardingsAvailableCompleted;
        
        public event System.EventHandler<ContactRegardingDictionaryCompletedEventArgs> ContactRegardingDictionaryCompleted;
        
        public event System.EventHandler<VersionServerCompletedEventArgs> VersionServerCompleted;
        
        public event System.EventHandler<SessionGetCompletedEventArgs> SessionGetCompleted;
        
        public event System.EventHandler<ActiveSessionsAvailableCompletedEventArgs> ActiveSessionsAvailableCompleted;
        
        public event System.EventHandler<EnterprisePermissionListCompletedEventArgs> EnterprisePermissionListCompleted;
        
        public event System.EventHandler<EnterprisePermissionDictionaryCompletedEventArgs> EnterprisePermissionDictionaryCompleted;
        
        public event System.EventHandler<EnterprisePermissionsAvailableCompletedEventArgs> EnterprisePermissionsAvailableCompleted;
        
        public event System.EventHandler<SecurityGroupEnterprisePermissionsGetCompletedEventArgs> SecurityGroupEnterprisePermissionsGetCompleted;
        
        public event System.EventHandler<SecurityGroupEnterprisePermissionSaveCompletedEventArgs> SecurityGroupEnterprisePermissionSaveCompleted;
        
        public event System.EventHandler<SecurityAuthoritiesAvailableCompletedEventArgs> SecurityAuthoritiesAvailableCompleted;
        
        public event System.EventHandler<SecurityAuthorityDictionaryCompletedEventArgs> SecurityAuthorityDictionaryCompleted;
        
        public event System.EventHandler<SecurityAuthorityGroupGetMembershipCompletedEventArgs> SecurityAuthorityGroupGetMembershipCompleted;
        
        public event System.EventHandler<SecurityAuthorityGetByNameCompletedEventArgs> SecurityAuthorityGetByNameCompleted;
        
        public event System.EventHandler<SecurityAuthorityGetCompletedEventArgs> SecurityAuthorityGetCompleted;
        
        public event System.EventHandler<SecurityAuthoritySaveCompletedEventArgs> SecurityAuthoritySaveCompleted;
        
        public event System.EventHandler<SecurityAuthorityDeleteCompletedEventArgs> SecurityAuthorityDeleteCompleted;
        
        public event System.EventHandler<SecurityAuthorityProviderBrowseDirectoryCompletedEventArgs> SecurityAuthorityProviderBrowseDirectoryCompleted;
        
        public event System.EventHandler<SecurityAuthoritySecurityGroupDictionaryCompletedEventArgs> SecurityAuthoritySecurityGroupDictionaryCompleted;
        
        public event System.EventHandler<SecurityAuthoritySecurityGroupsCompletedEventArgs> SecurityAuthoritySecurityGroupsCompleted;
        
        public event System.EventHandler<SecurityAuthoritySecurityGroupGetCompletedEventArgs> SecurityAuthoritySecurityGroupGetCompleted;
        
        public event System.EventHandler<SecurityAuthoritySecurityGroupMembershipCompletedEventArgs> SecurityAuthoritySecurityGroupMembershipCompleted;
        
        public event System.EventHandler<EnvironmentAccessGetByEnvironmentNameCompletedEventArgs> EnvironmentAccessGetByEnvironmentNameCompleted;
        
        public event System.EventHandler<SecurityGroupEnvironmentAccessGetCompletedEventArgs> SecurityGroupEnvironmentAccessGetCompleted;
        
        public event System.EventHandler<SecurityGroupEnvironmentAccessSaveCompletedEventArgs> SecurityGroupEnvironmentAccessSaveCompleted;
        
        public event System.EventHandler<EnvironmentGetCompletedEventArgs> EnvironmentGetCompleted;
        
        public event System.EventHandler<EnvironmentGetByNameCompletedEventArgs> EnvironmentGetByNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginReportingServerGet(string token, long reportingServerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportingServerGet(token, reportingServerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ReportingServer Mercury.Server.Application.IApplication.EndReportingServerGet(System.IAsyncResult result) {
            return base.Channel.EndReportingServerGet(result);
        }
        
        private System.IAsyncResult OnBeginReportingServerGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long reportingServerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginReportingServerGet(token, reportingServerId, callback, asyncState);
        }
        
        private object[] OnEndReportingServerGet(System.IAsyncResult result) {
            Mercury.Server.Application.ReportingServer retVal = ((Mercury.Server.Application.IApplication)(this)).EndReportingServerGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportingServerGetCompleted(object state) {
            if ((this.ReportingServerGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportingServerGetCompleted(this, new ReportingServerGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportingServerGetAsync(string token, long reportingServerId) {
            this.ReportingServerGetAsync(token, reportingServerId, null);
        }
        
        public void ReportingServerGetAsync(string token, long reportingServerId, object userState) {
            if ((this.onBeginReportingServerGetDelegate == null)) {
                this.onBeginReportingServerGetDelegate = new BeginOperationDelegate(this.OnBeginReportingServerGet);
            }
            if ((this.onEndReportingServerGetDelegate == null)) {
                this.onEndReportingServerGetDelegate = new EndOperationDelegate(this.OnEndReportingServerGet);
            }
            if ((this.onReportingServerGetCompletedDelegate == null)) {
                this.onReportingServerGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportingServerGetCompleted);
            }
            base.InvokeAsync(this.onBeginReportingServerGetDelegate, new object[] {
                        token,
                        reportingServerId}, this.onEndReportingServerGetDelegate, this.onReportingServerGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginReportingServerGetByName(string token, string reportingServerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportingServerGetByName(token, reportingServerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ReportingServer Mercury.Server.Application.IApplication.EndReportingServerGetByName(System.IAsyncResult result) {
            return base.Channel.EndReportingServerGetByName(result);
        }
        
        private System.IAsyncResult OnBeginReportingServerGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string reportingServerName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginReportingServerGetByName(token, reportingServerName, callback, asyncState);
        }
        
        private object[] OnEndReportingServerGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.ReportingServer retVal = ((Mercury.Server.Application.IApplication)(this)).EndReportingServerGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportingServerGetByNameCompleted(object state) {
            if ((this.ReportingServerGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportingServerGetByNameCompleted(this, new ReportingServerGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportingServerGetByNameAsync(string token, string reportingServerName) {
            this.ReportingServerGetByNameAsync(token, reportingServerName, null);
        }
        
        public void ReportingServerGetByNameAsync(string token, string reportingServerName, object userState) {
            if ((this.onBeginReportingServerGetByNameDelegate == null)) {
                this.onBeginReportingServerGetByNameDelegate = new BeginOperationDelegate(this.OnBeginReportingServerGetByName);
            }
            if ((this.onEndReportingServerGetByNameDelegate == null)) {
                this.onEndReportingServerGetByNameDelegate = new EndOperationDelegate(this.OnEndReportingServerGetByName);
            }
            if ((this.onReportingServerGetByNameCompletedDelegate == null)) {
                this.onReportingServerGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportingServerGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginReportingServerGetByNameDelegate, new object[] {
                        token,
                        reportingServerName}, this.onEndReportingServerGetByNameDelegate, this.onReportingServerGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginReportingServerSave(string token, Mercury.Server.Application.ReportingServer reportingServer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportingServerSave(token, reportingServer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndReportingServerSave(System.IAsyncResult result) {
            return base.Channel.EndReportingServerSave(result);
        }
        
        private System.IAsyncResult OnBeginReportingServerSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ReportingServer reportingServer = ((Mercury.Server.Application.ReportingServer)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginReportingServerSave(token, reportingServer, callback, asyncState);
        }
        
        private object[] OnEndReportingServerSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndReportingServerSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportingServerSaveCompleted(object state) {
            if ((this.ReportingServerSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportingServerSaveCompleted(this, new ReportingServerSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportingServerSaveAsync(string token, Mercury.Server.Application.ReportingServer reportingServer) {
            this.ReportingServerSaveAsync(token, reportingServer, null);
        }
        
        public void ReportingServerSaveAsync(string token, Mercury.Server.Application.ReportingServer reportingServer, object userState) {
            if ((this.onBeginReportingServerSaveDelegate == null)) {
                this.onBeginReportingServerSaveDelegate = new BeginOperationDelegate(this.OnBeginReportingServerSave);
            }
            if ((this.onEndReportingServerSaveDelegate == null)) {
                this.onEndReportingServerSaveDelegate = new EndOperationDelegate(this.OnEndReportingServerSave);
            }
            if ((this.onReportingServerSaveCompletedDelegate == null)) {
                this.onReportingServerSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportingServerSaveCompleted);
            }
            base.InvokeAsync(this.onBeginReportingServerSaveDelegate, new object[] {
                        token,
                        reportingServer}, this.onEndReportingServerSaveDelegate, this.onReportingServerSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFaxServersAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFaxServersAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FaxServerCollectionResponse Mercury.Server.Application.IApplication.EndFaxServersAvailable(System.IAsyncResult result) {
            return base.Channel.EndFaxServersAvailable(result);
        }
        
        private System.IAsyncResult OnBeginFaxServersAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFaxServersAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndFaxServersAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.FaxServerCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFaxServersAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFaxServersAvailableCompleted(object state) {
            if ((this.FaxServersAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FaxServersAvailableCompleted(this, new FaxServersAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FaxServersAvailableAsync(string token) {
            this.FaxServersAvailableAsync(token, null);
        }
        
        public void FaxServersAvailableAsync(string token, object userState) {
            if ((this.onBeginFaxServersAvailableDelegate == null)) {
                this.onBeginFaxServersAvailableDelegate = new BeginOperationDelegate(this.OnBeginFaxServersAvailable);
            }
            if ((this.onEndFaxServersAvailableDelegate == null)) {
                this.onEndFaxServersAvailableDelegate = new EndOperationDelegate(this.OnEndFaxServersAvailable);
            }
            if ((this.onFaxServersAvailableCompletedDelegate == null)) {
                this.onFaxServersAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFaxServersAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginFaxServersAvailableDelegate, new object[] {
                        token}, this.onEndFaxServersAvailableDelegate, this.onFaxServersAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFaxServerDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFaxServerDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndFaxServerDictionary(System.IAsyncResult result) {
            return base.Channel.EndFaxServerDictionary(result);
        }
        
        private System.IAsyncResult OnBeginFaxServerDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFaxServerDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndFaxServerDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFaxServerDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFaxServerDictionaryCompleted(object state) {
            if ((this.FaxServerDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FaxServerDictionaryCompleted(this, new FaxServerDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FaxServerDictionaryAsync(string token) {
            this.FaxServerDictionaryAsync(token, null);
        }
        
        public void FaxServerDictionaryAsync(string token, object userState) {
            if ((this.onBeginFaxServerDictionaryDelegate == null)) {
                this.onBeginFaxServerDictionaryDelegate = new BeginOperationDelegate(this.OnBeginFaxServerDictionary);
            }
            if ((this.onEndFaxServerDictionaryDelegate == null)) {
                this.onEndFaxServerDictionaryDelegate = new EndOperationDelegate(this.OnEndFaxServerDictionary);
            }
            if ((this.onFaxServerDictionaryCompletedDelegate == null)) {
                this.onFaxServerDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFaxServerDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginFaxServerDictionaryDelegate, new object[] {
                        token}, this.onEndFaxServerDictionaryDelegate, this.onFaxServerDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFaxServerGet(string token, long reportingServerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFaxServerGet(token, reportingServerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FaxServer Mercury.Server.Application.IApplication.EndFaxServerGet(System.IAsyncResult result) {
            return base.Channel.EndFaxServerGet(result);
        }
        
        private System.IAsyncResult OnBeginFaxServerGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long reportingServerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFaxServerGet(token, reportingServerId, callback, asyncState);
        }
        
        private object[] OnEndFaxServerGet(System.IAsyncResult result) {
            Mercury.Server.Application.FaxServer retVal = ((Mercury.Server.Application.IApplication)(this)).EndFaxServerGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFaxServerGetCompleted(object state) {
            if ((this.FaxServerGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FaxServerGetCompleted(this, new FaxServerGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FaxServerGetAsync(string token, long reportingServerId) {
            this.FaxServerGetAsync(token, reportingServerId, null);
        }
        
        public void FaxServerGetAsync(string token, long reportingServerId, object userState) {
            if ((this.onBeginFaxServerGetDelegate == null)) {
                this.onBeginFaxServerGetDelegate = new BeginOperationDelegate(this.OnBeginFaxServerGet);
            }
            if ((this.onEndFaxServerGetDelegate == null)) {
                this.onEndFaxServerGetDelegate = new EndOperationDelegate(this.OnEndFaxServerGet);
            }
            if ((this.onFaxServerGetCompletedDelegate == null)) {
                this.onFaxServerGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFaxServerGetCompleted);
            }
            base.InvokeAsync(this.onBeginFaxServerGetDelegate, new object[] {
                        token,
                        reportingServerId}, this.onEndFaxServerGetDelegate, this.onFaxServerGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFaxServerGetByName(string token, string reportingServerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFaxServerGetByName(token, reportingServerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FaxServer Mercury.Server.Application.IApplication.EndFaxServerGetByName(System.IAsyncResult result) {
            return base.Channel.EndFaxServerGetByName(result);
        }
        
        private System.IAsyncResult OnBeginFaxServerGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string reportingServerName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFaxServerGetByName(token, reportingServerName, callback, asyncState);
        }
        
        private object[] OnEndFaxServerGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.FaxServer retVal = ((Mercury.Server.Application.IApplication)(this)).EndFaxServerGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFaxServerGetByNameCompleted(object state) {
            if ((this.FaxServerGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FaxServerGetByNameCompleted(this, new FaxServerGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FaxServerGetByNameAsync(string token, string reportingServerName) {
            this.FaxServerGetByNameAsync(token, reportingServerName, null);
        }
        
        public void FaxServerGetByNameAsync(string token, string reportingServerName, object userState) {
            if ((this.onBeginFaxServerGetByNameDelegate == null)) {
                this.onBeginFaxServerGetByNameDelegate = new BeginOperationDelegate(this.OnBeginFaxServerGetByName);
            }
            if ((this.onEndFaxServerGetByNameDelegate == null)) {
                this.onEndFaxServerGetByNameDelegate = new EndOperationDelegate(this.OnEndFaxServerGetByName);
            }
            if ((this.onFaxServerGetByNameCompletedDelegate == null)) {
                this.onFaxServerGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFaxServerGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginFaxServerGetByNameDelegate, new object[] {
                        token,
                        reportingServerName}, this.onEndFaxServerGetByNameDelegate, this.onFaxServerGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFaxServerSave(string token, Mercury.Server.Application.FaxServer reportingServer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFaxServerSave(token, reportingServer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndFaxServerSave(System.IAsyncResult result) {
            return base.Channel.EndFaxServerSave(result);
        }
        
        private System.IAsyncResult OnBeginFaxServerSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.FaxServer reportingServer = ((Mercury.Server.Application.FaxServer)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFaxServerSave(token, reportingServer, callback, asyncState);
        }
        
        private object[] OnEndFaxServerSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFaxServerSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFaxServerSaveCompleted(object state) {
            if ((this.FaxServerSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FaxServerSaveCompleted(this, new FaxServerSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FaxServerSaveAsync(string token, Mercury.Server.Application.FaxServer reportingServer) {
            this.FaxServerSaveAsync(token, reportingServer, null);
        }
        
        public void FaxServerSaveAsync(string token, Mercury.Server.Application.FaxServer reportingServer, object userState) {
            if ((this.onBeginFaxServerSaveDelegate == null)) {
                this.onBeginFaxServerSaveDelegate = new BeginOperationDelegate(this.OnBeginFaxServerSave);
            }
            if ((this.onEndFaxServerSaveDelegate == null)) {
                this.onEndFaxServerSaveDelegate = new EndOperationDelegate(this.OnEndFaxServerSave);
            }
            if ((this.onFaxServerSaveCompletedDelegate == null)) {
                this.onFaxServerSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFaxServerSaveCompleted);
            }
            base.InvokeAsync(this.onBeginFaxServerSaveDelegate, new object[] {
                        token,
                        reportingServer}, this.onEndFaxServerSaveDelegate, this.onFaxServerSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrintersAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintersAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PrinterCollectionResponse Mercury.Server.Application.IApplication.EndPrintersAvailable(System.IAsyncResult result) {
            return base.Channel.EndPrintersAvailable(result);
        }
        
        private System.IAsyncResult OnBeginPrintersAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrintersAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndPrintersAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.PrinterCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrintersAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrintersAvailableCompleted(object state) {
            if ((this.PrintersAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintersAvailableCompleted(this, new PrintersAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintersAvailableAsync(string token) {
            this.PrintersAvailableAsync(token, null);
        }
        
        public void PrintersAvailableAsync(string token, object userState) {
            if ((this.onBeginPrintersAvailableDelegate == null)) {
                this.onBeginPrintersAvailableDelegate = new BeginOperationDelegate(this.OnBeginPrintersAvailable);
            }
            if ((this.onEndPrintersAvailableDelegate == null)) {
                this.onEndPrintersAvailableDelegate = new EndOperationDelegate(this.OnEndPrintersAvailable);
            }
            if ((this.onPrintersAvailableCompletedDelegate == null)) {
                this.onPrintersAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintersAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginPrintersAvailableDelegate, new object[] {
                        token}, this.onEndPrintersAvailableDelegate, this.onPrintersAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrintQueuesAvailable(string token, string printServerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintQueuesAvailable(token, printServerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryStringResponse Mercury.Server.Application.IApplication.EndPrintQueuesAvailable(System.IAsyncResult result) {
            return base.Channel.EndPrintQueuesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginPrintQueuesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string printServerName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrintQueuesAvailable(token, printServerName, callback, asyncState);
        }
        
        private object[] OnEndPrintQueuesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryStringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrintQueuesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrintQueuesAvailableCompleted(object state) {
            if ((this.PrintQueuesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintQueuesAvailableCompleted(this, new PrintQueuesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintQueuesAvailableAsync(string token, string printServerName) {
            this.PrintQueuesAvailableAsync(token, printServerName, null);
        }
        
        public void PrintQueuesAvailableAsync(string token, string printServerName, object userState) {
            if ((this.onBeginPrintQueuesAvailableDelegate == null)) {
                this.onBeginPrintQueuesAvailableDelegate = new BeginOperationDelegate(this.OnBeginPrintQueuesAvailable);
            }
            if ((this.onEndPrintQueuesAvailableDelegate == null)) {
                this.onEndPrintQueuesAvailableDelegate = new EndOperationDelegate(this.OnEndPrintQueuesAvailable);
            }
            if ((this.onPrintQueuesAvailableCompletedDelegate == null)) {
                this.onPrintQueuesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintQueuesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginPrintQueuesAvailableDelegate, new object[] {
                        token,
                        printServerName}, this.onEndPrintQueuesAvailableDelegate, this.onPrintQueuesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrinterDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrinterDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndPrinterDictionary(System.IAsyncResult result) {
            return base.Channel.EndPrinterDictionary(result);
        }
        
        private System.IAsyncResult OnBeginPrinterDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrinterDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndPrinterDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrinterDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrinterDictionaryCompleted(object state) {
            if ((this.PrinterDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrinterDictionaryCompleted(this, new PrinterDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrinterDictionaryAsync(string token) {
            this.PrinterDictionaryAsync(token, null);
        }
        
        public void PrinterDictionaryAsync(string token, object userState) {
            if ((this.onBeginPrinterDictionaryDelegate == null)) {
                this.onBeginPrinterDictionaryDelegate = new BeginOperationDelegate(this.OnBeginPrinterDictionary);
            }
            if ((this.onEndPrinterDictionaryDelegate == null)) {
                this.onEndPrinterDictionaryDelegate = new EndOperationDelegate(this.OnEndPrinterDictionary);
            }
            if ((this.onPrinterDictionaryCompletedDelegate == null)) {
                this.onPrinterDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrinterDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginPrinterDictionaryDelegate, new object[] {
                        token}, this.onEndPrinterDictionaryDelegate, this.onPrinterDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrinterGet(string token, long printerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrinterGet(token, printerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Printer Mercury.Server.Application.IApplication.EndPrinterGet(System.IAsyncResult result) {
            return base.Channel.EndPrinterGet(result);
        }
        
        private System.IAsyncResult OnBeginPrinterGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long printerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrinterGet(token, printerId, callback, asyncState);
        }
        
        private object[] OnEndPrinterGet(System.IAsyncResult result) {
            Mercury.Server.Application.Printer retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrinterGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrinterGetCompleted(object state) {
            if ((this.PrinterGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrinterGetCompleted(this, new PrinterGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrinterGetAsync(string token, long printerId) {
            this.PrinterGetAsync(token, printerId, null);
        }
        
        public void PrinterGetAsync(string token, long printerId, object userState) {
            if ((this.onBeginPrinterGetDelegate == null)) {
                this.onBeginPrinterGetDelegate = new BeginOperationDelegate(this.OnBeginPrinterGet);
            }
            if ((this.onEndPrinterGetDelegate == null)) {
                this.onEndPrinterGetDelegate = new EndOperationDelegate(this.OnEndPrinterGet);
            }
            if ((this.onPrinterGetCompletedDelegate == null)) {
                this.onPrinterGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrinterGetCompleted);
            }
            base.InvokeAsync(this.onBeginPrinterGetDelegate, new object[] {
                        token,
                        printerId}, this.onEndPrinterGetDelegate, this.onPrinterGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrinterGetByName(string token, string printerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrinterGetByName(token, printerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Printer Mercury.Server.Application.IApplication.EndPrinterGetByName(System.IAsyncResult result) {
            return base.Channel.EndPrinterGetByName(result);
        }
        
        private System.IAsyncResult OnBeginPrinterGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string printerName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrinterGetByName(token, printerName, callback, asyncState);
        }
        
        private object[] OnEndPrinterGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.Printer retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrinterGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrinterGetByNameCompleted(object state) {
            if ((this.PrinterGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrinterGetByNameCompleted(this, new PrinterGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrinterGetByNameAsync(string token, string printerName) {
            this.PrinterGetByNameAsync(token, printerName, null);
        }
        
        public void PrinterGetByNameAsync(string token, string printerName, object userState) {
            if ((this.onBeginPrinterGetByNameDelegate == null)) {
                this.onBeginPrinterGetByNameDelegate = new BeginOperationDelegate(this.OnBeginPrinterGetByName);
            }
            if ((this.onEndPrinterGetByNameDelegate == null)) {
                this.onEndPrinterGetByNameDelegate = new EndOperationDelegate(this.OnEndPrinterGetByName);
            }
            if ((this.onPrinterGetByNameCompletedDelegate == null)) {
                this.onPrinterGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrinterGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginPrinterGetByNameDelegate, new object[] {
                        token,
                        printerName}, this.onEndPrinterGetByNameDelegate, this.onPrinterGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrinterCapabilitiesGet(string token, string printServerName, string printQueueName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrinterCapabilitiesGet(token, printServerName, printQueueName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PrinterCapabilities Mercury.Server.Application.IApplication.EndPrinterCapabilitiesGet(System.IAsyncResult result) {
            return base.Channel.EndPrinterCapabilitiesGet(result);
        }
        
        private System.IAsyncResult OnBeginPrinterCapabilitiesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string printServerName = ((string)(inValues[1]));
            string printQueueName = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrinterCapabilitiesGet(token, printServerName, printQueueName, callback, asyncState);
        }
        
        private object[] OnEndPrinterCapabilitiesGet(System.IAsyncResult result) {
            Mercury.Server.Application.PrinterCapabilities retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrinterCapabilitiesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrinterCapabilitiesGetCompleted(object state) {
            if ((this.PrinterCapabilitiesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrinterCapabilitiesGetCompleted(this, new PrinterCapabilitiesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrinterCapabilitiesGetAsync(string token, string printServerName, string printQueueName) {
            this.PrinterCapabilitiesGetAsync(token, printServerName, printQueueName, null);
        }
        
        public void PrinterCapabilitiesGetAsync(string token, string printServerName, string printQueueName, object userState) {
            if ((this.onBeginPrinterCapabilitiesGetDelegate == null)) {
                this.onBeginPrinterCapabilitiesGetDelegate = new BeginOperationDelegate(this.OnBeginPrinterCapabilitiesGet);
            }
            if ((this.onEndPrinterCapabilitiesGetDelegate == null)) {
                this.onEndPrinterCapabilitiesGetDelegate = new EndOperationDelegate(this.OnEndPrinterCapabilitiesGet);
            }
            if ((this.onPrinterCapabilitiesGetCompletedDelegate == null)) {
                this.onPrinterCapabilitiesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrinterCapabilitiesGetCompleted);
            }
            base.InvokeAsync(this.onBeginPrinterCapabilitiesGetDelegate, new object[] {
                        token,
                        printServerName,
                        printQueueName}, this.onEndPrinterCapabilitiesGetDelegate, this.onPrinterCapabilitiesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPrinterSave(string token, Mercury.Server.Application.Printer printer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrinterSave(token, printer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndPrinterSave(System.IAsyncResult result) {
            return base.Channel.EndPrinterSave(result);
        }
        
        private System.IAsyncResult OnBeginPrinterSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Printer printer = ((Mercury.Server.Application.Printer)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPrinterSave(token, printer, callback, asyncState);
        }
        
        private object[] OnEndPrinterSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPrinterSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrinterSaveCompleted(object state) {
            if ((this.PrinterSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrinterSaveCompleted(this, new PrinterSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrinterSaveAsync(string token, Mercury.Server.Application.Printer printer) {
            this.PrinterSaveAsync(token, printer, null);
        }
        
        public void PrinterSaveAsync(string token, Mercury.Server.Application.Printer printer, object userState) {
            if ((this.onBeginPrinterSaveDelegate == null)) {
                this.onBeginPrinterSaveDelegate = new BeginOperationDelegate(this.OnBeginPrinterSave);
            }
            if ((this.onEndPrinterSaveDelegate == null)) {
                this.onEndPrinterSaveDelegate = new EndOperationDelegate(this.OnEndPrinterSave);
            }
            if ((this.onPrinterSaveCompletedDelegate == null)) {
                this.onPrinterSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrinterSaveCompleted);
            }
            base.InvokeAsync(this.onBeginPrinterSaveDelegate, new object[] {
                        token,
                        printer}, this.onEndPrinterSaveDelegate, this.onPrinterSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSearchGlobal(string token, string criteria, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchGlobal(token, criteria, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultsGlobalResponse Mercury.Server.Application.IApplication.EndSearchGlobal(System.IAsyncResult result) {
            return base.Channel.EndSearchGlobal(result);
        }
        
        private System.IAsyncResult OnBeginSearchGlobal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string criteria = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSearchGlobal(token, criteria, callback, asyncState);
        }
        
        private object[] OnEndSearchGlobal(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultsGlobalResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSearchGlobal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchGlobalCompleted(object state) {
            if ((this.SearchGlobalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchGlobalCompleted(this, new SearchGlobalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchGlobalAsync(string token, string criteria) {
            this.SearchGlobalAsync(token, criteria, null);
        }
        
        public void SearchGlobalAsync(string token, string criteria, object userState) {
            if ((this.onBeginSearchGlobalDelegate == null)) {
                this.onBeginSearchGlobalDelegate = new BeginOperationDelegate(this.OnBeginSearchGlobal);
            }
            if ((this.onEndSearchGlobalDelegate == null)) {
                this.onEndSearchGlobalDelegate = new EndOperationDelegate(this.OnEndSearchGlobal);
            }
            if ((this.onSearchGlobalCompletedDelegate == null)) {
                this.onSearchGlobalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchGlobalCompleted);
            }
            base.InvokeAsync(this.onBeginSearchGlobalDelegate, new object[] {
                        token,
                        criteria}, this.onEndSearchGlobalDelegate, this.onSearchGlobalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSearchMemberByName(string token, string memberName, System.Nullable<System.DateTime> birthDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMemberByName(token, memberName, birthDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultsMemberResponse Mercury.Server.Application.IApplication.EndSearchMemberByName(System.IAsyncResult result) {
            return base.Channel.EndSearchMemberByName(result);
        }
        
        private System.IAsyncResult OnBeginSearchMemberByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string memberName = ((string)(inValues[1]));
            System.Nullable<System.DateTime> birthDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSearchMemberByName(token, memberName, birthDate, callback, asyncState);
        }
        
        private object[] OnEndSearchMemberByName(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultsMemberResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSearchMemberByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMemberByNameCompleted(object state) {
            if ((this.SearchMemberByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMemberByNameCompleted(this, new SearchMemberByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMemberByNameAsync(string token, string memberName, System.Nullable<System.DateTime> birthDate) {
            this.SearchMemberByNameAsync(token, memberName, birthDate, null);
        }
        
        public void SearchMemberByNameAsync(string token, string memberName, System.Nullable<System.DateTime> birthDate, object userState) {
            if ((this.onBeginSearchMemberByNameDelegate == null)) {
                this.onBeginSearchMemberByNameDelegate = new BeginOperationDelegate(this.OnBeginSearchMemberByName);
            }
            if ((this.onEndSearchMemberByNameDelegate == null)) {
                this.onEndSearchMemberByNameDelegate = new EndOperationDelegate(this.OnEndSearchMemberByName);
            }
            if ((this.onSearchMemberByNameCompletedDelegate == null)) {
                this.onSearchMemberByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMemberByNameCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMemberByNameDelegate, new object[] {
                        token,
                        memberName,
                        birthDate}, this.onEndSearchMemberByNameDelegate, this.onSearchMemberByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSearchMemberById(string token, string memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMemberById(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultsMemberResponse Mercury.Server.Application.IApplication.EndSearchMemberById(System.IAsyncResult result) {
            return base.Channel.EndSearchMemberById(result);
        }
        
        private System.IAsyncResult OnBeginSearchMemberById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string memberId = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSearchMemberById(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndSearchMemberById(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultsMemberResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSearchMemberById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMemberByIdCompleted(object state) {
            if ((this.SearchMemberByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMemberByIdCompleted(this, new SearchMemberByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMemberByIdAsync(string token, string memberId) {
            this.SearchMemberByIdAsync(token, memberId, null);
        }
        
        public void SearchMemberByIdAsync(string token, string memberId, object userState) {
            if ((this.onBeginSearchMemberByIdDelegate == null)) {
                this.onBeginSearchMemberByIdDelegate = new BeginOperationDelegate(this.OnBeginSearchMemberById);
            }
            if ((this.onEndSearchMemberByIdDelegate == null)) {
                this.onEndSearchMemberByIdDelegate = new EndOperationDelegate(this.OnEndSearchMemberById);
            }
            if ((this.onSearchMemberByIdCompletedDelegate == null)) {
                this.onSearchMemberByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMemberByIdCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMemberByIdDelegate, new object[] {
                        token,
                        memberId}, this.onEndSearchMemberByIdDelegate, this.onSearchMemberByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSearchMember(string token, string memberName, System.Nullable<System.DateTime> birthDate, string memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMember(token, memberName, birthDate, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultsMemberResponse Mercury.Server.Application.IApplication.EndSearchMember(System.IAsyncResult result) {
            return base.Channel.EndSearchMember(result);
        }
        
        private System.IAsyncResult OnBeginSearchMember(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string memberName = ((string)(inValues[1]));
            System.Nullable<System.DateTime> birthDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            string memberId = ((string)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSearchMember(token, memberName, birthDate, memberId, callback, asyncState);
        }
        
        private object[] OnEndSearchMember(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultsMemberResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSearchMember(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMemberCompleted(object state) {
            if ((this.SearchMemberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMemberCompleted(this, new SearchMemberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMemberAsync(string token, string memberName, System.Nullable<System.DateTime> birthDate, string memberId) {
            this.SearchMemberAsync(token, memberName, birthDate, memberId, null);
        }
        
        public void SearchMemberAsync(string token, string memberName, System.Nullable<System.DateTime> birthDate, string memberId, object userState) {
            if ((this.onBeginSearchMemberDelegate == null)) {
                this.onBeginSearchMemberDelegate = new BeginOperationDelegate(this.OnBeginSearchMember);
            }
            if ((this.onEndSearchMemberDelegate == null)) {
                this.onEndSearchMemberDelegate = new EndOperationDelegate(this.OnEndSearchMember);
            }
            if ((this.onSearchMemberCompletedDelegate == null)) {
                this.onSearchMemberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMemberCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMemberDelegate, new object[] {
                        token,
                        memberName,
                        birthDate,
                        memberId}, this.onEndSearchMemberDelegate, this.onSearchMemberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSearchProvider(string token, string memberName, string providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchProvider(token, memberName, providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultsProviderResponse Mercury.Server.Application.IApplication.EndSearchProvider(System.IAsyncResult result) {
            return base.Channel.EndSearchProvider(result);
        }
        
        private System.IAsyncResult OnBeginSearchProvider(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string memberName = ((string)(inValues[1]));
            string providerId = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSearchProvider(token, memberName, providerId, callback, asyncState);
        }
        
        private object[] OnEndSearchProvider(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultsProviderResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSearchProvider(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchProviderCompleted(object state) {
            if ((this.SearchProviderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchProviderCompleted(this, new SearchProviderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchProviderAsync(string token, string memberName, string providerId) {
            this.SearchProviderAsync(token, memberName, providerId, null);
        }
        
        public void SearchProviderAsync(string token, string memberName, string providerId, object userState) {
            if ((this.onBeginSearchProviderDelegate == null)) {
                this.onBeginSearchProviderDelegate = new BeginOperationDelegate(this.OnBeginSearchProvider);
            }
            if ((this.onEndSearchProviderDelegate == null)) {
                this.onEndSearchProviderDelegate = new EndOperationDelegate(this.OnEndSearchProvider);
            }
            if ((this.onSearchProviderCompletedDelegate == null)) {
                this.onSearchProviderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchProviderCompleted);
            }
            base.InvokeAsync(this.onBeginSearchProviderDelegate, new object[] {
                        token,
                        memberName,
                        providerId}, this.onEndSearchProviderDelegate, this.onSearchProviderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSearchProviderByName(string token, string providerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchProviderByName(token, providerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultsProviderResponse Mercury.Server.Application.IApplication.EndSearchProviderByName(System.IAsyncResult result) {
            return base.Channel.EndSearchProviderByName(result);
        }
        
        private System.IAsyncResult OnBeginSearchProviderByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string providerName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSearchProviderByName(token, providerName, callback, asyncState);
        }
        
        private object[] OnEndSearchProviderByName(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultsProviderResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSearchProviderByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchProviderByNameCompleted(object state) {
            if ((this.SearchProviderByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchProviderByNameCompleted(this, new SearchProviderByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchProviderByNameAsync(string token, string providerName) {
            this.SearchProviderByNameAsync(token, providerName, null);
        }
        
        public void SearchProviderByNameAsync(string token, string providerName, object userState) {
            if ((this.onBeginSearchProviderByNameDelegate == null)) {
                this.onBeginSearchProviderByNameDelegate = new BeginOperationDelegate(this.OnBeginSearchProviderByName);
            }
            if ((this.onEndSearchProviderByNameDelegate == null)) {
                this.onEndSearchProviderByNameDelegate = new EndOperationDelegate(this.OnEndSearchProviderByName);
            }
            if ((this.onSearchProviderByNameCompletedDelegate == null)) {
                this.onSearchProviderByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchProviderByNameCompleted);
            }
            base.InvokeAsync(this.onBeginSearchProviderByNameDelegate, new object[] {
                        token,
                        providerName}, this.onEndSearchProviderByNameDelegate, this.onSearchProviderByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemClose(string token, long workQueueItemId, long workOutcomeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemClose(token, workQueueItemId, workOutcomeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndWorkQueueItemClose(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemClose(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            long workOutcomeId = ((long)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemClose(token, workQueueItemId, workOutcomeId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemClose(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemClose(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemCloseCompleted(object state) {
            if ((this.WorkQueueItemCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemCloseCompleted(this, new WorkQueueItemCloseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemCloseAsync(string token, long workQueueItemId, long workOutcomeId) {
            this.WorkQueueItemCloseAsync(token, workQueueItemId, workOutcomeId, null);
        }
        
        public void WorkQueueItemCloseAsync(string token, long workQueueItemId, long workOutcomeId, object userState) {
            if ((this.onBeginWorkQueueItemCloseDelegate == null)) {
                this.onBeginWorkQueueItemCloseDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemClose);
            }
            if ((this.onEndWorkQueueItemCloseDelegate == null)) {
                this.onEndWorkQueueItemCloseDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemClose);
            }
            if ((this.onWorkQueueItemCloseCompletedDelegate == null)) {
                this.onWorkQueueItemCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemCloseCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemCloseDelegate, new object[] {
                        token,
                        workQueueItemId,
                        workOutcomeId}, this.onEndWorkQueueItemCloseDelegate, this.onWorkQueueItemCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemSuspend(string token, long workQueueItemId, string lastStep, string nextStep, int constraintDays, int milestoneDays, bool releaseItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemSuspend(token, workQueueItemId, lastStep, nextStep, constraintDays, milestoneDays, releaseItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndWorkQueueItemSuspend(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemSuspend(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemSuspend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            string lastStep = ((string)(inValues[2]));
            string nextStep = ((string)(inValues[3]));
            int constraintDays = ((int)(inValues[4]));
            int milestoneDays = ((int)(inValues[5]));
            bool releaseItem = ((bool)(inValues[6]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemSuspend(token, workQueueItemId, lastStep, nextStep, constraintDays, milestoneDays, releaseItem, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemSuspend(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemSuspend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemSuspendCompleted(object state) {
            if ((this.WorkQueueItemSuspendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemSuspendCompleted(this, new WorkQueueItemSuspendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemSuspendAsync(string token, long workQueueItemId, string lastStep, string nextStep, int constraintDays, int milestoneDays, bool releaseItem) {
            this.WorkQueueItemSuspendAsync(token, workQueueItemId, lastStep, nextStep, constraintDays, milestoneDays, releaseItem, null);
        }
        
        public void WorkQueueItemSuspendAsync(string token, long workQueueItemId, string lastStep, string nextStep, int constraintDays, int milestoneDays, bool releaseItem, object userState) {
            if ((this.onBeginWorkQueueItemSuspendDelegate == null)) {
                this.onBeginWorkQueueItemSuspendDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemSuspend);
            }
            if ((this.onEndWorkQueueItemSuspendDelegate == null)) {
                this.onEndWorkQueueItemSuspendDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemSuspend);
            }
            if ((this.onWorkQueueItemSuspendCompletedDelegate == null)) {
                this.onWorkQueueItemSuspendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemSuspendCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemSuspendDelegate, new object[] {
                        token,
                        workQueueItemId,
                        lastStep,
                        nextStep,
                        constraintDays,
                        milestoneDays,
                        releaseItem}, this.onEndWorkQueueItemSuspendDelegate, this.onWorkQueueItemSuspendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemSendersGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemSendersGet(token, workQueueItemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueItemSenderCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueueItemSendersGet(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemSendersGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemSendersGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemSendersGet(token, workQueueItemId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemSendersGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueItemSenderCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemSendersGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemSendersGetCompleted(object state) {
            if ((this.WorkQueueItemSendersGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemSendersGetCompleted(this, new WorkQueueItemSendersGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemSendersGetAsync(string token, long workQueueItemId) {
            this.WorkQueueItemSendersGetAsync(token, workQueueItemId, null);
        }
        
        public void WorkQueueItemSendersGetAsync(string token, long workQueueItemId, object userState) {
            if ((this.onBeginWorkQueueItemSendersGetDelegate == null)) {
                this.onBeginWorkQueueItemSendersGetDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemSendersGet);
            }
            if ((this.onEndWorkQueueItemSendersGetDelegate == null)) {
                this.onEndWorkQueueItemSendersGetDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemSendersGet);
            }
            if ((this.onWorkQueueItemSendersGetCompletedDelegate == null)) {
                this.onWorkQueueItemSendersGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemSendersGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemSendersGetDelegate, new object[] {
                        token,
                        workQueueItemId}, this.onEndWorkQueueItemSendersGetDelegate, this.onWorkQueueItemSendersGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemAssignmentHistoryGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemAssignmentHistoryGet(token, workQueueItemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueueItemAssignmentHistoryGet(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemAssignmentHistoryGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemAssignmentHistoryGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemAssignmentHistoryGet(token, workQueueItemId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemAssignmentHistoryGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemAssignmentHistoryGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemAssignmentHistoryGetCompleted(object state) {
            if ((this.WorkQueueItemAssignmentHistoryGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemAssignmentHistoryGetCompleted(this, new WorkQueueItemAssignmentHistoryGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemAssignmentHistoryGetAsync(string token, long workQueueItemId) {
            this.WorkQueueItemAssignmentHistoryGetAsync(token, workQueueItemId, null);
        }
        
        public void WorkQueueItemAssignmentHistoryGetAsync(string token, long workQueueItemId, object userState) {
            if ((this.onBeginWorkQueueItemAssignmentHistoryGetDelegate == null)) {
                this.onBeginWorkQueueItemAssignmentHistoryGetDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemAssignmentHistoryGet);
            }
            if ((this.onEndWorkQueueItemAssignmentHistoryGetDelegate == null)) {
                this.onEndWorkQueueItemAssignmentHistoryGetDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemAssignmentHistoryGet);
            }
            if ((this.onWorkQueueItemAssignmentHistoryGetCompletedDelegate == null)) {
                this.onWorkQueueItemAssignmentHistoryGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemAssignmentHistoryGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemAssignmentHistoryGetDelegate, new object[] {
                        token,
                        workQueueItemId}, this.onEndWorkQueueItemAssignmentHistoryGetDelegate, this.onWorkQueueItemAssignmentHistoryGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemWorkflowStepsGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemWorkflowStepsGet(token, workQueueItemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueueItemWorkflowStepsGet(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemWorkflowStepsGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemWorkflowStepsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemWorkflowStepsGet(token, workQueueItemId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemWorkflowStepsGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemWorkflowStepsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemWorkflowStepsGetCompleted(object state) {
            if ((this.WorkQueueItemWorkflowStepsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemWorkflowStepsGetCompleted(this, new WorkQueueItemWorkflowStepsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemWorkflowStepsGetAsync(string token, long workQueueItemId) {
            this.WorkQueueItemWorkflowStepsGetAsync(token, workQueueItemId, null);
        }
        
        public void WorkQueueItemWorkflowStepsGetAsync(string token, long workQueueItemId, object userState) {
            if ((this.onBeginWorkQueueItemWorkflowStepsGetDelegate == null)) {
                this.onBeginWorkQueueItemWorkflowStepsGetDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemWorkflowStepsGet);
            }
            if ((this.onEndWorkQueueItemWorkflowStepsGetDelegate == null)) {
                this.onEndWorkQueueItemWorkflowStepsGetDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemWorkflowStepsGet);
            }
            if ((this.onWorkQueueItemWorkflowStepsGetCompletedDelegate == null)) {
                this.onWorkQueueItemWorkflowStepsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemWorkflowStepsGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemWorkflowStepsGetDelegate, new object[] {
                        token,
                        workQueueItemId}, this.onEndWorkQueueItemWorkflowStepsGetDelegate, this.onWorkQueueItemWorkflowStepsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemsGetCount(string token, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemsGetCount(token, filters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndWorkQueueItemsGetCount(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters = ((System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor>)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemsGetCount(token, filters, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemsGetCountCompleted(object state) {
            if ((this.WorkQueueItemsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemsGetCountCompleted(this, new WorkQueueItemsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemsGetCountAsync(string token, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters) {
            this.WorkQueueItemsGetCountAsync(token, filters, null);
        }
        
        public void WorkQueueItemsGetCountAsync(string token, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, object userState) {
            if ((this.onBeginWorkQueueItemsGetCountDelegate == null)) {
                this.onBeginWorkQueueItemsGetCountDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemsGetCount);
            }
            if ((this.onEndWorkQueueItemsGetCountDelegate == null)) {
                this.onEndWorkQueueItemsGetCountDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemsGetCount);
            }
            if ((this.onWorkQueueItemsGetCountCompletedDelegate == null)) {
                this.onWorkQueueItemsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemsGetCountDelegate, new object[] {
                        token,
                        filters}, this.onEndWorkQueueItemsGetCountDelegate, this.onWorkQueueItemsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemsGetCountByView(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemsGetCountByView(token, workQueueView, filters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndWorkQueueItemsGetCountByView(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemsGetCountByView(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemsGetCountByView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkQueueView workQueueView = ((Mercury.Server.Application.WorkQueueView)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters = ((System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor>)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemsGetCountByView(token, workQueueView, filters, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemsGetCountByView(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemsGetCountByView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemsGetCountByViewCompleted(object state) {
            if ((this.WorkQueueItemsGetCountByViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemsGetCountByViewCompleted(this, new WorkQueueItemsGetCountByViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemsGetCountByViewAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters) {
            this.WorkQueueItemsGetCountByViewAsync(token, workQueueView, filters, null);
        }
        
        public void WorkQueueItemsGetCountByViewAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, object userState) {
            if ((this.onBeginWorkQueueItemsGetCountByViewDelegate == null)) {
                this.onBeginWorkQueueItemsGetCountByViewDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemsGetCountByView);
            }
            if ((this.onEndWorkQueueItemsGetCountByViewDelegate == null)) {
                this.onEndWorkQueueItemsGetCountByViewDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemsGetCountByView);
            }
            if ((this.onWorkQueueItemsGetCountByViewCompletedDelegate == null)) {
                this.onWorkQueueItemsGetCountByViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemsGetCountByViewCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemsGetCountByViewDelegate, new object[] {
                        token,
                        workQueueView,
                        filters}, this.onEndWorkQueueItemsGetCountByViewDelegate, this.onWorkQueueItemsGetCountByViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemsGetByViewPage(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor> sorts, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemsGetByViewPage(token, workQueueView, filters, sorts, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueItemCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueueItemsGetByViewPage(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemsGetByViewPage(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemsGetByViewPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkQueueView workQueueView = ((Mercury.Server.Application.WorkQueueView)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters = ((System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor>)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor> sorts = ((System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor>)(inValues[3]));
            int initialRow = ((int)(inValues[4]));
            int count = ((int)(inValues[5]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemsGetByViewPage(token, workQueueView, filters, sorts, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemsGetByViewPage(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueItemCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemsGetByViewPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemsGetByViewPageCompleted(object state) {
            if ((this.WorkQueueItemsGetByViewPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemsGetByViewPageCompleted(this, new WorkQueueItemsGetByViewPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemsGetByViewPageAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor> sorts, int initialRow, int count) {
            this.WorkQueueItemsGetByViewPageAsync(token, workQueueView, filters, sorts, initialRow, count, null);
        }
        
        public void WorkQueueItemsGetByViewPageAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor> sorts, int initialRow, int count, object userState) {
            if ((this.onBeginWorkQueueItemsGetByViewPageDelegate == null)) {
                this.onBeginWorkQueueItemsGetByViewPageDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemsGetByViewPage);
            }
            if ((this.onEndWorkQueueItemsGetByViewPageDelegate == null)) {
                this.onEndWorkQueueItemsGetByViewPageDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemsGetByViewPage);
            }
            if ((this.onWorkQueueItemsGetByViewPageCompletedDelegate == null)) {
                this.onWorkQueueItemsGetByViewPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemsGetByViewPageCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemsGetByViewPageDelegate, new object[] {
                        token,
                        workQueueView,
                        filters,
                        sorts,
                        initialRow,
                        count}, this.onEndWorkQueueItemsGetByViewPageDelegate, this.onWorkQueueItemsGetByViewPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkTeamsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkTeamsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkTeamCollectionResponse Mercury.Server.Application.IApplication.EndWorkTeamsAvailable(System.IAsyncResult result) {
            return base.Channel.EndWorkTeamsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginWorkTeamsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkTeamsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndWorkTeamsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.WorkTeamCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkTeamsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkTeamsAvailableCompleted(object state) {
            if ((this.WorkTeamsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkTeamsAvailableCompleted(this, new WorkTeamsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkTeamsAvailableAsync(string token) {
            this.WorkTeamsAvailableAsync(token, null);
        }
        
        public void WorkTeamsAvailableAsync(string token, object userState) {
            if ((this.onBeginWorkTeamsAvailableDelegate == null)) {
                this.onBeginWorkTeamsAvailableDelegate = new BeginOperationDelegate(this.OnBeginWorkTeamsAvailable);
            }
            if ((this.onEndWorkTeamsAvailableDelegate == null)) {
                this.onEndWorkTeamsAvailableDelegate = new EndOperationDelegate(this.OnEndWorkTeamsAvailable);
            }
            if ((this.onWorkTeamsAvailableCompletedDelegate == null)) {
                this.onWorkTeamsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkTeamsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginWorkTeamsAvailableDelegate, new object[] {
                        token}, this.onEndWorkTeamsAvailableDelegate, this.onWorkTeamsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkTeamsForSession(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkTeamsForSession(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkTeamCollectionResponse Mercury.Server.Application.IApplication.EndWorkTeamsForSession(System.IAsyncResult result) {
            return base.Channel.EndWorkTeamsForSession(result);
        }
        
        private System.IAsyncResult OnBeginWorkTeamsForSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkTeamsForSession(token, callback, asyncState);
        }
        
        private object[] OnEndWorkTeamsForSession(System.IAsyncResult result) {
            Mercury.Server.Application.WorkTeamCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkTeamsForSession(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkTeamsForSessionCompleted(object state) {
            if ((this.WorkTeamsForSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkTeamsForSessionCompleted(this, new WorkTeamsForSessionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkTeamsForSessionAsync(string token) {
            this.WorkTeamsForSessionAsync(token, null);
        }
        
        public void WorkTeamsForSessionAsync(string token, object userState) {
            if ((this.onBeginWorkTeamsForSessionDelegate == null)) {
                this.onBeginWorkTeamsForSessionDelegate = new BeginOperationDelegate(this.OnBeginWorkTeamsForSession);
            }
            if ((this.onEndWorkTeamsForSessionDelegate == null)) {
                this.onEndWorkTeamsForSessionDelegate = new EndOperationDelegate(this.OnEndWorkTeamsForSession);
            }
            if ((this.onWorkTeamsForSessionCompletedDelegate == null)) {
                this.onWorkTeamsForSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkTeamsForSessionCompleted);
            }
            base.InvokeAsync(this.onBeginWorkTeamsForSessionDelegate, new object[] {
                        token}, this.onEndWorkTeamsForSessionDelegate, this.onWorkTeamsForSessionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkTeamGet(string token, long workTeamId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkTeamGet(token, workTeamId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkTeam Mercury.Server.Application.IApplication.EndWorkTeamGet(System.IAsyncResult result) {
            return base.Channel.EndWorkTeamGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkTeamGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workTeamId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkTeamGet(token, workTeamId, callback, asyncState);
        }
        
        private object[] OnEndWorkTeamGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkTeam retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkTeamGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkTeamGetCompleted(object state) {
            if ((this.WorkTeamGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkTeamGetCompleted(this, new WorkTeamGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkTeamGetAsync(string token, long workTeamId) {
            this.WorkTeamGetAsync(token, workTeamId, null);
        }
        
        public void WorkTeamGetAsync(string token, long workTeamId, object userState) {
            if ((this.onBeginWorkTeamGetDelegate == null)) {
                this.onBeginWorkTeamGetDelegate = new BeginOperationDelegate(this.OnBeginWorkTeamGet);
            }
            if ((this.onEndWorkTeamGetDelegate == null)) {
                this.onEndWorkTeamGetDelegate = new EndOperationDelegate(this.OnEndWorkTeamGet);
            }
            if ((this.onWorkTeamGetCompletedDelegate == null)) {
                this.onWorkTeamGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkTeamGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkTeamGetDelegate, new object[] {
                        token,
                        workTeamId}, this.onEndWorkTeamGetDelegate, this.onWorkTeamGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkTeamGetByName(string token, string workTeamName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkTeamGetByName(token, workTeamName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkTeam Mercury.Server.Application.IApplication.EndWorkTeamGetByName(System.IAsyncResult result) {
            return base.Channel.EndWorkTeamGetByName(result);
        }
        
        private System.IAsyncResult OnBeginWorkTeamGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string workTeamName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkTeamGetByName(token, workTeamName, callback, asyncState);
        }
        
        private object[] OnEndWorkTeamGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.WorkTeam retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkTeamGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkTeamGetByNameCompleted(object state) {
            if ((this.WorkTeamGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkTeamGetByNameCompleted(this, new WorkTeamGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkTeamGetByNameAsync(string token, string workTeamName) {
            this.WorkTeamGetByNameAsync(token, workTeamName, null);
        }
        
        public void WorkTeamGetByNameAsync(string token, string workTeamName, object userState) {
            if ((this.onBeginWorkTeamGetByNameDelegate == null)) {
                this.onBeginWorkTeamGetByNameDelegate = new BeginOperationDelegate(this.OnBeginWorkTeamGetByName);
            }
            if ((this.onEndWorkTeamGetByNameDelegate == null)) {
                this.onEndWorkTeamGetByNameDelegate = new EndOperationDelegate(this.OnEndWorkTeamGetByName);
            }
            if ((this.onWorkTeamGetByNameCompletedDelegate == null)) {
                this.onWorkTeamGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkTeamGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginWorkTeamGetByNameDelegate, new object[] {
                        token,
                        workTeamName}, this.onEndWorkTeamGetByNameDelegate, this.onWorkTeamGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkTeamSave(string token, Mercury.Server.Application.WorkTeam workTeam, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkTeamSave(token, workTeam, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndWorkTeamSave(System.IAsyncResult result) {
            return base.Channel.EndWorkTeamSave(result);
        }
        
        private System.IAsyncResult OnBeginWorkTeamSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkTeam workTeam = ((Mercury.Server.Application.WorkTeam)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkTeamSave(token, workTeam, callback, asyncState);
        }
        
        private object[] OnEndWorkTeamSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkTeamSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkTeamSaveCompleted(object state) {
            if ((this.WorkTeamSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkTeamSaveCompleted(this, new WorkTeamSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkTeamSaveAsync(string token, Mercury.Server.Application.WorkTeam workTeam) {
            this.WorkTeamSaveAsync(token, workTeam, null);
        }
        
        public void WorkTeamSaveAsync(string token, Mercury.Server.Application.WorkTeam workTeam, object userState) {
            if ((this.onBeginWorkTeamSaveDelegate == null)) {
                this.onBeginWorkTeamSaveDelegate = new BeginOperationDelegate(this.OnBeginWorkTeamSave);
            }
            if ((this.onEndWorkTeamSaveDelegate == null)) {
                this.onEndWorkTeamSaveDelegate = new EndOperationDelegate(this.OnEndWorkTeamSave);
            }
            if ((this.onWorkTeamSaveCompletedDelegate == null)) {
                this.onWorkTeamSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkTeamSaveCompleted);
            }
            base.InvokeAsync(this.onBeginWorkTeamSaveDelegate, new object[] {
                        token,
                        workTeam}, this.onEndWorkTeamSaveDelegate, this.onWorkTeamSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueViewsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueViewsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueViewCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueueViewsAvailable(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueViewsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueViewsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueViewsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueViewsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueViewCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueViewsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueViewsAvailableCompleted(object state) {
            if ((this.WorkQueueViewsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueViewsAvailableCompleted(this, new WorkQueueViewsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueViewsAvailableAsync(string token) {
            this.WorkQueueViewsAvailableAsync(token, null);
        }
        
        public void WorkQueueViewsAvailableAsync(string token, object userState) {
            if ((this.onBeginWorkQueueViewsAvailableDelegate == null)) {
                this.onBeginWorkQueueViewsAvailableDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueViewsAvailable);
            }
            if ((this.onEndWorkQueueViewsAvailableDelegate == null)) {
                this.onEndWorkQueueViewsAvailableDelegate = new EndOperationDelegate(this.OnEndWorkQueueViewsAvailable);
            }
            if ((this.onWorkQueueViewsAvailableCompletedDelegate == null)) {
                this.onWorkQueueViewsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueViewsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueViewsAvailableDelegate, new object[] {
                        token}, this.onEndWorkQueueViewsAvailableDelegate, this.onWorkQueueViewsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueViewDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueViewDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndWorkQueueViewDictionary(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueViewDictionary(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueViewDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueViewDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueViewDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueViewDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueViewDictionaryCompleted(object state) {
            if ((this.WorkQueueViewDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueViewDictionaryCompleted(this, new WorkQueueViewDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueViewDictionaryAsync(string token) {
            this.WorkQueueViewDictionaryAsync(token, null);
        }
        
        public void WorkQueueViewDictionaryAsync(string token, object userState) {
            if ((this.onBeginWorkQueueViewDictionaryDelegate == null)) {
                this.onBeginWorkQueueViewDictionaryDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueViewDictionary);
            }
            if ((this.onEndWorkQueueViewDictionaryDelegate == null)) {
                this.onEndWorkQueueViewDictionaryDelegate = new EndOperationDelegate(this.OnEndWorkQueueViewDictionary);
            }
            if ((this.onWorkQueueViewDictionaryCompletedDelegate == null)) {
                this.onWorkQueueViewDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueViewDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueViewDictionaryDelegate, new object[] {
                        token}, this.onEndWorkQueueViewDictionaryDelegate, this.onWorkQueueViewDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueViewGet(string token, long workQueueViewId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueViewGet(token, workQueueViewId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueView Mercury.Server.Application.IApplication.EndWorkQueueViewGet(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueViewGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueViewGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueViewId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueViewGet(token, workQueueViewId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueViewGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueView retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueViewGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueViewGetCompleted(object state) {
            if ((this.WorkQueueViewGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueViewGetCompleted(this, new WorkQueueViewGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueViewGetAsync(string token, long workQueueViewId) {
            this.WorkQueueViewGetAsync(token, workQueueViewId, null);
        }
        
        public void WorkQueueViewGetAsync(string token, long workQueueViewId, object userState) {
            if ((this.onBeginWorkQueueViewGetDelegate == null)) {
                this.onBeginWorkQueueViewGetDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueViewGet);
            }
            if ((this.onEndWorkQueueViewGetDelegate == null)) {
                this.onEndWorkQueueViewGetDelegate = new EndOperationDelegate(this.OnEndWorkQueueViewGet);
            }
            if ((this.onWorkQueueViewGetCompletedDelegate == null)) {
                this.onWorkQueueViewGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueViewGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueViewGetDelegate, new object[] {
                        token,
                        workQueueViewId}, this.onEndWorkQueueViewGetDelegate, this.onWorkQueueViewGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueViewGetByName(string token, string workQueueViewName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueViewGetByName(token, workQueueViewName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueView Mercury.Server.Application.IApplication.EndWorkQueueViewGetByName(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueViewGetByName(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueViewGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string workQueueViewName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueViewGetByName(token, workQueueViewName, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueViewGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueView retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueViewGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueViewGetByNameCompleted(object state) {
            if ((this.WorkQueueViewGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueViewGetByNameCompleted(this, new WorkQueueViewGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueViewGetByNameAsync(string token, string workQueueViewName) {
            this.WorkQueueViewGetByNameAsync(token, workQueueViewName, null);
        }
        
        public void WorkQueueViewGetByNameAsync(string token, string workQueueViewName, object userState) {
            if ((this.onBeginWorkQueueViewGetByNameDelegate == null)) {
                this.onBeginWorkQueueViewGetByNameDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueViewGetByName);
            }
            if ((this.onEndWorkQueueViewGetByNameDelegate == null)) {
                this.onEndWorkQueueViewGetByNameDelegate = new EndOperationDelegate(this.OnEndWorkQueueViewGetByName);
            }
            if ((this.onWorkQueueViewGetByNameCompletedDelegate == null)) {
                this.onWorkQueueViewGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueViewGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueViewGetByNameDelegate, new object[] {
                        token,
                        workQueueViewName}, this.onEndWorkQueueViewGetByNameDelegate, this.onWorkQueueViewGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueViewSave(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueViewSave(token, workQueueView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndWorkQueueViewSave(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueViewSave(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueViewSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkQueueView workQueueView = ((Mercury.Server.Application.WorkQueueView)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueViewSave(token, workQueueView, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueViewSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueViewSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueViewSaveCompleted(object state) {
            if ((this.WorkQueueViewSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueViewSaveCompleted(this, new WorkQueueViewSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueViewSaveAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView) {
            this.WorkQueueViewSaveAsync(token, workQueueView, null);
        }
        
        public void WorkQueueViewSaveAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, object userState) {
            if ((this.onBeginWorkQueueViewSaveDelegate == null)) {
                this.onBeginWorkQueueViewSaveDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueViewSave);
            }
            if ((this.onEndWorkQueueViewSaveDelegate == null)) {
                this.onEndWorkQueueViewSaveDelegate = new EndOperationDelegate(this.OnEndWorkQueueViewSave);
            }
            if ((this.onWorkQueueViewSaveCompletedDelegate == null)) {
                this.onWorkQueueViewSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueViewSaveCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueViewSaveDelegate, new object[] {
                        token,
                        workQueueView}, this.onEndWorkQueueViewSaveDelegate, this.onWorkQueueViewSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueView_ValidateFieldDefinition(string token, Mercury.Server.Application.WorkQueueView workQueueView, Mercury.Server.Application.WorkQueueViewFieldDefinition fieldDefinition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueView_ValidateFieldDefinition(token, workQueueView, fieldDefinition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryStringResponse Mercury.Server.Application.IApplication.EndWorkQueueView_ValidateFieldDefinition(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueView_ValidateFieldDefinition(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueView_ValidateFieldDefinition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkQueueView workQueueView = ((Mercury.Server.Application.WorkQueueView)(inValues[1]));
            Mercury.Server.Application.WorkQueueViewFieldDefinition fieldDefinition = ((Mercury.Server.Application.WorkQueueViewFieldDefinition)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueView_ValidateFieldDefinition(token, workQueueView, fieldDefinition, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueView_ValidateFieldDefinition(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryStringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueView_ValidateFieldDefinition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueView_ValidateFieldDefinitionCompleted(object state) {
            if ((this.WorkQueueView_ValidateFieldDefinitionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueView_ValidateFieldDefinitionCompleted(this, new WorkQueueView_ValidateFieldDefinitionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueView_ValidateFieldDefinitionAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, Mercury.Server.Application.WorkQueueViewFieldDefinition fieldDefinition) {
            this.WorkQueueView_ValidateFieldDefinitionAsync(token, workQueueView, fieldDefinition, null);
        }
        
        public void WorkQueueView_ValidateFieldDefinitionAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, Mercury.Server.Application.WorkQueueViewFieldDefinition fieldDefinition, object userState) {
            if ((this.onBeginWorkQueueView_ValidateFieldDefinitionDelegate == null)) {
                this.onBeginWorkQueueView_ValidateFieldDefinitionDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueView_ValidateFieldDefinition);
            }
            if ((this.onEndWorkQueueView_ValidateFieldDefinitionDelegate == null)) {
                this.onEndWorkQueueView_ValidateFieldDefinitionDelegate = new EndOperationDelegate(this.OnEndWorkQueueView_ValidateFieldDefinition);
            }
            if ((this.onWorkQueueView_ValidateFieldDefinitionCompletedDelegate == null)) {
                this.onWorkQueueView_ValidateFieldDefinitionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueView_ValidateFieldDefinitionCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueView_ValidateFieldDefinitionDelegate, new object[] {
                        token,
                        workQueueView,
                        fieldDefinition}, this.onEndWorkQueueView_ValidateFieldDefinitionDelegate, this.onWorkQueueView_ValidateFieldDefinitionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueView_WellKnownFields(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueView_WellKnownFields(token, workQueueView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, bool> Mercury.Server.Application.IApplication.EndWorkQueueView_WellKnownFields(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueView_WellKnownFields(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueView_WellKnownFields(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkQueueView workQueueView = ((Mercury.Server.Application.WorkQueueView)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueView_WellKnownFields(token, workQueueView, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueView_WellKnownFields(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, bool> retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueView_WellKnownFields(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueView_WellKnownFieldsCompleted(object state) {
            if ((this.WorkQueueView_WellKnownFieldsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueView_WellKnownFieldsCompleted(this, new WorkQueueView_WellKnownFieldsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueView_WellKnownFieldsAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView) {
            this.WorkQueueView_WellKnownFieldsAsync(token, workQueueView, null);
        }
        
        public void WorkQueueView_WellKnownFieldsAsync(string token, Mercury.Server.Application.WorkQueueView workQueueView, object userState) {
            if ((this.onBeginWorkQueueView_WellKnownFieldsDelegate == null)) {
                this.onBeginWorkQueueView_WellKnownFieldsDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueView_WellKnownFields);
            }
            if ((this.onEndWorkQueueView_WellKnownFieldsDelegate == null)) {
                this.onEndWorkQueueView_WellKnownFieldsDelegate = new EndOperationDelegate(this.OnEndWorkQueueView_WellKnownFields);
            }
            if ((this.onWorkQueueView_WellKnownFieldsCompletedDelegate == null)) {
                this.onWorkQueueView_WellKnownFieldsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueView_WellKnownFieldsCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueView_WellKnownFieldsDelegate, new object[] {
                        token,
                        workQueueView}, this.onEndWorkQueueView_WellKnownFieldsDelegate, this.onWorkQueueView_WellKnownFieldsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueMonitorSummary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueMonitorSummary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueSummaryCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueueMonitorSummary(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueMonitorSummary(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueMonitorSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueMonitorSummary(token, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueMonitorSummary(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueSummaryCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueMonitorSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueMonitorSummaryCompleted(object state) {
            if ((this.WorkQueueMonitorSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueMonitorSummaryCompleted(this, new WorkQueueMonitorSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueMonitorSummaryAsync(string token) {
            this.WorkQueueMonitorSummaryAsync(token, null);
        }
        
        public void WorkQueueMonitorSummaryAsync(string token, object userState) {
            if ((this.onBeginWorkQueueMonitorSummaryDelegate == null)) {
                this.onBeginWorkQueueMonitorSummaryDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueMonitorSummary);
            }
            if ((this.onEndWorkQueueMonitorSummaryDelegate == null)) {
                this.onEndWorkQueueMonitorSummaryDelegate = new EndOperationDelegate(this.OnEndWorkQueueMonitorSummary);
            }
            if ((this.onWorkQueueMonitorSummaryCompletedDelegate == null)) {
                this.onWorkQueueMonitorSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueMonitorSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueMonitorSummaryDelegate, new object[] {
                        token}, this.onEndWorkQueueMonitorSummaryDelegate, this.onWorkQueueMonitorSummaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueMonitorAgingByWorkQueue(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueMonitorAgingByWorkQueue(token, workQueueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryKeyCountResponse Mercury.Server.Application.IApplication.EndWorkQueueMonitorAgingByWorkQueue(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueMonitorAgingByWorkQueue(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueMonitorAgingByWorkQueue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueMonitorAgingByWorkQueue(token, workQueueId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueMonitorAgingByWorkQueue(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryKeyCountResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueMonitorAgingByWorkQueue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueMonitorAgingByWorkQueueCompleted(object state) {
            if ((this.WorkQueueMonitorAgingByWorkQueueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueMonitorAgingByWorkQueueCompleted(this, new WorkQueueMonitorAgingByWorkQueueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueMonitorAgingByWorkQueueAsync(string token, long workQueueId) {
            this.WorkQueueMonitorAgingByWorkQueueAsync(token, workQueueId, null);
        }
        
        public void WorkQueueMonitorAgingByWorkQueueAsync(string token, long workQueueId, object userState) {
            if ((this.onBeginWorkQueueMonitorAgingByWorkQueueDelegate == null)) {
                this.onBeginWorkQueueMonitorAgingByWorkQueueDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueMonitorAgingByWorkQueue);
            }
            if ((this.onEndWorkQueueMonitorAgingByWorkQueueDelegate == null)) {
                this.onEndWorkQueueMonitorAgingByWorkQueueDelegate = new EndOperationDelegate(this.OnEndWorkQueueMonitorAgingByWorkQueue);
            }
            if ((this.onWorkQueueMonitorAgingByWorkQueueCompletedDelegate == null)) {
                this.onWorkQueueMonitorAgingByWorkQueueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueMonitorAgingByWorkQueueCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueMonitorAgingByWorkQueueDelegate, new object[] {
                        token,
                        workQueueId}, this.onEndWorkQueueMonitorAgingByWorkQueueDelegate, this.onWorkQueueMonitorAgingByWorkQueueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueMonitorAgingAvailableByWorkQueue(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueMonitorAgingAvailableByWorkQueue(token, workQueueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryKeyCountResponse Mercury.Server.Application.IApplication.EndWorkQueueMonitorAgingAvailableByWorkQueue(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueMonitorAgingAvailableByWorkQueue(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueMonitorAgingAvailableByWorkQueue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueMonitorAgingAvailableByWorkQueue(token, workQueueId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueMonitorAgingAvailableByWorkQueue(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryKeyCountResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueMonitorAgingAvailableByWorkQueue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueMonitorAgingAvailableByWorkQueueCompleted(object state) {
            if ((this.WorkQueueMonitorAgingAvailableByWorkQueueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueMonitorAgingAvailableByWorkQueueCompleted(this, new WorkQueueMonitorAgingAvailableByWorkQueueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueMonitorAgingAvailableByWorkQueueAsync(string token, long workQueueId) {
            this.WorkQueueMonitorAgingAvailableByWorkQueueAsync(token, workQueueId, null);
        }
        
        public void WorkQueueMonitorAgingAvailableByWorkQueueAsync(string token, long workQueueId, object userState) {
            if ((this.onBeginWorkQueueMonitorAgingAvailableByWorkQueueDelegate == null)) {
                this.onBeginWorkQueueMonitorAgingAvailableByWorkQueueDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueMonitorAgingAvailableByWorkQueue);
            }
            if ((this.onEndWorkQueueMonitorAgingAvailableByWorkQueueDelegate == null)) {
                this.onEndWorkQueueMonitorAgingAvailableByWorkQueueDelegate = new EndOperationDelegate(this.OnEndWorkQueueMonitorAgingAvailableByWorkQueue);
            }
            if ((this.onWorkQueueMonitorAgingAvailableByWorkQueueCompletedDelegate == null)) {
                this.onWorkQueueMonitorAgingAvailableByWorkQueueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueMonitorAgingAvailableByWorkQueueCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueMonitorAgingAvailableByWorkQueueDelegate, new object[] {
                        token,
                        workQueueId}, this.onEndWorkQueueMonitorAgingAvailableByWorkQueueDelegate, this.onWorkQueueMonitorAgingAvailableByWorkQueueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginReportingServersAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportingServersAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ReportingServerCollectionResponse Mercury.Server.Application.IApplication.EndReportingServersAvailable(System.IAsyncResult result) {
            return base.Channel.EndReportingServersAvailable(result);
        }
        
        private System.IAsyncResult OnBeginReportingServersAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginReportingServersAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndReportingServersAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.ReportingServerCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndReportingServersAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportingServersAvailableCompleted(object state) {
            if ((this.ReportingServersAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportingServersAvailableCompleted(this, new ReportingServersAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportingServersAvailableAsync(string token) {
            this.ReportingServersAvailableAsync(token, null);
        }
        
        public void ReportingServersAvailableAsync(string token, object userState) {
            if ((this.onBeginReportingServersAvailableDelegate == null)) {
                this.onBeginReportingServersAvailableDelegate = new BeginOperationDelegate(this.OnBeginReportingServersAvailable);
            }
            if ((this.onEndReportingServersAvailableDelegate == null)) {
                this.onEndReportingServersAvailableDelegate = new EndOperationDelegate(this.OnEndReportingServersAvailable);
            }
            if ((this.onReportingServersAvailableCompletedDelegate == null)) {
                this.onReportingServersAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportingServersAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginReportingServersAvailableDelegate, new object[] {
                        token}, this.onEndReportingServersAvailableDelegate, this.onReportingServersAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginReportingServerDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportingServerDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndReportingServerDictionary(System.IAsyncResult result) {
            return base.Channel.EndReportingServerDictionary(result);
        }
        
        private System.IAsyncResult OnBeginReportingServerDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginReportingServerDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndReportingServerDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndReportingServerDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportingServerDictionaryCompleted(object state) {
            if ((this.ReportingServerDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportingServerDictionaryCompleted(this, new ReportingServerDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportingServerDictionaryAsync(string token) {
            this.ReportingServerDictionaryAsync(token, null);
        }
        
        public void ReportingServerDictionaryAsync(string token, object userState) {
            if ((this.onBeginReportingServerDictionaryDelegate == null)) {
                this.onBeginReportingServerDictionaryDelegate = new BeginOperationDelegate(this.OnBeginReportingServerDictionary);
            }
            if ((this.onEndReportingServerDictionaryDelegate == null)) {
                this.onEndReportingServerDictionaryDelegate = new EndOperationDelegate(this.OnEndReportingServerDictionary);
            }
            if ((this.onReportingServerDictionaryCompletedDelegate == null)) {
                this.onReportingServerDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportingServerDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginReportingServerDictionaryDelegate, new object[] {
                        token}, this.onEndReportingServerDictionaryDelegate, this.onReportingServerDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginRoutingRuleGet(string token, long routingRuleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoutingRuleGet(token, routingRuleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.RoutingRule Mercury.Server.Application.IApplication.EndRoutingRuleGet(System.IAsyncResult result) {
            return base.Channel.EndRoutingRuleGet(result);
        }
        
        private System.IAsyncResult OnBeginRoutingRuleGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long routingRuleId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginRoutingRuleGet(token, routingRuleId, callback, asyncState);
        }
        
        private object[] OnEndRoutingRuleGet(System.IAsyncResult result) {
            Mercury.Server.Application.RoutingRule retVal = ((Mercury.Server.Application.IApplication)(this)).EndRoutingRuleGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoutingRuleGetCompleted(object state) {
            if ((this.RoutingRuleGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoutingRuleGetCompleted(this, new RoutingRuleGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoutingRuleGetAsync(string token, long routingRuleId) {
            this.RoutingRuleGetAsync(token, routingRuleId, null);
        }
        
        public void RoutingRuleGetAsync(string token, long routingRuleId, object userState) {
            if ((this.onBeginRoutingRuleGetDelegate == null)) {
                this.onBeginRoutingRuleGetDelegate = new BeginOperationDelegate(this.OnBeginRoutingRuleGet);
            }
            if ((this.onEndRoutingRuleGetDelegate == null)) {
                this.onEndRoutingRuleGetDelegate = new EndOperationDelegate(this.OnEndRoutingRuleGet);
            }
            if ((this.onRoutingRuleGetCompletedDelegate == null)) {
                this.onRoutingRuleGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoutingRuleGetCompleted);
            }
            base.InvokeAsync(this.onBeginRoutingRuleGetDelegate, new object[] {
                        token,
                        routingRuleId}, this.onEndRoutingRuleGetDelegate, this.onRoutingRuleGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginRoutingRuleSave(string token, Mercury.Server.Application.RoutingRule routingRule, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoutingRuleSave(token, routingRule, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndRoutingRuleSave(System.IAsyncResult result) {
            return base.Channel.EndRoutingRuleSave(result);
        }
        
        private System.IAsyncResult OnBeginRoutingRuleSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.RoutingRule routingRule = ((Mercury.Server.Application.RoutingRule)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginRoutingRuleSave(token, routingRule, callback, asyncState);
        }
        
        private object[] OnEndRoutingRuleSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndRoutingRuleSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoutingRuleSaveCompleted(object state) {
            if ((this.RoutingRuleSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoutingRuleSaveCompleted(this, new RoutingRuleSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoutingRuleSaveAsync(string token, Mercury.Server.Application.RoutingRule routingRule) {
            this.RoutingRuleSaveAsync(token, routingRule, null);
        }
        
        public void RoutingRuleSaveAsync(string token, Mercury.Server.Application.RoutingRule routingRule, object userState) {
            if ((this.onBeginRoutingRuleSaveDelegate == null)) {
                this.onBeginRoutingRuleSaveDelegate = new BeginOperationDelegate(this.OnBeginRoutingRuleSave);
            }
            if ((this.onEndRoutingRuleSaveDelegate == null)) {
                this.onEndRoutingRuleSaveDelegate = new EndOperationDelegate(this.OnEndRoutingRuleSave);
            }
            if ((this.onRoutingRuleSaveCompletedDelegate == null)) {
                this.onRoutingRuleSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoutingRuleSaveCompleted);
            }
            base.InvokeAsync(this.onBeginRoutingRuleSaveDelegate, new object[] {
                        token,
                        routingRule}, this.onEndRoutingRuleSaveDelegate, this.onRoutingRuleSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkflowCollectionResponse Mercury.Server.Application.IApplication.EndWorkflowsAvailable(System.IAsyncResult result) {
            return base.Channel.EndWorkflowsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndWorkflowsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.WorkflowCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowsAvailableCompleted(object state) {
            if ((this.WorkflowsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowsAvailableCompleted(this, new WorkflowsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowsAvailableAsync(string token) {
            this.WorkflowsAvailableAsync(token, null);
        }
        
        public void WorkflowsAvailableAsync(string token, object userState) {
            if ((this.onBeginWorkflowsAvailableDelegate == null)) {
                this.onBeginWorkflowsAvailableDelegate = new BeginOperationDelegate(this.OnBeginWorkflowsAvailable);
            }
            if ((this.onEndWorkflowsAvailableDelegate == null)) {
                this.onEndWorkflowsAvailableDelegate = new EndOperationDelegate(this.OnEndWorkflowsAvailable);
            }
            if ((this.onWorkflowsAvailableCompletedDelegate == null)) {
                this.onWorkflowsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowsAvailableDelegate, new object[] {
                        token}, this.onEndWorkflowsAvailableDelegate, this.onWorkflowsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowGet(string token, long workflowId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowGet(token, workflowId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Workflow Mercury.Server.Application.IApplication.EndWorkflowGet(System.IAsyncResult result) {
            return base.Channel.EndWorkflowGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workflowId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowGet(token, workflowId, callback, asyncState);
        }
        
        private object[] OnEndWorkflowGet(System.IAsyncResult result) {
            Mercury.Server.Application.Workflow retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowGetCompleted(object state) {
            if ((this.WorkflowGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowGetCompleted(this, new WorkflowGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowGetAsync(string token, long workflowId) {
            this.WorkflowGetAsync(token, workflowId, null);
        }
        
        public void WorkflowGetAsync(string token, long workflowId, object userState) {
            if ((this.onBeginWorkflowGetDelegate == null)) {
                this.onBeginWorkflowGetDelegate = new BeginOperationDelegate(this.OnBeginWorkflowGet);
            }
            if ((this.onEndWorkflowGetDelegate == null)) {
                this.onEndWorkflowGetDelegate = new EndOperationDelegate(this.OnEndWorkflowGet);
            }
            if ((this.onWorkflowGetCompletedDelegate == null)) {
                this.onWorkflowGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowGetDelegate, new object[] {
                        token,
                        workflowId}, this.onEndWorkflowGetDelegate, this.onWorkflowGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowGetByName(string token, string workflowName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowGetByName(token, workflowName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Workflow Mercury.Server.Application.IApplication.EndWorkflowGetByName(System.IAsyncResult result) {
            return base.Channel.EndWorkflowGetByName(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string workflowName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowGetByName(token, workflowName, callback, asyncState);
        }
        
        private object[] OnEndWorkflowGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.Workflow retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowGetByNameCompleted(object state) {
            if ((this.WorkflowGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowGetByNameCompleted(this, new WorkflowGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowGetByNameAsync(string token, string workflowName) {
            this.WorkflowGetByNameAsync(token, workflowName, null);
        }
        
        public void WorkflowGetByNameAsync(string token, string workflowName, object userState) {
            if ((this.onBeginWorkflowGetByNameDelegate == null)) {
                this.onBeginWorkflowGetByNameDelegate = new BeginOperationDelegate(this.OnBeginWorkflowGetByName);
            }
            if ((this.onEndWorkflowGetByNameDelegate == null)) {
                this.onEndWorkflowGetByNameDelegate = new EndOperationDelegate(this.OnEndWorkflowGetByName);
            }
            if ((this.onWorkflowGetByNameCompletedDelegate == null)) {
                this.onWorkflowGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowGetByNameDelegate, new object[] {
                        token,
                        workflowName}, this.onEndWorkflowGetByNameDelegate, this.onWorkflowGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowGetByWorkQueueId(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowGetByWorkQueueId(token, workQueueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Workflow Mercury.Server.Application.IApplication.EndWorkflowGetByWorkQueueId(System.IAsyncResult result) {
            return base.Channel.EndWorkflowGetByWorkQueueId(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowGetByWorkQueueId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowGetByWorkQueueId(token, workQueueId, callback, asyncState);
        }
        
        private object[] OnEndWorkflowGetByWorkQueueId(System.IAsyncResult result) {
            Mercury.Server.Application.Workflow retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowGetByWorkQueueId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowGetByWorkQueueIdCompleted(object state) {
            if ((this.WorkflowGetByWorkQueueIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowGetByWorkQueueIdCompleted(this, new WorkflowGetByWorkQueueIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowGetByWorkQueueIdAsync(string token, long workQueueId) {
            this.WorkflowGetByWorkQueueIdAsync(token, workQueueId, null);
        }
        
        public void WorkflowGetByWorkQueueIdAsync(string token, long workQueueId, object userState) {
            if ((this.onBeginWorkflowGetByWorkQueueIdDelegate == null)) {
                this.onBeginWorkflowGetByWorkQueueIdDelegate = new BeginOperationDelegate(this.OnBeginWorkflowGetByWorkQueueId);
            }
            if ((this.onEndWorkflowGetByWorkQueueIdDelegate == null)) {
                this.onEndWorkflowGetByWorkQueueIdDelegate = new EndOperationDelegate(this.OnEndWorkflowGetByWorkQueueId);
            }
            if ((this.onWorkflowGetByWorkQueueIdCompletedDelegate == null)) {
                this.onWorkflowGetByWorkQueueIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowGetByWorkQueueIdCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowGetByWorkQueueIdDelegate, new object[] {
                        token,
                        workQueueId}, this.onEndWorkflowGetByWorkQueueIdDelegate, this.onWorkflowGetByWorkQueueIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowSave(string token, Mercury.Server.Application.Workflow workflow, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowSave(token, workflow, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndWorkflowSave(System.IAsyncResult result) {
            return base.Channel.EndWorkflowSave(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Workflow workflow = ((Mercury.Server.Application.Workflow)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowSave(token, workflow, callback, asyncState);
        }
        
        private object[] OnEndWorkflowSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowSaveCompleted(object state) {
            if ((this.WorkflowSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowSaveCompleted(this, new WorkflowSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowSaveAsync(string token, Mercury.Server.Application.Workflow workflow) {
            this.WorkflowSaveAsync(token, workflow, null);
        }
        
        public void WorkflowSaveAsync(string token, Mercury.Server.Application.Workflow workflow, object userState) {
            if ((this.onBeginWorkflowSaveDelegate == null)) {
                this.onBeginWorkflowSaveDelegate = new BeginOperationDelegate(this.OnBeginWorkflowSave);
            }
            if ((this.onEndWorkflowSaveDelegate == null)) {
                this.onEndWorkflowSaveDelegate = new EndOperationDelegate(this.OnEndWorkflowSave);
            }
            if ((this.onWorkflowSaveCompletedDelegate == null)) {
                this.onWorkflowSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowSaveCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowSaveDelegate, new object[] {
                        token,
                        workflow}, this.onEndWorkflowSaveDelegate, this.onWorkflowSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowStart(string token, Mercury.Server.Application.WorkflowStartRequest startRequest, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowStart(token, startRequest, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkflowResponse Mercury.Server.Application.IApplication.EndWorkflowStart(System.IAsyncResult result) {
            return base.Channel.EndWorkflowStart(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkflowStartRequest startRequest = ((Mercury.Server.Application.WorkflowStartRequest)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowStart(token, startRequest, callback, asyncState);
        }
        
        private object[] OnEndWorkflowStart(System.IAsyncResult result) {
            Mercury.Server.Application.WorkflowResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowStartCompleted(object state) {
            if ((this.WorkflowStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowStartCompleted(this, new WorkflowStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowStartAsync(string token, Mercury.Server.Application.WorkflowStartRequest startRequest) {
            this.WorkflowStartAsync(token, startRequest, null);
        }
        
        public void WorkflowStartAsync(string token, Mercury.Server.Application.WorkflowStartRequest startRequest, object userState) {
            if ((this.onBeginWorkflowStartDelegate == null)) {
                this.onBeginWorkflowStartDelegate = new BeginOperationDelegate(this.OnBeginWorkflowStart);
            }
            if ((this.onEndWorkflowStartDelegate == null)) {
                this.onEndWorkflowStartDelegate = new EndOperationDelegate(this.OnEndWorkflowStart);
            }
            if ((this.onWorkflowStartCompletedDelegate == null)) {
                this.onWorkflowStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowStartCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowStartDelegate, new object[] {
                        token,
                        startRequest}, this.onEndWorkflowStartDelegate, this.onWorkflowStartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkflowContinue(string token, string workflowName, System.Guid workflowInstanceId, Mercury.Server.Application.WorkflowUserInteractionResponseBase userInteractionResponse, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkflowContinue(token, workflowName, workflowInstanceId, userInteractionResponse, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkflowResponse Mercury.Server.Application.IApplication.EndWorkflowContinue(System.IAsyncResult result) {
            return base.Channel.EndWorkflowContinue(result);
        }
        
        private System.IAsyncResult OnBeginWorkflowContinue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string workflowName = ((string)(inValues[1]));
            System.Guid workflowInstanceId = ((System.Guid)(inValues[2]));
            Mercury.Server.Application.WorkflowUserInteractionResponseBase userInteractionResponse = ((Mercury.Server.Application.WorkflowUserInteractionResponseBase)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkflowContinue(token, workflowName, workflowInstanceId, userInteractionResponse, callback, asyncState);
        }
        
        private object[] OnEndWorkflowContinue(System.IAsyncResult result) {
            Mercury.Server.Application.WorkflowResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkflowContinue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkflowContinueCompleted(object state) {
            if ((this.WorkflowContinueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkflowContinueCompleted(this, new WorkflowContinueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkflowContinueAsync(string token, string workflowName, System.Guid workflowInstanceId, Mercury.Server.Application.WorkflowUserInteractionResponseBase userInteractionResponse) {
            this.WorkflowContinueAsync(token, workflowName, workflowInstanceId, userInteractionResponse, null);
        }
        
        public void WorkflowContinueAsync(string token, string workflowName, System.Guid workflowInstanceId, Mercury.Server.Application.WorkflowUserInteractionResponseBase userInteractionResponse, object userState) {
            if ((this.onBeginWorkflowContinueDelegate == null)) {
                this.onBeginWorkflowContinueDelegate = new BeginOperationDelegate(this.OnBeginWorkflowContinue);
            }
            if ((this.onEndWorkflowContinueDelegate == null)) {
                this.onEndWorkflowContinueDelegate = new EndOperationDelegate(this.OnEndWorkflowContinue);
            }
            if ((this.onWorkflowContinueCompletedDelegate == null)) {
                this.onWorkflowContinueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkflowContinueCompleted);
            }
            base.InvokeAsync(this.onBeginWorkflowContinueDelegate, new object[] {
                        token,
                        workflowName,
                        workflowInstanceId,
                        userInteractionResponse}, this.onEndWorkflowContinueDelegate, this.onWorkflowContinueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkOutcomesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkOutcomesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkOutcomeCollectionResponse Mercury.Server.Application.IApplication.EndWorkOutcomesAvailable(System.IAsyncResult result) {
            return base.Channel.EndWorkOutcomesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginWorkOutcomesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkOutcomesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndWorkOutcomesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.WorkOutcomeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkOutcomesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkOutcomesAvailableCompleted(object state) {
            if ((this.WorkOutcomesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkOutcomesAvailableCompleted(this, new WorkOutcomesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkOutcomesAvailableAsync(string token) {
            this.WorkOutcomesAvailableAsync(token, null);
        }
        
        public void WorkOutcomesAvailableAsync(string token, object userState) {
            if ((this.onBeginWorkOutcomesAvailableDelegate == null)) {
                this.onBeginWorkOutcomesAvailableDelegate = new BeginOperationDelegate(this.OnBeginWorkOutcomesAvailable);
            }
            if ((this.onEndWorkOutcomesAvailableDelegate == null)) {
                this.onEndWorkOutcomesAvailableDelegate = new EndOperationDelegate(this.OnEndWorkOutcomesAvailable);
            }
            if ((this.onWorkOutcomesAvailableCompletedDelegate == null)) {
                this.onWorkOutcomesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkOutcomesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginWorkOutcomesAvailableDelegate, new object[] {
                        token}, this.onEndWorkOutcomesAvailableDelegate, this.onWorkOutcomesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkOutcomeDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkOutcomeDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndWorkOutcomeDictionary(System.IAsyncResult result) {
            return base.Channel.EndWorkOutcomeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginWorkOutcomeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkOutcomeDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndWorkOutcomeDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkOutcomeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkOutcomeDictionaryCompleted(object state) {
            if ((this.WorkOutcomeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkOutcomeDictionaryCompleted(this, new WorkOutcomeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkOutcomeDictionaryAsync(string token) {
            this.WorkOutcomeDictionaryAsync(token, null);
        }
        
        public void WorkOutcomeDictionaryAsync(string token, object userState) {
            if ((this.onBeginWorkOutcomeDictionaryDelegate == null)) {
                this.onBeginWorkOutcomeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginWorkOutcomeDictionary);
            }
            if ((this.onEndWorkOutcomeDictionaryDelegate == null)) {
                this.onEndWorkOutcomeDictionaryDelegate = new EndOperationDelegate(this.OnEndWorkOutcomeDictionary);
            }
            if ((this.onWorkOutcomeDictionaryCompletedDelegate == null)) {
                this.onWorkOutcomeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkOutcomeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginWorkOutcomeDictionaryDelegate, new object[] {
                        token}, this.onEndWorkOutcomeDictionaryDelegate, this.onWorkOutcomeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkOutcomeGet(string token, long workOutcomeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkOutcomeGet(token, workOutcomeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkOutcome Mercury.Server.Application.IApplication.EndWorkOutcomeGet(System.IAsyncResult result) {
            return base.Channel.EndWorkOutcomeGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkOutcomeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workOutcomeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkOutcomeGet(token, workOutcomeId, callback, asyncState);
        }
        
        private object[] OnEndWorkOutcomeGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkOutcome retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkOutcomeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkOutcomeGetCompleted(object state) {
            if ((this.WorkOutcomeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkOutcomeGetCompleted(this, new WorkOutcomeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkOutcomeGetAsync(string token, long workOutcomeId) {
            this.WorkOutcomeGetAsync(token, workOutcomeId, null);
        }
        
        public void WorkOutcomeGetAsync(string token, long workOutcomeId, object userState) {
            if ((this.onBeginWorkOutcomeGetDelegate == null)) {
                this.onBeginWorkOutcomeGetDelegate = new BeginOperationDelegate(this.OnBeginWorkOutcomeGet);
            }
            if ((this.onEndWorkOutcomeGetDelegate == null)) {
                this.onEndWorkOutcomeGetDelegate = new EndOperationDelegate(this.OnEndWorkOutcomeGet);
            }
            if ((this.onWorkOutcomeGetCompletedDelegate == null)) {
                this.onWorkOutcomeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkOutcomeGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkOutcomeGetDelegate, new object[] {
                        token,
                        workOutcomeId}, this.onEndWorkOutcomeGetDelegate, this.onWorkOutcomeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkOutcomeGetByName(string token, string workOutcomeName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkOutcomeGetByName(token, workOutcomeName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkOutcome Mercury.Server.Application.IApplication.EndWorkOutcomeGetByName(System.IAsyncResult result) {
            return base.Channel.EndWorkOutcomeGetByName(result);
        }
        
        private System.IAsyncResult OnBeginWorkOutcomeGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string workOutcomeName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkOutcomeGetByName(token, workOutcomeName, callback, asyncState);
        }
        
        private object[] OnEndWorkOutcomeGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.WorkOutcome retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkOutcomeGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkOutcomeGetByNameCompleted(object state) {
            if ((this.WorkOutcomeGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkOutcomeGetByNameCompleted(this, new WorkOutcomeGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkOutcomeGetByNameAsync(string token, string workOutcomeName) {
            this.WorkOutcomeGetByNameAsync(token, workOutcomeName, null);
        }
        
        public void WorkOutcomeGetByNameAsync(string token, string workOutcomeName, object userState) {
            if ((this.onBeginWorkOutcomeGetByNameDelegate == null)) {
                this.onBeginWorkOutcomeGetByNameDelegate = new BeginOperationDelegate(this.OnBeginWorkOutcomeGetByName);
            }
            if ((this.onEndWorkOutcomeGetByNameDelegate == null)) {
                this.onEndWorkOutcomeGetByNameDelegate = new EndOperationDelegate(this.OnEndWorkOutcomeGetByName);
            }
            if ((this.onWorkOutcomeGetByNameCompletedDelegate == null)) {
                this.onWorkOutcomeGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkOutcomeGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginWorkOutcomeGetByNameDelegate, new object[] {
                        token,
                        workOutcomeName}, this.onEndWorkOutcomeGetByNameDelegate, this.onWorkOutcomeGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkOutcomeSave(string token, Mercury.Server.Application.WorkOutcome workOutcome, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkOutcomeSave(token, workOutcome, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndWorkOutcomeSave(System.IAsyncResult result) {
            return base.Channel.EndWorkOutcomeSave(result);
        }
        
        private System.IAsyncResult OnBeginWorkOutcomeSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkOutcome workOutcome = ((Mercury.Server.Application.WorkOutcome)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkOutcomeSave(token, workOutcome, callback, asyncState);
        }
        
        private object[] OnEndWorkOutcomeSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkOutcomeSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkOutcomeSaveCompleted(object state) {
            if ((this.WorkOutcomeSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkOutcomeSaveCompleted(this, new WorkOutcomeSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkOutcomeSaveAsync(string token, Mercury.Server.Application.WorkOutcome workOutcome) {
            this.WorkOutcomeSaveAsync(token, workOutcome, null);
        }
        
        public void WorkOutcomeSaveAsync(string token, Mercury.Server.Application.WorkOutcome workOutcome, object userState) {
            if ((this.onBeginWorkOutcomeSaveDelegate == null)) {
                this.onBeginWorkOutcomeSaveDelegate = new BeginOperationDelegate(this.OnBeginWorkOutcomeSave);
            }
            if ((this.onEndWorkOutcomeSaveDelegate == null)) {
                this.onEndWorkOutcomeSaveDelegate = new EndOperationDelegate(this.OnEndWorkOutcomeSave);
            }
            if ((this.onWorkOutcomeSaveCompletedDelegate == null)) {
                this.onWorkOutcomeSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkOutcomeSaveCompleted);
            }
            base.InvokeAsync(this.onBeginWorkOutcomeSaveDelegate, new object[] {
                        token,
                        workOutcome}, this.onEndWorkOutcomeSaveDelegate, this.onWorkOutcomeSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueuesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueuesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueCollectionResponse Mercury.Server.Application.IApplication.EndWorkQueuesAvailable(System.IAsyncResult result) {
            return base.Channel.EndWorkQueuesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueuesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueuesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndWorkQueuesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueuesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueuesAvailableCompleted(object state) {
            if ((this.WorkQueuesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueuesAvailableCompleted(this, new WorkQueuesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueuesAvailableAsync(string token) {
            this.WorkQueuesAvailableAsync(token, null);
        }
        
        public void WorkQueuesAvailableAsync(string token, object userState) {
            if ((this.onBeginWorkQueuesAvailableDelegate == null)) {
                this.onBeginWorkQueuesAvailableDelegate = new BeginOperationDelegate(this.OnBeginWorkQueuesAvailable);
            }
            if ((this.onEndWorkQueuesAvailableDelegate == null)) {
                this.onEndWorkQueuesAvailableDelegate = new EndOperationDelegate(this.OnEndWorkQueuesAvailable);
            }
            if ((this.onWorkQueuesAvailableCompletedDelegate == null)) {
                this.onWorkQueuesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueuesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueuesAvailableDelegate, new object[] {
                        token}, this.onEndWorkQueuesAvailableDelegate, this.onWorkQueuesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndWorkQueueDictionary(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueDictionary(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueDictionaryCompleted(object state) {
            if ((this.WorkQueueDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueDictionaryCompleted(this, new WorkQueueDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueDictionaryAsync(string token) {
            this.WorkQueueDictionaryAsync(token, null);
        }
        
        public void WorkQueueDictionaryAsync(string token, object userState) {
            if ((this.onBeginWorkQueueDictionaryDelegate == null)) {
                this.onBeginWorkQueueDictionaryDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueDictionary);
            }
            if ((this.onEndWorkQueueDictionaryDelegate == null)) {
                this.onEndWorkQueueDictionaryDelegate = new EndOperationDelegate(this.OnEndWorkQueueDictionary);
            }
            if ((this.onWorkQueueDictionaryCompletedDelegate == null)) {
                this.onWorkQueueDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueDictionaryDelegate, new object[] {
                        token}, this.onEndWorkQueueDictionaryDelegate, this.onWorkQueueDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueGet(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueGet(token, workQueueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueue Mercury.Server.Application.IApplication.EndWorkQueueGet(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueGet(token, workQueueId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueue retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueGetCompleted(object state) {
            if ((this.WorkQueueGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueGetCompleted(this, new WorkQueueGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueGetAsync(string token, long workQueueId) {
            this.WorkQueueGetAsync(token, workQueueId, null);
        }
        
        public void WorkQueueGetAsync(string token, long workQueueId, object userState) {
            if ((this.onBeginWorkQueueGetDelegate == null)) {
                this.onBeginWorkQueueGetDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueGet);
            }
            if ((this.onEndWorkQueueGetDelegate == null)) {
                this.onEndWorkQueueGetDelegate = new EndOperationDelegate(this.OnEndWorkQueueGet);
            }
            if ((this.onWorkQueueGetCompletedDelegate == null)) {
                this.onWorkQueueGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueGetDelegate, new object[] {
                        token,
                        workQueueId}, this.onEndWorkQueueGetDelegate, this.onWorkQueueGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueGetByName(string token, string workQueueName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueGetByName(token, workQueueName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueue Mercury.Server.Application.IApplication.EndWorkQueueGetByName(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueGetByName(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string workQueueName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueGetByName(token, workQueueName, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueue retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueGetByNameCompleted(object state) {
            if ((this.WorkQueueGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueGetByNameCompleted(this, new WorkQueueGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueGetByNameAsync(string token, string workQueueName) {
            this.WorkQueueGetByNameAsync(token, workQueueName, null);
        }
        
        public void WorkQueueGetByNameAsync(string token, string workQueueName, object userState) {
            if ((this.onBeginWorkQueueGetByNameDelegate == null)) {
                this.onBeginWorkQueueGetByNameDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueGetByName);
            }
            if ((this.onEndWorkQueueGetByNameDelegate == null)) {
                this.onEndWorkQueueGetByNameDelegate = new EndOperationDelegate(this.OnEndWorkQueueGetByName);
            }
            if ((this.onWorkQueueGetByNameCompletedDelegate == null)) {
                this.onWorkQueueGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueGetByNameDelegate, new object[] {
                        token,
                        workQueueName}, this.onEndWorkQueueGetByNameDelegate, this.onWorkQueueGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueGetByWorkQueueItem(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueGetByWorkQueueItem(token, workQueueItemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueue Mercury.Server.Application.IApplication.EndWorkQueueGetByWorkQueueItem(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueGetByWorkQueueItem(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueGetByWorkQueueItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueGetByWorkQueueItem(token, workQueueItemId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueGetByWorkQueueItem(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueue retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueGetByWorkQueueItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueGetByWorkQueueItemCompleted(object state) {
            if ((this.WorkQueueGetByWorkQueueItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueGetByWorkQueueItemCompleted(this, new WorkQueueGetByWorkQueueItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueGetByWorkQueueItemAsync(string token, long workQueueItemId) {
            this.WorkQueueGetByWorkQueueItemAsync(token, workQueueItemId, null);
        }
        
        public void WorkQueueGetByWorkQueueItemAsync(string token, long workQueueItemId, object userState) {
            if ((this.onBeginWorkQueueGetByWorkQueueItemDelegate == null)) {
                this.onBeginWorkQueueGetByWorkQueueItemDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueGetByWorkQueueItem);
            }
            if ((this.onEndWorkQueueGetByWorkQueueItemDelegate == null)) {
                this.onEndWorkQueueGetByWorkQueueItemDelegate = new EndOperationDelegate(this.OnEndWorkQueueGetByWorkQueueItem);
            }
            if ((this.onWorkQueueGetByWorkQueueItemCompletedDelegate == null)) {
                this.onWorkQueueGetByWorkQueueItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueGetByWorkQueueItemCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueGetByWorkQueueItemDelegate, new object[] {
                        token,
                        workQueueItemId}, this.onEndWorkQueueGetByWorkQueueItemDelegate, this.onWorkQueueGetByWorkQueueItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueSave(string token, Mercury.Server.Application.WorkQueue workQueue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueSave(token, workQueue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndWorkQueueSave(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueSave(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.WorkQueue workQueue = ((Mercury.Server.Application.WorkQueue)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueSave(token, workQueue, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueSaveCompleted(object state) {
            if ((this.WorkQueueSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueSaveCompleted(this, new WorkQueueSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueSaveAsync(string token, Mercury.Server.Application.WorkQueue workQueue) {
            this.WorkQueueSaveAsync(token, workQueue, null);
        }
        
        public void WorkQueueSaveAsync(string token, Mercury.Server.Application.WorkQueue workQueue, object userState) {
            if ((this.onBeginWorkQueueSaveDelegate == null)) {
                this.onBeginWorkQueueSaveDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueSave);
            }
            if ((this.onEndWorkQueueSaveDelegate == null)) {
                this.onEndWorkQueueSaveDelegate = new EndOperationDelegate(this.OnEndWorkQueueSave);
            }
            if ((this.onWorkQueueSaveCompletedDelegate == null)) {
                this.onWorkQueueSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueSaveCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueSaveDelegate, new object[] {
                        token,
                        workQueue}, this.onEndWorkQueueSaveDelegate, this.onWorkQueueSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueGetWork(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueGetWork(token, workQueueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.GetWorkResponse Mercury.Server.Application.IApplication.EndWorkQueueGetWork(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueGetWork(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueGetWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueGetWork(token, workQueueId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueGetWork(System.IAsyncResult result) {
            Mercury.Server.Application.GetWorkResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueGetWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueGetWorkCompleted(object state) {
            if ((this.WorkQueueGetWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueGetWorkCompleted(this, new WorkQueueGetWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueGetWorkAsync(string token, long workQueueId) {
            this.WorkQueueGetWorkAsync(token, workQueueId, null);
        }
        
        public void WorkQueueGetWorkAsync(string token, long workQueueId, object userState) {
            if ((this.onBeginWorkQueueGetWorkDelegate == null)) {
                this.onBeginWorkQueueGetWorkDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueGetWork);
            }
            if ((this.onEndWorkQueueGetWorkDelegate == null)) {
                this.onEndWorkQueueGetWorkDelegate = new EndOperationDelegate(this.OnEndWorkQueueGetWork);
            }
            if ((this.onWorkQueueGetWorkCompletedDelegate == null)) {
                this.onWorkQueueGetWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueGetWorkCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueGetWorkDelegate, new object[] {
                        token,
                        workQueueId}, this.onEndWorkQueueGetWorkDelegate, this.onWorkQueueGetWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueInsertEntity(string token, long workQueueId, long entityId, Mercury.Server.Application.CoreObject sender, Mercury.Server.Application.CoreObject eventObject, long eventInstanceId, string eventDescription, int priority, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueInsertEntity(token, workQueueId, entityId, sender, eventObject, eventInstanceId, eventDescription, priority, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndWorkQueueInsertEntity(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueInsertEntity(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueInsertEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueId = ((long)(inValues[1]));
            long entityId = ((long)(inValues[2]));
            Mercury.Server.Application.CoreObject sender = ((Mercury.Server.Application.CoreObject)(inValues[3]));
            Mercury.Server.Application.CoreObject eventObject = ((Mercury.Server.Application.CoreObject)(inValues[4]));
            long eventInstanceId = ((long)(inValues[5]));
            string eventDescription = ((string)(inValues[6]));
            int priority = ((int)(inValues[7]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueInsertEntity(token, workQueueId, entityId, sender, eventObject, eventInstanceId, eventDescription, priority, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueInsertEntity(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueInsertEntity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueInsertEntityCompleted(object state) {
            if ((this.WorkQueueInsertEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueInsertEntityCompleted(this, new WorkQueueInsertEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueInsertEntityAsync(string token, long workQueueId, long entityId, Mercury.Server.Application.CoreObject sender, Mercury.Server.Application.CoreObject eventObject, long eventInstanceId, string eventDescription, int priority) {
            this.WorkQueueInsertEntityAsync(token, workQueueId, entityId, sender, eventObject, eventInstanceId, eventDescription, priority, null);
        }
        
        public void WorkQueueInsertEntityAsync(string token, long workQueueId, long entityId, Mercury.Server.Application.CoreObject sender, Mercury.Server.Application.CoreObject eventObject, long eventInstanceId, string eventDescription, int priority, object userState) {
            if ((this.onBeginWorkQueueInsertEntityDelegate == null)) {
                this.onBeginWorkQueueInsertEntityDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueInsertEntity);
            }
            if ((this.onEndWorkQueueInsertEntityDelegate == null)) {
                this.onEndWorkQueueInsertEntityDelegate = new EndOperationDelegate(this.OnEndWorkQueueInsertEntity);
            }
            if ((this.onWorkQueueInsertEntityCompletedDelegate == null)) {
                this.onWorkQueueInsertEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueInsertEntityCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueInsertEntityDelegate, new object[] {
                        token,
                        workQueueId,
                        entityId,
                        sender,
                        eventObject,
                        eventInstanceId,
                        eventDescription,
                        priority}, this.onEndWorkQueueInsertEntityDelegate, this.onWorkQueueInsertEntityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemGet(token, workQueueItemId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.WorkQueueItem Mercury.Server.Application.IApplication.EndWorkQueueItemGet(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemGet(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemGet(token, workQueueItemId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemGet(System.IAsyncResult result) {
            Mercury.Server.Application.WorkQueueItem retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemGetCompleted(object state) {
            if ((this.WorkQueueItemGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemGetCompleted(this, new WorkQueueItemGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemGetAsync(string token, long workQueueItemId) {
            this.WorkQueueItemGetAsync(token, workQueueItemId, null);
        }
        
        public void WorkQueueItemGetAsync(string token, long workQueueItemId, object userState) {
            if ((this.onBeginWorkQueueItemGetDelegate == null)) {
                this.onBeginWorkQueueItemGetDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemGet);
            }
            if ((this.onEndWorkQueueItemGetDelegate == null)) {
                this.onEndWorkQueueItemGetDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemGet);
            }
            if ((this.onWorkQueueItemGetCompletedDelegate == null)) {
                this.onWorkQueueItemGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemGetCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemGetDelegate, new object[] {
                        token,
                        workQueueItemId}, this.onEndWorkQueueItemGetDelegate, this.onWorkQueueItemGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemAssignTo(string token, long workQueueItemId, long securityAuthorityId, string userAccountId, string userAccountName, string userDisplayName, string assignmentSource, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemAssignTo(token, workQueueItemId, securityAuthorityId, userAccountId, userAccountName, userDisplayName, assignmentSource, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndWorkQueueItemAssignTo(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemAssignTo(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemAssignTo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            long securityAuthorityId = ((long)(inValues[2]));
            string userAccountId = ((string)(inValues[3]));
            string userAccountName = ((string)(inValues[4]));
            string userDisplayName = ((string)(inValues[5]));
            string assignmentSource = ((string)(inValues[6]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemAssignTo(token, workQueueItemId, securityAuthorityId, userAccountId, userAccountName, userDisplayName, assignmentSource, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemAssignTo(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemAssignTo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemAssignToCompleted(object state) {
            if ((this.WorkQueueItemAssignToCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemAssignToCompleted(this, new WorkQueueItemAssignToCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemAssignToAsync(string token, long workQueueItemId, long securityAuthorityId, string userAccountId, string userAccountName, string userDisplayName, string assignmentSource) {
            this.WorkQueueItemAssignToAsync(token, workQueueItemId, securityAuthorityId, userAccountId, userAccountName, userDisplayName, assignmentSource, null);
        }
        
        public void WorkQueueItemAssignToAsync(string token, long workQueueItemId, long securityAuthorityId, string userAccountId, string userAccountName, string userDisplayName, string assignmentSource, object userState) {
            if ((this.onBeginWorkQueueItemAssignToDelegate == null)) {
                this.onBeginWorkQueueItemAssignToDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemAssignTo);
            }
            if ((this.onEndWorkQueueItemAssignToDelegate == null)) {
                this.onEndWorkQueueItemAssignToDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemAssignTo);
            }
            if ((this.onWorkQueueItemAssignToCompletedDelegate == null)) {
                this.onWorkQueueItemAssignToCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemAssignToCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemAssignToDelegate, new object[] {
                        token,
                        workQueueItemId,
                        securityAuthorityId,
                        userAccountId,
                        userAccountName,
                        userDisplayName,
                        assignmentSource}, this.onEndWorkQueueItemAssignToDelegate, this.onWorkQueueItemAssignToCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginWorkQueueItemMoveToQueue(string token, long workQueueItemId, long workQueueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWorkQueueItemMoveToQueue(token, workQueueItemId, workQueueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndWorkQueueItemMoveToQueue(System.IAsyncResult result) {
            return base.Channel.EndWorkQueueItemMoveToQueue(result);
        }
        
        private System.IAsyncResult OnBeginWorkQueueItemMoveToQueue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long workQueueItemId = ((long)(inValues[1]));
            long workQueueId = ((long)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginWorkQueueItemMoveToQueue(token, workQueueItemId, workQueueId, callback, asyncState);
        }
        
        private object[] OnEndWorkQueueItemMoveToQueue(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndWorkQueueItemMoveToQueue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWorkQueueItemMoveToQueueCompleted(object state) {
            if ((this.WorkQueueItemMoveToQueueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WorkQueueItemMoveToQueueCompleted(this, new WorkQueueItemMoveToQueueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WorkQueueItemMoveToQueueAsync(string token, long workQueueItemId, long workQueueId) {
            this.WorkQueueItemMoveToQueueAsync(token, workQueueItemId, workQueueId, null);
        }
        
        public void WorkQueueItemMoveToQueueAsync(string token, long workQueueItemId, long workQueueId, object userState) {
            if ((this.onBeginWorkQueueItemMoveToQueueDelegate == null)) {
                this.onBeginWorkQueueItemMoveToQueueDelegate = new BeginOperationDelegate(this.OnBeginWorkQueueItemMoveToQueue);
            }
            if ((this.onEndWorkQueueItemMoveToQueueDelegate == null)) {
                this.onEndWorkQueueItemMoveToQueueDelegate = new EndOperationDelegate(this.OnEndWorkQueueItemMoveToQueue);
            }
            if ((this.onWorkQueueItemMoveToQueueCompletedDelegate == null)) {
                this.onWorkQueueItemMoveToQueueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWorkQueueItemMoveToQueueCompleted);
            }
            base.InvokeAsync(this.onBeginWorkQueueItemMoveToQueueDelegate, new object[] {
                        token,
                        workQueueItemId,
                        workQueueId}, this.onEndWorkQueueItemMoveToQueueDelegate, this.onWorkQueueItemMoveToQueueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationGet(string token, long populationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationGet(token, populationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Population Mercury.Server.Application.IApplication.EndPopulationGet(System.IAsyncResult result) {
            return base.Channel.EndPopulationGet(result);
        }
        
        private System.IAsyncResult OnBeginPopulationGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationGet(token, populationId, callback, asyncState);
        }
        
        private object[] OnEndPopulationGet(System.IAsyncResult result) {
            Mercury.Server.Application.Population retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationGetCompleted(object state) {
            if ((this.PopulationGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationGetCompleted(this, new PopulationGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationGetAsync(string token, long populationId) {
            this.PopulationGetAsync(token, populationId, null);
        }
        
        public void PopulationGetAsync(string token, long populationId, object userState) {
            if ((this.onBeginPopulationGetDelegate == null)) {
                this.onBeginPopulationGetDelegate = new BeginOperationDelegate(this.OnBeginPopulationGet);
            }
            if ((this.onEndPopulationGetDelegate == null)) {
                this.onEndPopulationGetDelegate = new EndOperationDelegate(this.OnEndPopulationGet);
            }
            if ((this.onPopulationGetCompletedDelegate == null)) {
                this.onPopulationGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationGetCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationGetDelegate, new object[] {
                        token,
                        populationId}, this.onEndPopulationGetDelegate, this.onPopulationGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationServiceEventGet(string token, long populationServiceEventId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationServiceEventGet(token, populationServiceEventId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationServiceEvent Mercury.Server.Application.IApplication.EndPopulationServiceEventGet(System.IAsyncResult result) {
            return base.Channel.EndPopulationServiceEventGet(result);
        }
        
        private System.IAsyncResult OnBeginPopulationServiceEventGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationServiceEventId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationServiceEventGet(token, populationServiceEventId, callback, asyncState);
        }
        
        private object[] OnEndPopulationServiceEventGet(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationServiceEvent retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationServiceEventGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationServiceEventGetCompleted(object state) {
            if ((this.PopulationServiceEventGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationServiceEventGetCompleted(this, new PopulationServiceEventGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationServiceEventGetAsync(string token, long populationServiceEventId) {
            this.PopulationServiceEventGetAsync(token, populationServiceEventId, null);
        }
        
        public void PopulationServiceEventGetAsync(string token, long populationServiceEventId, object userState) {
            if ((this.onBeginPopulationServiceEventGetDelegate == null)) {
                this.onBeginPopulationServiceEventGetDelegate = new BeginOperationDelegate(this.OnBeginPopulationServiceEventGet);
            }
            if ((this.onEndPopulationServiceEventGetDelegate == null)) {
                this.onEndPopulationServiceEventGetDelegate = new EndOperationDelegate(this.OnEndPopulationServiceEventGet);
            }
            if ((this.onPopulationServiceEventGetCompletedDelegate == null)) {
                this.onPopulationServiceEventGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationServiceEventGetCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationServiceEventGetDelegate, new object[] {
                        token,
                        populationServiceEventId}, this.onEndPopulationServiceEventGetDelegate, this.onPopulationServiceEventGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationSave(string token, Mercury.Server.Application.Population population, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationSave(token, population, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndPopulationSave(System.IAsyncResult result) {
            return base.Channel.EndPopulationSave(result);
        }
        
        private System.IAsyncResult OnBeginPopulationSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Population population = ((Mercury.Server.Application.Population)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationSave(token, population, callback, asyncState);
        }
        
        private object[] OnEndPopulationSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationSaveCompleted(object state) {
            if ((this.PopulationSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationSaveCompleted(this, new PopulationSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationSaveAsync(string token, Mercury.Server.Application.Population population) {
            this.PopulationSaveAsync(token, population, null);
        }
        
        public void PopulationSaveAsync(string token, Mercury.Server.Application.Population population, object userState) {
            if ((this.onBeginPopulationSaveDelegate == null)) {
                this.onBeginPopulationSaveDelegate = new BeginOperationDelegate(this.OnBeginPopulationSave);
            }
            if ((this.onEndPopulationSaveDelegate == null)) {
                this.onEndPopulationSaveDelegate = new EndOperationDelegate(this.OnEndPopulationSave);
            }
            if ((this.onPopulationSaveCompletedDelegate == null)) {
                this.onPopulationSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationSaveCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationSaveDelegate, new object[] {
                        token,
                        population}, this.onEndPopulationSaveDelegate, this.onPopulationSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationDelete(string token, long populationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationDelete(token, populationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndPopulationDelete(System.IAsyncResult result) {
            return base.Channel.EndPopulationDelete(result);
        }
        
        private System.IAsyncResult OnBeginPopulationDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationDelete(token, populationId, callback, asyncState);
        }
        
        private object[] OnEndPopulationDelete(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationDeleteCompleted(object state) {
            if ((this.PopulationDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationDeleteCompleted(this, new PopulationDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationDeleteAsync(string token, long populationId) {
            this.PopulationDeleteAsync(token, populationId, null);
        }
        
        public void PopulationDeleteAsync(string token, long populationId, object userState) {
            if ((this.onBeginPopulationDeleteDelegate == null)) {
                this.onBeginPopulationDeleteDelegate = new BeginOperationDelegate(this.OnBeginPopulationDelete);
            }
            if ((this.onEndPopulationDeleteDelegate == null)) {
                this.onEndPopulationDeleteDelegate = new EndOperationDelegate(this.OnEndPopulationDelete);
            }
            if ((this.onPopulationDeleteCompletedDelegate == null)) {
                this.onPopulationDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationDeleteDelegate, new object[] {
                        token,
                        populationId}, this.onEndPopulationDeleteDelegate, this.onPopulationDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulation_DataBindingContexts(string token, Mercury.Server.Application.Population population, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulation_DataBindingContexts(token, population, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndPopulation_DataBindingContexts(System.IAsyncResult result) {
            return base.Channel.EndPopulation_DataBindingContexts(result);
        }
        
        private System.IAsyncResult OnBeginPopulation_DataBindingContexts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Population population = ((Mercury.Server.Application.Population)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulation_DataBindingContexts(token, population, callback, asyncState);
        }
        
        private object[] OnEndPopulation_DataBindingContexts(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulation_DataBindingContexts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulation_DataBindingContextsCompleted(object state) {
            if ((this.Population_DataBindingContextsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Population_DataBindingContextsCompleted(this, new Population_DataBindingContextsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Population_DataBindingContextsAsync(string token, Mercury.Server.Application.Population population) {
            this.Population_DataBindingContextsAsync(token, population, null);
        }
        
        public void Population_DataBindingContextsAsync(string token, Mercury.Server.Application.Population population, object userState) {
            if ((this.onBeginPopulation_DataBindingContextsDelegate == null)) {
                this.onBeginPopulation_DataBindingContextsDelegate = new BeginOperationDelegate(this.OnBeginPopulation_DataBindingContexts);
            }
            if ((this.onEndPopulation_DataBindingContextsDelegate == null)) {
                this.onEndPopulation_DataBindingContextsDelegate = new EndOperationDelegate(this.OnEndPopulation_DataBindingContexts);
            }
            if ((this.onPopulation_DataBindingContextsCompletedDelegate == null)) {
                this.onPopulation_DataBindingContextsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulation_DataBindingContextsCompleted);
            }
            base.InvokeAsync(this.onBeginPopulation_DataBindingContextsDelegate, new object[] {
                        token,
                        population}, this.onEndPopulation_DataBindingContextsDelegate, this.onPopulation_DataBindingContextsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipGet(string token, long populationMembershipId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipGet(token, populationMembershipId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembership Mercury.Server.Application.IApplication.EndPopulationMembershipGet(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipGet(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationMembershipId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipGet(token, populationMembershipId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipGet(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembership retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipGetCompleted(object state) {
            if ((this.PopulationMembershipGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipGetCompleted(this, new PopulationMembershipGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipGetAsync(string token, long populationMembershipId) {
            this.PopulationMembershipGetAsync(token, populationMembershipId, null);
        }
        
        public void PopulationMembershipGetAsync(string token, long populationMembershipId, object userState) {
            if ((this.onBeginPopulationMembershipGetDelegate == null)) {
                this.onBeginPopulationMembershipGetDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipGet);
            }
            if ((this.onEndPopulationMembershipGetDelegate == null)) {
                this.onEndPopulationMembershipGetDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipGet);
            }
            if ((this.onPopulationMembershipGetCompletedDelegate == null)) {
                this.onPopulationMembershipGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipGetCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipGetDelegate, new object[] {
                        token,
                        populationMembershipId}, this.onEndPopulationMembershipGetDelegate, this.onPopulationMembershipGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipServiceEventsGetByPopulationMembership(string token, long populationMembershipId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipServiceEventsGetByPopulationMembership(token, populationMembershipId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse Mercury.Server.Application.IApplication.EndPopulationMembershipServiceEventsGetByPopulationMembership(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipServiceEventsGetByPopulationMembership(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipServiceEventsGetByPopulationMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationMembershipId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipServiceEventsGetByPopulationMembership(token, populationMembershipId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipServiceEventsGetByPopulationMembership(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipServiceEventsGetByPopulationMembership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipServiceEventsGetByPopulationMembershipCompleted(object state) {
            if ((this.PopulationMembershipServiceEventsGetByPopulationMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipServiceEventsGetByPopulationMembershipCompleted(this, new PopulationMembershipServiceEventsGetByPopulationMembershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipServiceEventsGetByPopulationMembershipAsync(string token, long populationMembershipId) {
            this.PopulationMembershipServiceEventsGetByPopulationMembershipAsync(token, populationMembershipId, null);
        }
        
        public void PopulationMembershipServiceEventsGetByPopulationMembershipAsync(string token, long populationMembershipId, object userState) {
            if ((this.onBeginPopulationMembershipServiceEventsGetByPopulationMembershipDelegate == null)) {
                this.onBeginPopulationMembershipServiceEventsGetByPopulationMembershipDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipServiceEventsGetByPopulationMembership);
            }
            if ((this.onEndPopulationMembershipServiceEventsGetByPopulationMembershipDelegate == null)) {
                this.onEndPopulationMembershipServiceEventsGetByPopulationMembershipDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipServiceEventsGetByPopulationMembership);
            }
            if ((this.onPopulationMembershipServiceEventsGetByPopulationMembershipCompletedDelegate == null)) {
                this.onPopulationMembershipServiceEventsGetByPopulationMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipServiceEventsGetByPopulationMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipServiceEventsGetByPopulationMembershipDelegate, new object[] {
                        token,
                        populationMembershipId}, this.onEndPopulationMembershipServiceEventsGetByPopulationMembershipDelegate, this.onPopulationMembershipServiceEventsGetByPopulationMembershipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipServiceEventGet(string token, long populationMembershipServiceEventId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipServiceEventGet(token, populationMembershipServiceEventId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipServiceEvent Mercury.Server.Application.IApplication.EndPopulationMembershipServiceEventGet(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipServiceEventGet(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipServiceEventGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationMembershipServiceEventId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipServiceEventGet(token, populationMembershipServiceEventId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipServiceEventGet(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipServiceEvent retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipServiceEventGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipServiceEventGetCompleted(object state) {
            if ((this.PopulationMembershipServiceEventGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipServiceEventGetCompleted(this, new PopulationMembershipServiceEventGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipServiceEventGetAsync(string token, long populationMembershipServiceEventId) {
            this.PopulationMembershipServiceEventGetAsync(token, populationMembershipServiceEventId, null);
        }
        
        public void PopulationMembershipServiceEventGetAsync(string token, long populationMembershipServiceEventId, object userState) {
            if ((this.onBeginPopulationMembershipServiceEventGetDelegate == null)) {
                this.onBeginPopulationMembershipServiceEventGetDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipServiceEventGet);
            }
            if ((this.onEndPopulationMembershipServiceEventGetDelegate == null)) {
                this.onEndPopulationMembershipServiceEventGetDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipServiceEventGet);
            }
            if ((this.onPopulationMembershipServiceEventGetCompletedDelegate == null)) {
                this.onPopulationMembershipServiceEventGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipServiceEventGetCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipServiceEventGetDelegate, new object[] {
                        token,
                        populationMembershipServiceEventId}, this.onEndPopulationMembershipServiceEventGetDelegate, this.onPopulationMembershipServiceEventGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipGetByMember(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipGetByMember(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipCollectionResponse Mercury.Server.Application.IApplication.EndPopulationMembershipGetByMember(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipGetByMember(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipGetByMember(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipGetByMember(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipGetByMember(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipGetByMember(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipGetByMemberCompleted(object state) {
            if ((this.PopulationMembershipGetByMemberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipGetByMemberCompleted(this, new PopulationMembershipGetByMemberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipGetByMemberAsync(string token, long memberId) {
            this.PopulationMembershipGetByMemberAsync(token, memberId, null);
        }
        
        public void PopulationMembershipGetByMemberAsync(string token, long memberId, object userState) {
            if ((this.onBeginPopulationMembershipGetByMemberDelegate == null)) {
                this.onBeginPopulationMembershipGetByMemberDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipGetByMember);
            }
            if ((this.onEndPopulationMembershipGetByMemberDelegate == null)) {
                this.onEndPopulationMembershipGetByMemberDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipGetByMember);
            }
            if ((this.onPopulationMembershipGetByMemberCompletedDelegate == null)) {
                this.onPopulationMembershipGetByMemberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipGetByMemberCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipGetByMemberDelegate, new object[] {
                        token,
                        memberId}, this.onEndPopulationMembershipGetByMemberDelegate, this.onPopulationMembershipGetByMemberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipSummaryByMember(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipSummaryByMember(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse Mercury.Server.Application.IApplication.EndPopulationMembershipSummaryByMember(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipSummaryByMember(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipSummaryByMember(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipSummaryByMember(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipSummaryByMember(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipSummaryByMember(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipSummaryByMemberCompleted(object state) {
            if ((this.PopulationMembershipSummaryByMemberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipSummaryByMemberCompleted(this, new PopulationMembershipSummaryByMemberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipSummaryByMemberAsync(string token, long memberId) {
            this.PopulationMembershipSummaryByMemberAsync(token, memberId, null);
        }
        
        public void PopulationMembershipSummaryByMemberAsync(string token, long memberId, object userState) {
            if ((this.onBeginPopulationMembershipSummaryByMemberDelegate == null)) {
                this.onBeginPopulationMembershipSummaryByMemberDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipSummaryByMember);
            }
            if ((this.onEndPopulationMembershipSummaryByMemberDelegate == null)) {
                this.onEndPopulationMembershipSummaryByMemberDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipSummaryByMember);
            }
            if ((this.onPopulationMembershipSummaryByMemberCompletedDelegate == null)) {
                this.onPopulationMembershipSummaryByMemberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipSummaryByMemberCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipSummaryByMemberDelegate, new object[] {
                        token,
                        memberId}, this.onEndPopulationMembershipSummaryByMemberDelegate, this.onPopulationMembershipSummaryByMemberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipServiceEventsByMembershipDataView(string token, long membershipId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipServiceEventsByMembershipDataView(token, membershipId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse Mercury.Server.Application.IApplication.EndPopulationMembershipServiceEventsByMembershipDataView(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipServiceEventsByMembershipDataView(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipServiceEventsByMembershipDataView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long membershipId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipServiceEventsByMembershipDataView(token, membershipId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipServiceEventsByMembershipDataView(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipServiceEventsByMembershipDataView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipServiceEventsByMembershipDataViewCompleted(object state) {
            if ((this.PopulationMembershipServiceEventsByMembershipDataViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipServiceEventsByMembershipDataViewCompleted(this, new PopulationMembershipServiceEventsByMembershipDataViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipServiceEventsByMembershipDataViewAsync(string token, long membershipId) {
            this.PopulationMembershipServiceEventsByMembershipDataViewAsync(token, membershipId, null);
        }
        
        public void PopulationMembershipServiceEventsByMembershipDataViewAsync(string token, long membershipId, object userState) {
            if ((this.onBeginPopulationMembershipServiceEventsByMembershipDataViewDelegate == null)) {
                this.onBeginPopulationMembershipServiceEventsByMembershipDataViewDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipServiceEventsByMembershipDataView);
            }
            if ((this.onEndPopulationMembershipServiceEventsByMembershipDataViewDelegate == null)) {
                this.onEndPopulationMembershipServiceEventsByMembershipDataViewDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipServiceEventsByMembershipDataView);
            }
            if ((this.onPopulationMembershipServiceEventsByMembershipDataViewCompletedDelegate == null)) {
                this.onPopulationMembershipServiceEventsByMembershipDataViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipServiceEventsByMembershipDataViewCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipServiceEventsByMembershipDataViewDelegate, new object[] {
                        token,
                        membershipId}, this.onEndPopulationMembershipServiceEventsByMembershipDataViewDelegate, this.onPopulationMembershipServiceEventsByMembershipDataViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipTriggerEventsByMembershipDataView(string token, long membershipId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipTriggerEventsByMembershipDataView(token, membershipId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse Mercury.Server.Application.IApplication.EndPopulationMembershipTriggerEventsByMembershipDataView(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipTriggerEventsByMembershipDataView(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipTriggerEventsByMembershipDataView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long membershipId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipTriggerEventsByMembershipDataView(token, membershipId, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipTriggerEventsByMembershipDataView(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipTriggerEventsByMembershipDataView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipTriggerEventsByMembershipDataViewCompleted(object state) {
            if ((this.PopulationMembershipTriggerEventsByMembershipDataViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipTriggerEventsByMembershipDataViewCompleted(this, new PopulationMembershipTriggerEventsByMembershipDataViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipTriggerEventsByMembershipDataViewAsync(string token, long membershipId) {
            this.PopulationMembershipTriggerEventsByMembershipDataViewAsync(token, membershipId, null);
        }
        
        public void PopulationMembershipTriggerEventsByMembershipDataViewAsync(string token, long membershipId, object userState) {
            if ((this.onBeginPopulationMembershipTriggerEventsByMembershipDataViewDelegate == null)) {
                this.onBeginPopulationMembershipTriggerEventsByMembershipDataViewDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipTriggerEventsByMembershipDataView);
            }
            if ((this.onEndPopulationMembershipTriggerEventsByMembershipDataViewDelegate == null)) {
                this.onEndPopulationMembershipTriggerEventsByMembershipDataViewDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipTriggerEventsByMembershipDataView);
            }
            if ((this.onPopulationMembershipTriggerEventsByMembershipDataViewCompletedDelegate == null)) {
                this.onPopulationMembershipTriggerEventsByMembershipDataViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipTriggerEventsByMembershipDataViewCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipTriggerEventsByMembershipDataViewDelegate, new object[] {
                        token,
                        membershipId}, this.onEndPopulationMembershipTriggerEventsByMembershipDataViewDelegate, this.onPopulationMembershipTriggerEventsByMembershipDataViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipGetCountByName(string token, long populationId, string namePrefix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipGetCountByName(token, populationId, namePrefix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndPopulationMembershipGetCountByName(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipGetCountByName(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipGetCountByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationId = ((long)(inValues[1]));
            string namePrefix = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipGetCountByName(token, populationId, namePrefix, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipGetCountByName(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipGetCountByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipGetCountByNameCompleted(object state) {
            if ((this.PopulationMembershipGetCountByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipGetCountByNameCompleted(this, new PopulationMembershipGetCountByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipGetCountByNameAsync(string token, long populationId, string namePrefix) {
            this.PopulationMembershipGetCountByNameAsync(token, populationId, namePrefix, null);
        }
        
        public void PopulationMembershipGetCountByNameAsync(string token, long populationId, string namePrefix, object userState) {
            if ((this.onBeginPopulationMembershipGetCountByNameDelegate == null)) {
                this.onBeginPopulationMembershipGetCountByNameDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipGetCountByName);
            }
            if ((this.onEndPopulationMembershipGetCountByNameDelegate == null)) {
                this.onEndPopulationMembershipGetCountByNameDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipGetCountByName);
            }
            if ((this.onPopulationMembershipGetCountByNameCompletedDelegate == null)) {
                this.onPopulationMembershipGetCountByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipGetCountByNameCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipGetCountByNameDelegate, new object[] {
                        token,
                        populationId,
                        namePrefix}, this.onEndPopulationMembershipGetCountByNameDelegate, this.onPopulationMembershipGetCountByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationMembershipGetByMembershipPage(string token, long populationId, string namePrefix, long initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationMembershipGetByMembershipPage(token, populationId, namePrefix, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse Mercury.Server.Application.IApplication.EndPopulationMembershipGetByMembershipPage(System.IAsyncResult result) {
            return base.Channel.EndPopulationMembershipGetByMembershipPage(result);
        }
        
        private System.IAsyncResult OnBeginPopulationMembershipGetByMembershipPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationId = ((long)(inValues[1]));
            string namePrefix = ((string)(inValues[2]));
            long initialRow = ((long)(inValues[3]));
            int count = ((int)(inValues[4]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationMembershipGetByMembershipPage(token, populationId, namePrefix, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndPopulationMembershipGetByMembershipPage(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationMembershipGetByMembershipPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationMembershipGetByMembershipPageCompleted(object state) {
            if ((this.PopulationMembershipGetByMembershipPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationMembershipGetByMembershipPageCompleted(this, new PopulationMembershipGetByMembershipPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationMembershipGetByMembershipPageAsync(string token, long populationId, string namePrefix, long initialRow, int count) {
            this.PopulationMembershipGetByMembershipPageAsync(token, populationId, namePrefix, initialRow, count, null);
        }
        
        public void PopulationMembershipGetByMembershipPageAsync(string token, long populationId, string namePrefix, long initialRow, int count, object userState) {
            if ((this.onBeginPopulationMembershipGetByMembershipPageDelegate == null)) {
                this.onBeginPopulationMembershipGetByMembershipPageDelegate = new BeginOperationDelegate(this.OnBeginPopulationMembershipGetByMembershipPage);
            }
            if ((this.onEndPopulationMembershipGetByMembershipPageDelegate == null)) {
                this.onEndPopulationMembershipGetByMembershipPageDelegate = new EndOperationDelegate(this.OnEndPopulationMembershipGetByMembershipPage);
            }
            if ((this.onPopulationMembershipGetByMembershipPageCompletedDelegate == null)) {
                this.onPopulationMembershipGetByMembershipPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationMembershipGetByMembershipPageCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationMembershipGetByMembershipPageDelegate, new object[] {
                        token,
                        populationId,
                        namePrefix,
                        initialRow,
                        count}, this.onEndPopulationMembershipGetByMembershipPageDelegate, this.onPopulationMembershipGetByMembershipPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderGet(token, providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Provider Mercury.Server.Application.IApplication.EndProviderGet(System.IAsyncResult result) {
            return base.Channel.EndProviderGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderGet(token, providerId, callback, asyncState);
        }
        
        private object[] OnEndProviderGet(System.IAsyncResult result) {
            Mercury.Server.Application.Provider retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderGetCompleted(object state) {
            if ((this.ProviderGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderGetCompleted(this, new ProviderGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderGetAsync(string token, long providerId) {
            this.ProviderGetAsync(token, providerId, null);
        }
        
        public void ProviderGetAsync(string token, long providerId, object userState) {
            if ((this.onBeginProviderGetDelegate == null)) {
                this.onBeginProviderGetDelegate = new BeginOperationDelegate(this.OnBeginProviderGet);
            }
            if ((this.onEndProviderGetDelegate == null)) {
                this.onEndProviderGetDelegate = new EndOperationDelegate(this.OnEndProviderGet);
            }
            if ((this.onProviderGetCompletedDelegate == null)) {
                this.onProviderGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderGetDelegate, new object[] {
                        token,
                        providerId}, this.onEndProviderGetDelegate, this.onProviderGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderGetByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderGetByEntityId(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Provider Mercury.Server.Application.IApplication.EndProviderGetByEntityId(System.IAsyncResult result) {
            return base.Channel.EndProviderGetByEntityId(result);
        }
        
        private System.IAsyncResult OnBeginProviderGetByEntityId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderGetByEntityId(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndProviderGetByEntityId(System.IAsyncResult result) {
            Mercury.Server.Application.Provider retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderGetByEntityId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderGetByEntityIdCompleted(object state) {
            if ((this.ProviderGetByEntityIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderGetByEntityIdCompleted(this, new ProviderGetByEntityIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderGetByEntityIdAsync(string token, long entityId) {
            this.ProviderGetByEntityIdAsync(token, entityId, null);
        }
        
        public void ProviderGetByEntityIdAsync(string token, long entityId, object userState) {
            if ((this.onBeginProviderGetByEntityIdDelegate == null)) {
                this.onBeginProviderGetByEntityIdDelegate = new BeginOperationDelegate(this.OnBeginProviderGetByEntityId);
            }
            if ((this.onEndProviderGetByEntityIdDelegate == null)) {
                this.onEndProviderGetByEntityIdDelegate = new EndOperationDelegate(this.OnEndProviderGetByEntityId);
            }
            if ((this.onProviderGetByEntityIdCompletedDelegate == null)) {
                this.onProviderGetByEntityIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderGetByEntityIdCompleted);
            }
            base.InvokeAsync(this.onBeginProviderGetByEntityIdDelegate, new object[] {
                        token,
                        entityId}, this.onEndProviderGetByEntityIdDelegate, this.onProviderGetByEntityIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderEnrollmentsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderEnrollmentsGet(token, providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderEnrollmentCollectionResponse Mercury.Server.Application.IApplication.EndProviderEnrollmentsGet(System.IAsyncResult result) {
            return base.Channel.EndProviderEnrollmentsGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderEnrollmentsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderEnrollmentsGet(token, providerId, callback, asyncState);
        }
        
        private object[] OnEndProviderEnrollmentsGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderEnrollmentCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderEnrollmentsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderEnrollmentsGetCompleted(object state) {
            if ((this.ProviderEnrollmentsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderEnrollmentsGetCompleted(this, new ProviderEnrollmentsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderEnrollmentsGetAsync(string token, long providerId) {
            this.ProviderEnrollmentsGetAsync(token, providerId, null);
        }
        
        public void ProviderEnrollmentsGetAsync(string token, long providerId, object userState) {
            if ((this.onBeginProviderEnrollmentsGetDelegate == null)) {
                this.onBeginProviderEnrollmentsGetDelegate = new BeginOperationDelegate(this.OnBeginProviderEnrollmentsGet);
            }
            if ((this.onEndProviderEnrollmentsGetDelegate == null)) {
                this.onEndProviderEnrollmentsGetDelegate = new EndOperationDelegate(this.OnEndProviderEnrollmentsGet);
            }
            if ((this.onProviderEnrollmentsGetCompletedDelegate == null)) {
                this.onProviderEnrollmentsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderEnrollmentsGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderEnrollmentsGetDelegate, new object[] {
                        token,
                        providerId}, this.onEndProviderEnrollmentsGetDelegate, this.onProviderEnrollmentsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderEnrollmentGet(string token, long providerEnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderEnrollmentGet(token, providerEnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderEnrollment Mercury.Server.Application.IApplication.EndProviderEnrollmentGet(System.IAsyncResult result) {
            return base.Channel.EndProviderEnrollmentGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderEnrollmentGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerEnrollmentId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderEnrollmentGet(token, providerEnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndProviderEnrollmentGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderEnrollment retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderEnrollmentGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderEnrollmentGetCompleted(object state) {
            if ((this.ProviderEnrollmentGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderEnrollmentGetCompleted(this, new ProviderEnrollmentGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderEnrollmentGetAsync(string token, long providerEnrollmentId) {
            this.ProviderEnrollmentGetAsync(token, providerEnrollmentId, null);
        }
        
        public void ProviderEnrollmentGetAsync(string token, long providerEnrollmentId, object userState) {
            if ((this.onBeginProviderEnrollmentGetDelegate == null)) {
                this.onBeginProviderEnrollmentGetDelegate = new BeginOperationDelegate(this.OnBeginProviderEnrollmentGet);
            }
            if ((this.onEndProviderEnrollmentGetDelegate == null)) {
                this.onEndProviderEnrollmentGetDelegate = new EndOperationDelegate(this.OnEndProviderEnrollmentGet);
            }
            if ((this.onProviderEnrollmentGetCompletedDelegate == null)) {
                this.onProviderEnrollmentGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderEnrollmentGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderEnrollmentGetDelegate, new object[] {
                        token,
                        providerEnrollmentId}, this.onEndProviderEnrollmentGetDelegate, this.onProviderEnrollmentGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderAffiliationsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderAffiliationsGet(token, providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderAffiliationCollectionResponse Mercury.Server.Application.IApplication.EndProviderAffiliationsGet(System.IAsyncResult result) {
            return base.Channel.EndProviderAffiliationsGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderAffiliationsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderAffiliationsGet(token, providerId, callback, asyncState);
        }
        
        private object[] OnEndProviderAffiliationsGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderAffiliationCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderAffiliationsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderAffiliationsGetCompleted(object state) {
            if ((this.ProviderAffiliationsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderAffiliationsGetCompleted(this, new ProviderAffiliationsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderAffiliationsGetAsync(string token, long providerId) {
            this.ProviderAffiliationsGetAsync(token, providerId, null);
        }
        
        public void ProviderAffiliationsGetAsync(string token, long providerId, object userState) {
            if ((this.onBeginProviderAffiliationsGetDelegate == null)) {
                this.onBeginProviderAffiliationsGetDelegate = new BeginOperationDelegate(this.OnBeginProviderAffiliationsGet);
            }
            if ((this.onEndProviderAffiliationsGetDelegate == null)) {
                this.onEndProviderAffiliationsGetDelegate = new EndOperationDelegate(this.OnEndProviderAffiliationsGet);
            }
            if ((this.onProviderAffiliationsGetCompletedDelegate == null)) {
                this.onProviderAffiliationsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderAffiliationsGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderAffiliationsGetDelegate, new object[] {
                        token,
                        providerId}, this.onEndProviderAffiliationsGetDelegate, this.onProviderAffiliationsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderAffiliationGet(string token, long providerAffiliationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderAffiliationGet(token, providerAffiliationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderAffiliation Mercury.Server.Application.IApplication.EndProviderAffiliationGet(System.IAsyncResult result) {
            return base.Channel.EndProviderAffiliationGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderAffiliationGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerAffiliationId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderAffiliationGet(token, providerAffiliationId, callback, asyncState);
        }
        
        private object[] OnEndProviderAffiliationGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderAffiliation retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderAffiliationGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderAffiliationGetCompleted(object state) {
            if ((this.ProviderAffiliationGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderAffiliationGetCompleted(this, new ProviderAffiliationGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderAffiliationGetAsync(string token, long providerAffiliationId) {
            this.ProviderAffiliationGetAsync(token, providerAffiliationId, null);
        }
        
        public void ProviderAffiliationGetAsync(string token, long providerAffiliationId, object userState) {
            if ((this.onBeginProviderAffiliationGetDelegate == null)) {
                this.onBeginProviderAffiliationGetDelegate = new BeginOperationDelegate(this.OnBeginProviderAffiliationGet);
            }
            if ((this.onEndProviderAffiliationGetDelegate == null)) {
                this.onEndProviderAffiliationGetDelegate = new EndOperationDelegate(this.OnEndProviderAffiliationGet);
            }
            if ((this.onProviderAffiliationGetCompletedDelegate == null)) {
                this.onProviderAffiliationGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderAffiliationGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderAffiliationGetDelegate, new object[] {
                        token,
                        providerAffiliationId}, this.onEndProviderAffiliationGetDelegate, this.onProviderAffiliationGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderContractsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderContractsGet(token, providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderContractCollectionResponse Mercury.Server.Application.IApplication.EndProviderContractsGet(System.IAsyncResult result) {
            return base.Channel.EndProviderContractsGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderContractsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderContractsGet(token, providerId, callback, asyncState);
        }
        
        private object[] OnEndProviderContractsGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderContractCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderContractsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderContractsGetCompleted(object state) {
            if ((this.ProviderContractsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderContractsGetCompleted(this, new ProviderContractsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderContractsGetAsync(string token, long providerId) {
            this.ProviderContractsGetAsync(token, providerId, null);
        }
        
        public void ProviderContractsGetAsync(string token, long providerId, object userState) {
            if ((this.onBeginProviderContractsGetDelegate == null)) {
                this.onBeginProviderContractsGetDelegate = new BeginOperationDelegate(this.OnBeginProviderContractsGet);
            }
            if ((this.onEndProviderContractsGetDelegate == null)) {
                this.onEndProviderContractsGetDelegate = new EndOperationDelegate(this.OnEndProviderContractsGet);
            }
            if ((this.onProviderContractsGetCompletedDelegate == null)) {
                this.onProviderContractsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderContractsGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderContractsGetDelegate, new object[] {
                        token,
                        providerId}, this.onEndProviderContractsGetDelegate, this.onProviderContractsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderContractGet(string token, long providerContractId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderContractGet(token, providerContractId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderContract Mercury.Server.Application.IApplication.EndProviderContractGet(System.IAsyncResult result) {
            return base.Channel.EndProviderContractGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderContractGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerContractId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderContractGet(token, providerContractId, callback, asyncState);
        }
        
        private object[] OnEndProviderContractGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderContract retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderContractGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderContractGetCompleted(object state) {
            if ((this.ProviderContractGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderContractGetCompleted(this, new ProviderContractGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderContractGetAsync(string token, long providerContractId) {
            this.ProviderContractGetAsync(token, providerContractId, null);
        }
        
        public void ProviderContractGetAsync(string token, long providerContractId, object userState) {
            if ((this.onBeginProviderContractGetDelegate == null)) {
                this.onBeginProviderContractGetDelegate = new BeginOperationDelegate(this.OnBeginProviderContractGet);
            }
            if ((this.onEndProviderContractGetDelegate == null)) {
                this.onEndProviderContractGetDelegate = new EndOperationDelegate(this.OnEndProviderContractGet);
            }
            if ((this.onProviderContractGetCompletedDelegate == null)) {
                this.onProviderContractGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderContractGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderContractGetDelegate, new object[] {
                        token,
                        providerContractId}, this.onEndProviderContractGetDelegate, this.onProviderContractGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProviderServiceLocationsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProviderServiceLocationsGet(token, providerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProviderServiceLocationCollectionResponse Mercury.Server.Application.IApplication.EndProviderServiceLocationsGet(System.IAsyncResult result) {
            return base.Channel.EndProviderServiceLocationsGet(result);
        }
        
        private System.IAsyncResult OnBeginProviderServiceLocationsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long providerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProviderServiceLocationsGet(token, providerId, callback, asyncState);
        }
        
        private object[] OnEndProviderServiceLocationsGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProviderServiceLocationCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProviderServiceLocationsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProviderServiceLocationsGetCompleted(object state) {
            if ((this.ProviderServiceLocationsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProviderServiceLocationsGetCompleted(this, new ProviderServiceLocationsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProviderServiceLocationsGetAsync(string token, long providerId) {
            this.ProviderServiceLocationsGetAsync(token, providerId, null);
        }
        
        public void ProviderServiceLocationsGetAsync(string token, long providerId, object userState) {
            if ((this.onBeginProviderServiceLocationsGetDelegate == null)) {
                this.onBeginProviderServiceLocationsGetDelegate = new BeginOperationDelegate(this.OnBeginProviderServiceLocationsGet);
            }
            if ((this.onEndProviderServiceLocationsGetDelegate == null)) {
                this.onEndProviderServiceLocationsGetDelegate = new EndOperationDelegate(this.OnEndProviderServiceLocationsGet);
            }
            if ((this.onProviderServiceLocationsGetCompletedDelegate == null)) {
                this.onProviderServiceLocationsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProviderServiceLocationsGetCompleted);
            }
            base.InvokeAsync(this.onBeginProviderServiceLocationsGetDelegate, new object[] {
                        token,
                        providerId}, this.onEndProviderServiceLocationsGetDelegate, this.onProviderServiceLocationsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSponsorGet(string token, long sponsorId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSponsorGet(token, sponsorId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Sponsor Mercury.Server.Application.IApplication.EndSponsorGet(System.IAsyncResult result) {
            return base.Channel.EndSponsorGet(result);
        }
        
        private System.IAsyncResult OnBeginSponsorGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long sponsorId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSponsorGet(token, sponsorId, callback, asyncState);
        }
        
        private object[] OnEndSponsorGet(System.IAsyncResult result) {
            Mercury.Server.Application.Sponsor retVal = ((Mercury.Server.Application.IApplication)(this)).EndSponsorGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSponsorGetCompleted(object state) {
            if ((this.SponsorGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SponsorGetCompleted(this, new SponsorGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SponsorGetAsync(string token, long sponsorId) {
            this.SponsorGetAsync(token, sponsorId, null);
        }
        
        public void SponsorGetAsync(string token, long sponsorId, object userState) {
            if ((this.onBeginSponsorGetDelegate == null)) {
                this.onBeginSponsorGetDelegate = new BeginOperationDelegate(this.OnBeginSponsorGet);
            }
            if ((this.onEndSponsorGetDelegate == null)) {
                this.onEndSponsorGetDelegate = new EndOperationDelegate(this.OnEndSponsorGet);
            }
            if ((this.onSponsorGetCompletedDelegate == null)) {
                this.onSponsorGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSponsorGetCompleted);
            }
            base.InvokeAsync(this.onBeginSponsorGetDelegate, new object[] {
                        token,
                        sponsorId}, this.onEndSponsorGetDelegate, this.onSponsorGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginRoutingRulesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoutingRulesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.RoutingRuleCollectionResponse Mercury.Server.Application.IApplication.EndRoutingRulesAvailable(System.IAsyncResult result) {
            return base.Channel.EndRoutingRulesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginRoutingRulesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginRoutingRulesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndRoutingRulesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.RoutingRuleCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndRoutingRulesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoutingRulesAvailableCompleted(object state) {
            if ((this.RoutingRulesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoutingRulesAvailableCompleted(this, new RoutingRulesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoutingRulesAvailableAsync(string token) {
            this.RoutingRulesAvailableAsync(token, null);
        }
        
        public void RoutingRulesAvailableAsync(string token, object userState) {
            if ((this.onBeginRoutingRulesAvailableDelegate == null)) {
                this.onBeginRoutingRulesAvailableDelegate = new BeginOperationDelegate(this.OnBeginRoutingRulesAvailable);
            }
            if ((this.onEndRoutingRulesAvailableDelegate == null)) {
                this.onEndRoutingRulesAvailableDelegate = new EndOperationDelegate(this.OnEndRoutingRulesAvailable);
            }
            if ((this.onRoutingRulesAvailableCompletedDelegate == null)) {
                this.onRoutingRulesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoutingRulesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginRoutingRulesAvailableDelegate, new object[] {
                        token}, this.onEndRoutingRulesAvailableDelegate, this.onRoutingRulesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberGet(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Member Mercury.Server.Application.IApplication.EndMemberGet(System.IAsyncResult result) {
            return base.Channel.EndMemberGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberGet(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberGet(System.IAsyncResult result) {
            Mercury.Server.Application.Member retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberGetCompleted(object state) {
            if ((this.MemberGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberGetCompleted(this, new MemberGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberGetAsync(string token, long memberId) {
            this.MemberGetAsync(token, memberId, null);
        }
        
        public void MemberGetAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberGetDelegate == null)) {
                this.onBeginMemberGetDelegate = new BeginOperationDelegate(this.OnBeginMemberGet);
            }
            if ((this.onEndMemberGetDelegate == null)) {
                this.onEndMemberGetDelegate = new EndOperationDelegate(this.OnEndMemberGet);
            }
            if ((this.onMemberGetCompletedDelegate == null)) {
                this.onMemberGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberGetDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberGetDelegate, this.onMemberGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberGetByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberGetByEntityId(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Member Mercury.Server.Application.IApplication.EndMemberGetByEntityId(System.IAsyncResult result) {
            return base.Channel.EndMemberGetByEntityId(result);
        }
        
        private System.IAsyncResult OnBeginMemberGetByEntityId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberGetByEntityId(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndMemberGetByEntityId(System.IAsyncResult result) {
            Mercury.Server.Application.Member retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberGetByEntityId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberGetByEntityIdCompleted(object state) {
            if ((this.MemberGetByEntityIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberGetByEntityIdCompleted(this, new MemberGetByEntityIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberGetByEntityIdAsync(string token, long entityId) {
            this.MemberGetByEntityIdAsync(token, entityId, null);
        }
        
        public void MemberGetByEntityIdAsync(string token, long entityId, object userState) {
            if ((this.onBeginMemberGetByEntityIdDelegate == null)) {
                this.onBeginMemberGetByEntityIdDelegate = new BeginOperationDelegate(this.OnBeginMemberGetByEntityId);
            }
            if ((this.onEndMemberGetByEntityIdDelegate == null)) {
                this.onEndMemberGetByEntityIdDelegate = new EndOperationDelegate(this.OnEndMemberGetByEntityId);
            }
            if ((this.onMemberGetByEntityIdCompletedDelegate == null)) {
                this.onMemberGetByEntityIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberGetByEntityIdCompleted);
            }
            base.InvokeAsync(this.onBeginMemberGetByEntityIdDelegate, new object[] {
                        token,
                        entityId}, this.onEndMemberGetByEntityIdDelegate, this.onMemberGetByEntityIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberGetDemographics(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberGetDemographics(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberDemographicsResponse Mercury.Server.Application.IApplication.EndMemberGetDemographics(System.IAsyncResult result) {
            return base.Channel.EndMemberGetDemographics(result);
        }
        
        private System.IAsyncResult OnBeginMemberGetDemographics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberGetDemographics(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberGetDemographics(System.IAsyncResult result) {
            Mercury.Server.Application.MemberDemographicsResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberGetDemographics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberGetDemographicsCompleted(object state) {
            if ((this.MemberGetDemographicsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberGetDemographicsCompleted(this, new MemberGetDemographicsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberGetDemographicsAsync(string token, long memberId) {
            this.MemberGetDemographicsAsync(token, memberId, null);
        }
        
        public void MemberGetDemographicsAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberGetDemographicsDelegate == null)) {
                this.onBeginMemberGetDemographicsDelegate = new BeginOperationDelegate(this.OnBeginMemberGetDemographics);
            }
            if ((this.onEndMemberGetDemographicsDelegate == null)) {
                this.onEndMemberGetDemographicsDelegate = new EndOperationDelegate(this.OnEndMemberGetDemographics);
            }
            if ((this.onMemberGetDemographicsCompletedDelegate == null)) {
                this.onMemberGetDemographicsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberGetDemographicsCompleted);
            }
            base.InvokeAsync(this.onBeginMemberGetDemographicsDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberGetDemographicsDelegate, this.onMemberGetDemographicsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberGetDemographicsByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberGetDemographicsByEntityId(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberDemographicsResponse Mercury.Server.Application.IApplication.EndMemberGetDemographicsByEntityId(System.IAsyncResult result) {
            return base.Channel.EndMemberGetDemographicsByEntityId(result);
        }
        
        private System.IAsyncResult OnBeginMemberGetDemographicsByEntityId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberGetDemographicsByEntityId(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndMemberGetDemographicsByEntityId(System.IAsyncResult result) {
            Mercury.Server.Application.MemberDemographicsResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberGetDemographicsByEntityId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberGetDemographicsByEntityIdCompleted(object state) {
            if ((this.MemberGetDemographicsByEntityIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberGetDemographicsByEntityIdCompleted(this, new MemberGetDemographicsByEntityIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberGetDemographicsByEntityIdAsync(string token, long entityId) {
            this.MemberGetDemographicsByEntityIdAsync(token, entityId, null);
        }
        
        public void MemberGetDemographicsByEntityIdAsync(string token, long entityId, object userState) {
            if ((this.onBeginMemberGetDemographicsByEntityIdDelegate == null)) {
                this.onBeginMemberGetDemographicsByEntityIdDelegate = new BeginOperationDelegate(this.OnBeginMemberGetDemographicsByEntityId);
            }
            if ((this.onEndMemberGetDemographicsByEntityIdDelegate == null)) {
                this.onEndMemberGetDemographicsByEntityIdDelegate = new EndOperationDelegate(this.OnEndMemberGetDemographicsByEntityId);
            }
            if ((this.onMemberGetDemographicsByEntityIdCompletedDelegate == null)) {
                this.onMemberGetDemographicsByEntityIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberGetDemographicsByEntityIdCompleted);
            }
            base.InvokeAsync(this.onBeginMemberGetDemographicsByEntityIdDelegate, new object[] {
                        token,
                        entityId}, this.onEndMemberGetDemographicsByEntityIdDelegate, this.onMemberGetDemographicsByEntityIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentGet(token, memberEnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollment Mercury.Server.Application.IApplication.EndMemberEnrollmentGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberEnrollmentId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentGet(token, memberEnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollment retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentGetCompleted(object state) {
            if ((this.MemberEnrollmentGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentGetCompleted(this, new MemberEnrollmentGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentGetAsync(string token, long memberEnrollmentId) {
            this.MemberEnrollmentGetAsync(token, memberEnrollmentId, null);
        }
        
        public void MemberEnrollmentGetAsync(string token, long memberEnrollmentId, object userState) {
            if ((this.onBeginMemberEnrollmentGetDelegate == null)) {
                this.onBeginMemberEnrollmentGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentGet);
            }
            if ((this.onEndMemberEnrollmentGetDelegate == null)) {
                this.onEndMemberEnrollmentGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentGet);
            }
            if ((this.onMemberEnrollmentGetCompletedDelegate == null)) {
                this.onMemberEnrollmentGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentGetDelegate, new object[] {
                        token,
                        memberEnrollmentId}, this.onEndMemberEnrollmentGetDelegate, this.onMemberEnrollmentGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentsGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentsGet(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentCollectionResponse Mercury.Server.Application.IApplication.EndMemberEnrollmentsGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentsGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentsGet(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentsGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentsGetCompleted(object state) {
            if ((this.MemberEnrollmentsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentsGetCompleted(this, new MemberEnrollmentsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentsGetAsync(string token, long memberId) {
            this.MemberEnrollmentsGetAsync(token, memberId, null);
        }
        
        public void MemberEnrollmentsGetAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberEnrollmentsGetDelegate == null)) {
                this.onBeginMemberEnrollmentsGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentsGet);
            }
            if ((this.onEndMemberEnrollmentsGetDelegate == null)) {
                this.onEndMemberEnrollmentsGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentsGet);
            }
            if ((this.onMemberEnrollmentsGetCompletedDelegate == null)) {
                this.onMemberEnrollmentsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentsGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentsGetDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberEnrollmentsGetDelegate, this.onMemberEnrollmentsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentCoverageGet(string token, long memberEnrollmentCoverageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentCoverageGet(token, memberEnrollmentCoverageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentCoverage Mercury.Server.Application.IApplication.EndMemberEnrollmentCoverageGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentCoverageGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentCoverageGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberEnrollmentCoverageId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentCoverageGet(token, memberEnrollmentCoverageId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentCoverageGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentCoverage retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentCoverageGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentCoverageGetCompleted(object state) {
            if ((this.MemberEnrollmentCoverageGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentCoverageGetCompleted(this, new MemberEnrollmentCoverageGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentCoverageGetAsync(string token, long memberEnrollmentCoverageId) {
            this.MemberEnrollmentCoverageGetAsync(token, memberEnrollmentCoverageId, null);
        }
        
        public void MemberEnrollmentCoverageGetAsync(string token, long memberEnrollmentCoverageId, object userState) {
            if ((this.onBeginMemberEnrollmentCoverageGetDelegate == null)) {
                this.onBeginMemberEnrollmentCoverageGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentCoverageGet);
            }
            if ((this.onEndMemberEnrollmentCoverageGetDelegate == null)) {
                this.onEndMemberEnrollmentCoverageGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentCoverageGet);
            }
            if ((this.onMemberEnrollmentCoverageGetCompletedDelegate == null)) {
                this.onMemberEnrollmentCoverageGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentCoverageGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentCoverageGetDelegate, new object[] {
                        token,
                        memberEnrollmentCoverageId}, this.onEndMemberEnrollmentCoverageGetDelegate, this.onMemberEnrollmentCoverageGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentCoveragesGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentCoveragesGet(token, memberEnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse Mercury.Server.Application.IApplication.EndMemberEnrollmentCoveragesGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentCoveragesGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentCoveragesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberEnrollmentId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentCoveragesGet(token, memberEnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentCoveragesGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentCoveragesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentCoveragesGetCompleted(object state) {
            if ((this.MemberEnrollmentCoveragesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentCoveragesGetCompleted(this, new MemberEnrollmentCoveragesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentCoveragesGetAsync(string token, long memberEnrollmentId) {
            this.MemberEnrollmentCoveragesGetAsync(token, memberEnrollmentId, null);
        }
        
        public void MemberEnrollmentCoveragesGetAsync(string token, long memberEnrollmentId, object userState) {
            if ((this.onBeginMemberEnrollmentCoveragesGetDelegate == null)) {
                this.onBeginMemberEnrollmentCoveragesGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentCoveragesGet);
            }
            if ((this.onEndMemberEnrollmentCoveragesGetDelegate == null)) {
                this.onEndMemberEnrollmentCoveragesGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentCoveragesGet);
            }
            if ((this.onMemberEnrollmentCoveragesGetCompletedDelegate == null)) {
                this.onMemberEnrollmentCoveragesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentCoveragesGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentCoveragesGetDelegate, new object[] {
                        token,
                        memberEnrollmentId}, this.onEndMemberEnrollmentCoveragesGetDelegate, this.onMemberEnrollmentCoveragesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentPcpGet(string token, long memberEnrollmentPcpId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentPcpGet(token, memberEnrollmentPcpId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentPcp Mercury.Server.Application.IApplication.EndMemberEnrollmentPcpGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentPcpGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentPcpGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberEnrollmentPcpId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentPcpGet(token, memberEnrollmentPcpId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentPcpGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentPcp retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentPcpGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentPcpGetCompleted(object state) {
            if ((this.MemberEnrollmentPcpGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentPcpGetCompleted(this, new MemberEnrollmentPcpGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentPcpGetAsync(string token, long memberEnrollmentPcpId) {
            this.MemberEnrollmentPcpGetAsync(token, memberEnrollmentPcpId, null);
        }
        
        public void MemberEnrollmentPcpGetAsync(string token, long memberEnrollmentPcpId, object userState) {
            if ((this.onBeginMemberEnrollmentPcpGetDelegate == null)) {
                this.onBeginMemberEnrollmentPcpGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentPcpGet);
            }
            if ((this.onEndMemberEnrollmentPcpGetDelegate == null)) {
                this.onEndMemberEnrollmentPcpGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentPcpGet);
            }
            if ((this.onMemberEnrollmentPcpGetCompletedDelegate == null)) {
                this.onMemberEnrollmentPcpGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentPcpGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentPcpGetDelegate, new object[] {
                        token,
                        memberEnrollmentPcpId}, this.onEndMemberEnrollmentPcpGetDelegate, this.onMemberEnrollmentPcpGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentPcpsGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentPcpsGet(token, memberEnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse Mercury.Server.Application.IApplication.EndMemberEnrollmentPcpsGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentPcpsGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentPcpsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberEnrollmentId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentPcpsGet(token, memberEnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentPcpsGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentPcpsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentPcpsGetCompleted(object state) {
            if ((this.MemberEnrollmentPcpsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentPcpsGetCompleted(this, new MemberEnrollmentPcpsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentPcpsGetAsync(string token, long memberEnrollmentId) {
            this.MemberEnrollmentPcpsGetAsync(token, memberEnrollmentId, null);
        }
        
        public void MemberEnrollmentPcpsGetAsync(string token, long memberEnrollmentId, object userState) {
            if ((this.onBeginMemberEnrollmentPcpsGetDelegate == null)) {
                this.onBeginMemberEnrollmentPcpsGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentPcpsGet);
            }
            if ((this.onEndMemberEnrollmentPcpsGetDelegate == null)) {
                this.onEndMemberEnrollmentPcpsGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentPcpsGet);
            }
            if ((this.onMemberEnrollmentPcpsGetCompletedDelegate == null)) {
                this.onMemberEnrollmentPcpsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentPcpsGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentPcpsGetDelegate, new object[] {
                        token,
                        memberEnrollmentId}, this.onEndMemberEnrollmentPcpsGetDelegate, this.onMemberEnrollmentPcpsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentTplCobGet(string token, long memberEnrollmentTplCobId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentTplCobGet(token, memberEnrollmentTplCobId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentTplCob Mercury.Server.Application.IApplication.EndMemberEnrollmentTplCobGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentTplCobGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentTplCobGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberEnrollmentTplCobId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentTplCobGet(token, memberEnrollmentTplCobId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentTplCobGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentTplCob retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentTplCobGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentTplCobGetCompleted(object state) {
            if ((this.MemberEnrollmentTplCobGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentTplCobGetCompleted(this, new MemberEnrollmentTplCobGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentTplCobGetAsync(string token, long memberEnrollmentTplCobId) {
            this.MemberEnrollmentTplCobGetAsync(token, memberEnrollmentTplCobId, null);
        }
        
        public void MemberEnrollmentTplCobGetAsync(string token, long memberEnrollmentTplCobId, object userState) {
            if ((this.onBeginMemberEnrollmentTplCobGetDelegate == null)) {
                this.onBeginMemberEnrollmentTplCobGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentTplCobGet);
            }
            if ((this.onEndMemberEnrollmentTplCobGetDelegate == null)) {
                this.onEndMemberEnrollmentTplCobGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentTplCobGet);
            }
            if ((this.onMemberEnrollmentTplCobGetCompletedDelegate == null)) {
                this.onMemberEnrollmentTplCobGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentTplCobGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentTplCobGetDelegate, new object[] {
                        token,
                        memberEnrollmentTplCobId}, this.onEndMemberEnrollmentTplCobGetDelegate, this.onMemberEnrollmentTplCobGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberEnrollmentTplCobsGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberEnrollmentTplCobsGet(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse Mercury.Server.Application.IApplication.EndMemberEnrollmentTplCobsGet(System.IAsyncResult result) {
            return base.Channel.EndMemberEnrollmentTplCobsGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberEnrollmentTplCobsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberEnrollmentTplCobsGet(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberEnrollmentTplCobsGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberEnrollmentTplCobsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberEnrollmentTplCobsGetCompleted(object state) {
            if ((this.MemberEnrollmentTplCobsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberEnrollmentTplCobsGetCompleted(this, new MemberEnrollmentTplCobsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberEnrollmentTplCobsGetAsync(string token, long memberId) {
            this.MemberEnrollmentTplCobsGetAsync(token, memberId, null);
        }
        
        public void MemberEnrollmentTplCobsGetAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberEnrollmentTplCobsGetDelegate == null)) {
                this.onBeginMemberEnrollmentTplCobsGetDelegate = new BeginOperationDelegate(this.OnBeginMemberEnrollmentTplCobsGet);
            }
            if ((this.onEndMemberEnrollmentTplCobsGetDelegate == null)) {
                this.onEndMemberEnrollmentTplCobsGetDelegate = new EndOperationDelegate(this.OnEndMemberEnrollmentTplCobsGet);
            }
            if ((this.onMemberEnrollmentTplCobsGetCompletedDelegate == null)) {
                this.onMemberEnrollmentTplCobsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberEnrollmentTplCobsGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberEnrollmentTplCobsGetDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberEnrollmentTplCobsGetDelegate, this.onMemberEnrollmentTplCobsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberRelationshipGet(string token, long memberRelationshipId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberRelationshipGet(token, memberRelationshipId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberRelationship Mercury.Server.Application.IApplication.EndMemberRelationshipGet(System.IAsyncResult result) {
            return base.Channel.EndMemberRelationshipGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberRelationshipGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberRelationshipId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberRelationshipGet(token, memberRelationshipId, callback, asyncState);
        }
        
        private object[] OnEndMemberRelationshipGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberRelationship retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberRelationshipGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberRelationshipGetCompleted(object state) {
            if ((this.MemberRelationshipGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberRelationshipGetCompleted(this, new MemberRelationshipGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberRelationshipGetAsync(string token, long memberRelationshipId) {
            this.MemberRelationshipGetAsync(token, memberRelationshipId, null);
        }
        
        public void MemberRelationshipGetAsync(string token, long memberRelationshipId, object userState) {
            if ((this.onBeginMemberRelationshipGetDelegate == null)) {
                this.onBeginMemberRelationshipGetDelegate = new BeginOperationDelegate(this.OnBeginMemberRelationshipGet);
            }
            if ((this.onEndMemberRelationshipGetDelegate == null)) {
                this.onEndMemberRelationshipGetDelegate = new EndOperationDelegate(this.OnEndMemberRelationshipGet);
            }
            if ((this.onMemberRelationshipGetCompletedDelegate == null)) {
                this.onMemberRelationshipGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberRelationshipGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberRelationshipGetDelegate, new object[] {
                        token,
                        memberRelationshipId}, this.onEndMemberRelationshipGetDelegate, this.onMemberRelationshipGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberRelationshipsGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberRelationshipsGet(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberRelationshipCollectionResponse Mercury.Server.Application.IApplication.EndMemberRelationshipsGet(System.IAsyncResult result) {
            return base.Channel.EndMemberRelationshipsGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberRelationshipsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberRelationshipsGet(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberRelationshipsGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberRelationshipCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberRelationshipsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberRelationshipsGetCompleted(object state) {
            if ((this.MemberRelationshipsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberRelationshipsGetCompleted(this, new MemberRelationshipsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberRelationshipsGetAsync(string token, long memberId) {
            this.MemberRelationshipsGetAsync(token, memberId, null);
        }
        
        public void MemberRelationshipsGetAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberRelationshipsGetDelegate == null)) {
                this.onBeginMemberRelationshipsGetDelegate = new BeginOperationDelegate(this.OnBeginMemberRelationshipsGet);
            }
            if ((this.onEndMemberRelationshipsGetDelegate == null)) {
                this.onEndMemberRelationshipsGetDelegate = new EndOperationDelegate(this.OnEndMemberRelationshipsGet);
            }
            if ((this.onMemberRelationshipsGetCompletedDelegate == null)) {
                this.onMemberRelationshipsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberRelationshipsGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberRelationshipsGetDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberRelationshipsGetDelegate, this.onMemberRelationshipsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMetricsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetricsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MetricCollectionResponse Mercury.Server.Application.IApplication.EndMetricsAvailable(System.IAsyncResult result) {
            return base.Channel.EndMetricsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginMetricsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMetricsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndMetricsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.MetricCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMetricsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetricsAvailableCompleted(object state) {
            if ((this.MetricsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetricsAvailableCompleted(this, new MetricsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetricsAvailableAsync(string token) {
            this.MetricsAvailableAsync(token, null);
        }
        
        public void MetricsAvailableAsync(string token, object userState) {
            if ((this.onBeginMetricsAvailableDelegate == null)) {
                this.onBeginMetricsAvailableDelegate = new BeginOperationDelegate(this.OnBeginMetricsAvailable);
            }
            if ((this.onEndMetricsAvailableDelegate == null)) {
                this.onEndMetricsAvailableDelegate = new EndOperationDelegate(this.OnEndMetricsAvailable);
            }
            if ((this.onMetricsAvailableCompletedDelegate == null)) {
                this.onMetricsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetricsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginMetricsAvailableDelegate, new object[] {
                        token}, this.onEndMetricsAvailableDelegate, this.onMetricsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMetricGet(string token, long metricId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetricGet(token, metricId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Metric Mercury.Server.Application.IApplication.EndMetricGet(System.IAsyncResult result) {
            return base.Channel.EndMetricGet(result);
        }
        
        private System.IAsyncResult OnBeginMetricGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long metricId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMetricGet(token, metricId, callback, asyncState);
        }
        
        private object[] OnEndMetricGet(System.IAsyncResult result) {
            Mercury.Server.Application.Metric retVal = ((Mercury.Server.Application.IApplication)(this)).EndMetricGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetricGetCompleted(object state) {
            if ((this.MetricGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetricGetCompleted(this, new MetricGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetricGetAsync(string token, long metricId) {
            this.MetricGetAsync(token, metricId, null);
        }
        
        public void MetricGetAsync(string token, long metricId, object userState) {
            if ((this.onBeginMetricGetDelegate == null)) {
                this.onBeginMetricGetDelegate = new BeginOperationDelegate(this.OnBeginMetricGet);
            }
            if ((this.onEndMetricGetDelegate == null)) {
                this.onEndMetricGetDelegate = new EndOperationDelegate(this.OnEndMetricGet);
            }
            if ((this.onMetricGetCompletedDelegate == null)) {
                this.onMetricGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetricGetCompleted);
            }
            base.InvokeAsync(this.onBeginMetricGetDelegate, new object[] {
                        token,
                        metricId}, this.onEndMetricGetDelegate, this.onMetricGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMetricSave(string token, Mercury.Server.Application.Metric metric, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetricSave(token, metric, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndMetricSave(System.IAsyncResult result) {
            return base.Channel.EndMetricSave(result);
        }
        
        private System.IAsyncResult OnBeginMetricSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Metric metric = ((Mercury.Server.Application.Metric)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMetricSave(token, metric, callback, asyncState);
        }
        
        private object[] OnEndMetricSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMetricSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetricSaveCompleted(object state) {
            if ((this.MetricSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetricSaveCompleted(this, new MetricSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetricSaveAsync(string token, Mercury.Server.Application.Metric metric) {
            this.MetricSaveAsync(token, metric, null);
        }
        
        public void MetricSaveAsync(string token, Mercury.Server.Application.Metric metric, object userState) {
            if ((this.onBeginMetricSaveDelegate == null)) {
                this.onBeginMetricSaveDelegate = new BeginOperationDelegate(this.OnBeginMetricSave);
            }
            if ((this.onEndMetricSaveDelegate == null)) {
                this.onEndMetricSaveDelegate = new EndOperationDelegate(this.OnEndMetricSave);
            }
            if ((this.onMetricSaveCompletedDelegate == null)) {
                this.onMetricSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetricSaveCompleted);
            }
            base.InvokeAsync(this.onBeginMetricSaveDelegate, new object[] {
                        token,
                        metric}, this.onEndMetricSaveDelegate, this.onMetricSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberMetricAddManual(string token, long memberId, long metricId, System.DateTime eventDate, decimal value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberMetricAddManual(token, memberId, metricId, eventDate, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndMemberMetricAddManual(System.IAsyncResult result) {
            return base.Channel.EndMemberMetricAddManual(result);
        }
        
        private System.IAsyncResult OnBeginMemberMetricAddManual(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            long metricId = ((long)(inValues[2]));
            System.DateTime eventDate = ((System.DateTime)(inValues[3]));
            decimal value = ((decimal)(inValues[4]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberMetricAddManual(token, memberId, metricId, eventDate, value, callback, asyncState);
        }
        
        private object[] OnEndMemberMetricAddManual(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberMetricAddManual(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberMetricAddManualCompleted(object state) {
            if ((this.MemberMetricAddManualCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberMetricAddManualCompleted(this, new MemberMetricAddManualCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberMetricAddManualAsync(string token, long memberId, long metricId, System.DateTime eventDate, decimal value) {
            this.MemberMetricAddManualAsync(token, memberId, metricId, eventDate, value, null);
        }
        
        public void MemberMetricAddManualAsync(string token, long memberId, long metricId, System.DateTime eventDate, decimal value, object userState) {
            if ((this.onBeginMemberMetricAddManualDelegate == null)) {
                this.onBeginMemberMetricAddManualDelegate = new BeginOperationDelegate(this.OnBeginMemberMetricAddManual);
            }
            if ((this.onEndMemberMetricAddManualDelegate == null)) {
                this.onEndMemberMetricAddManualDelegate = new EndOperationDelegate(this.OnEndMemberMetricAddManual);
            }
            if ((this.onMemberMetricAddManualCompletedDelegate == null)) {
                this.onMemberMetricAddManualCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberMetricAddManualCompleted);
            }
            base.InvokeAsync(this.onBeginMemberMetricAddManualDelegate, new object[] {
                        token,
                        memberId,
                        metricId,
                        eventDate,
                        value}, this.onEndMemberMetricAddManualDelegate, this.onMemberMetricAddManualCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberMetricRemoveManual(string token, long memberMetricId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberMetricRemoveManual(token, memberMetricId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndMemberMetricRemoveManual(System.IAsyncResult result) {
            return base.Channel.EndMemberMetricRemoveManual(result);
        }
        
        private System.IAsyncResult OnBeginMemberMetricRemoveManual(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberMetricId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberMetricRemoveManual(token, memberMetricId, callback, asyncState);
        }
        
        private object[] OnEndMemberMetricRemoveManual(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberMetricRemoveManual(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberMetricRemoveManualCompleted(object state) {
            if ((this.MemberMetricRemoveManualCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberMetricRemoveManualCompleted(this, new MemberMetricRemoveManualCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberMetricRemoveManualAsync(string token, long memberMetricId) {
            this.MemberMetricRemoveManualAsync(token, memberMetricId, null);
        }
        
        public void MemberMetricRemoveManualAsync(string token, long memberMetricId, object userState) {
            if ((this.onBeginMemberMetricRemoveManualDelegate == null)) {
                this.onBeginMemberMetricRemoveManualDelegate = new BeginOperationDelegate(this.OnBeginMemberMetricRemoveManual);
            }
            if ((this.onEndMemberMetricRemoveManualDelegate == null)) {
                this.onEndMemberMetricRemoveManualDelegate = new EndOperationDelegate(this.OnEndMemberMetricRemoveManual);
            }
            if ((this.onMemberMetricRemoveManualCompletedDelegate == null)) {
                this.onMemberMetricRemoveManualCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberMetricRemoveManualCompleted);
            }
            base.InvokeAsync(this.onBeginMemberMetricRemoveManualDelegate, new object[] {
                        token,
                        memberMetricId}, this.onEndMemberMetricRemoveManualDelegate, this.onMemberMetricRemoveManualCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberMetricsGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberMetricsGetCount(token, memberId, showHidden, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMemberMetricsGetCount(System.IAsyncResult result) {
            return base.Channel.EndMemberMetricsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginMemberMetricsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            bool showHidden = ((bool)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberMetricsGetCount(token, memberId, showHidden, callback, asyncState);
        }
        
        private object[] OnEndMemberMetricsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberMetricsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberMetricsGetCountCompleted(object state) {
            if ((this.MemberMetricsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberMetricsGetCountCompleted(this, new MemberMetricsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberMetricsGetCountAsync(string token, long memberId, bool showHidden) {
            this.MemberMetricsGetCountAsync(token, memberId, showHidden, null);
        }
        
        public void MemberMetricsGetCountAsync(string token, long memberId, bool showHidden, object userState) {
            if ((this.onBeginMemberMetricsGetCountDelegate == null)) {
                this.onBeginMemberMetricsGetCountDelegate = new BeginOperationDelegate(this.OnBeginMemberMetricsGetCount);
            }
            if ((this.onEndMemberMetricsGetCountDelegate == null)) {
                this.onEndMemberMetricsGetCountDelegate = new EndOperationDelegate(this.OnEndMemberMetricsGetCount);
            }
            if ((this.onMemberMetricsGetCountCompletedDelegate == null)) {
                this.onMemberMetricsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberMetricsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginMemberMetricsGetCountDelegate, new object[] {
                        token,
                        memberId,
                        showHidden}, this.onEndMemberMetricsGetCountDelegate, this.onMemberMetricsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberMetricsGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberMetricsGetByPage(token, memberId, initialRow, count, showHidden, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberMetricCollectionResponse Mercury.Server.Application.IApplication.EndMemberMetricsGetByPage(System.IAsyncResult result) {
            return base.Channel.EndMemberMetricsGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginMemberMetricsGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            bool showHidden = ((bool)(inValues[4]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberMetricsGetByPage(token, memberId, initialRow, count, showHidden, callback, asyncState);
        }
        
        private object[] OnEndMemberMetricsGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.MemberMetricCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberMetricsGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberMetricsGetByPageCompleted(object state) {
            if ((this.MemberMetricsGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberMetricsGetByPageCompleted(this, new MemberMetricsGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberMetricsGetByPageAsync(string token, long memberId, int initialRow, int count, bool showHidden) {
            this.MemberMetricsGetByPageAsync(token, memberId, initialRow, count, showHidden, null);
        }
        
        public void MemberMetricsGetByPageAsync(string token, long memberId, int initialRow, int count, bool showHidden, object userState) {
            if ((this.onBeginMemberMetricsGetByPageDelegate == null)) {
                this.onBeginMemberMetricsGetByPageDelegate = new BeginOperationDelegate(this.OnBeginMemberMetricsGetByPage);
            }
            if ((this.onEndMemberMetricsGetByPageDelegate == null)) {
                this.onEndMemberMetricsGetByPageDelegate = new EndOperationDelegate(this.OnEndMemberMetricsGetByPage);
            }
            if ((this.onMemberMetricsGetByPageCompletedDelegate == null)) {
                this.onMemberMetricsGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberMetricsGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginMemberMetricsGetByPageDelegate, new object[] {
                        token,
                        memberId,
                        initialRow,
                        count,
                        showHidden}, this.onEndMemberMetricsGetByPageDelegate, this.onMemberMetricsGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationTypesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationTypeCollectionResponse Mercury.Server.Application.IApplication.EndPopulationTypesAvailable(System.IAsyncResult result) {
            return base.Channel.EndPopulationTypesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginPopulationTypesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationTypesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndPopulationTypesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationTypeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationTypesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationTypesAvailableCompleted(object state) {
            if ((this.PopulationTypesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationTypesAvailableCompleted(this, new PopulationTypesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationTypesAvailableAsync(string token) {
            this.PopulationTypesAvailableAsync(token, null);
        }
        
        public void PopulationTypesAvailableAsync(string token, object userState) {
            if ((this.onBeginPopulationTypesAvailableDelegate == null)) {
                this.onBeginPopulationTypesAvailableDelegate = new BeginOperationDelegate(this.OnBeginPopulationTypesAvailable);
            }
            if ((this.onEndPopulationTypesAvailableDelegate == null)) {
                this.onEndPopulationTypesAvailableDelegate = new EndOperationDelegate(this.OnEndPopulationTypesAvailable);
            }
            if ((this.onPopulationTypesAvailableCompletedDelegate == null)) {
                this.onPopulationTypesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationTypesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationTypesAvailableDelegate, new object[] {
                        token}, this.onEndPopulationTypesAvailableDelegate, this.onPopulationTypesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationTypeGet(string token, long populationTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationTypeGet(token, populationTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationType Mercury.Server.Application.IApplication.EndPopulationTypeGet(System.IAsyncResult result) {
            return base.Channel.EndPopulationTypeGet(result);
        }
        
        private System.IAsyncResult OnBeginPopulationTypeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long populationTypeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationTypeGet(token, populationTypeId, callback, asyncState);
        }
        
        private object[] OnEndPopulationTypeGet(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationType retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationTypeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationTypeGetCompleted(object state) {
            if ((this.PopulationTypeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationTypeGetCompleted(this, new PopulationTypeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationTypeGetAsync(string token, long populationTypeId) {
            this.PopulationTypeGetAsync(token, populationTypeId, null);
        }
        
        public void PopulationTypeGetAsync(string token, long populationTypeId, object userState) {
            if ((this.onBeginPopulationTypeGetDelegate == null)) {
                this.onBeginPopulationTypeGetDelegate = new BeginOperationDelegate(this.OnBeginPopulationTypeGet);
            }
            if ((this.onEndPopulationTypeGetDelegate == null)) {
                this.onEndPopulationTypeGetDelegate = new EndOperationDelegate(this.OnEndPopulationTypeGet);
            }
            if ((this.onPopulationTypeGetCompletedDelegate == null)) {
                this.onPopulationTypeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationTypeGetCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationTypeGetDelegate, new object[] {
                        token,
                        populationTypeId}, this.onEndPopulationTypeGetDelegate, this.onPopulationTypeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationTypeSave(string token, Mercury.Server.Application.PopulationType populationType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationTypeSave(token, populationType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndPopulationTypeSave(System.IAsyncResult result) {
            return base.Channel.EndPopulationTypeSave(result);
        }
        
        private System.IAsyncResult OnBeginPopulationTypeSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.PopulationType populationType = ((Mercury.Server.Application.PopulationType)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationTypeSave(token, populationType, callback, asyncState);
        }
        
        private object[] OnEndPopulationTypeSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationTypeSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationTypeSaveCompleted(object state) {
            if ((this.PopulationTypeSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationTypeSaveCompleted(this, new PopulationTypeSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationTypeSaveAsync(string token, Mercury.Server.Application.PopulationType populationType) {
            this.PopulationTypeSaveAsync(token, populationType, null);
        }
        
        public void PopulationTypeSaveAsync(string token, Mercury.Server.Application.PopulationType populationType, object userState) {
            if ((this.onBeginPopulationTypeSaveDelegate == null)) {
                this.onBeginPopulationTypeSaveDelegate = new BeginOperationDelegate(this.OnBeginPopulationTypeSave);
            }
            if ((this.onEndPopulationTypeSaveDelegate == null)) {
                this.onEndPopulationTypeSaveDelegate = new EndOperationDelegate(this.OnEndPopulationTypeSave);
            }
            if ((this.onPopulationTypeSaveCompletedDelegate == null)) {
                this.onPopulationTypeSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationTypeSaveCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationTypeSaveDelegate, new object[] {
                        token,
                        populationType}, this.onEndPopulationTypeSaveDelegate, this.onPopulationTypeSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginPopulationsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPopulationsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PopulationHeadersCollectionResponse Mercury.Server.Application.IApplication.EndPopulationsAvailable(System.IAsyncResult result) {
            return base.Channel.EndPopulationsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginPopulationsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginPopulationsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndPopulationsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.PopulationHeadersCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndPopulationsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPopulationsAvailableCompleted(object state) {
            if ((this.PopulationsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PopulationsAvailableCompleted(this, new PopulationsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PopulationsAvailableAsync(string token) {
            this.PopulationsAvailableAsync(token, null);
        }
        
        public void PopulationsAvailableAsync(string token, object userState) {
            if ((this.onBeginPopulationsAvailableDelegate == null)) {
                this.onBeginPopulationsAvailableDelegate = new BeginOperationDelegate(this.OnBeginPopulationsAvailable);
            }
            if ((this.onEndPopulationsAvailableDelegate == null)) {
                this.onEndPopulationsAvailableDelegate = new EndOperationDelegate(this.OnEndPopulationsAvailable);
            }
            if ((this.onPopulationsAvailableCompletedDelegate == null)) {
                this.onPopulationsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPopulationsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginPopulationsAvailableDelegate, new object[] {
                        token}, this.onEndPopulationsAvailableDelegate, this.onPopulationsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginInsurerDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsurerDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndInsurerDictionary(System.IAsyncResult result) {
            return base.Channel.EndInsurerDictionary(result);
        }
        
        private System.IAsyncResult OnBeginInsurerDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginInsurerDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndInsurerDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndInsurerDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsurerDictionaryCompleted(object state) {
            if ((this.InsurerDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsurerDictionaryCompleted(this, new InsurerDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsurerDictionaryAsync(string token) {
            this.InsurerDictionaryAsync(token, null);
        }
        
        public void InsurerDictionaryAsync(string token, object userState) {
            if ((this.onBeginInsurerDictionaryDelegate == null)) {
                this.onBeginInsurerDictionaryDelegate = new BeginOperationDelegate(this.OnBeginInsurerDictionary);
            }
            if ((this.onEndInsurerDictionaryDelegate == null)) {
                this.onEndInsurerDictionaryDelegate = new EndOperationDelegate(this.OnEndInsurerDictionary);
            }
            if ((this.onInsurerDictionaryCompletedDelegate == null)) {
                this.onInsurerDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsurerDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginInsurerDictionaryDelegate, new object[] {
                        token}, this.onEndInsurerDictionaryDelegate, this.onInsurerDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginInsurerGet(string token, long insurerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsurerGet(token, insurerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Insurer Mercury.Server.Application.IApplication.EndInsurerGet(System.IAsyncResult result) {
            return base.Channel.EndInsurerGet(result);
        }
        
        private System.IAsyncResult OnBeginInsurerGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long insurerId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginInsurerGet(token, insurerId, callback, asyncState);
        }
        
        private object[] OnEndInsurerGet(System.IAsyncResult result) {
            Mercury.Server.Application.Insurer retVal = ((Mercury.Server.Application.IApplication)(this)).EndInsurerGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsurerGetCompleted(object state) {
            if ((this.InsurerGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsurerGetCompleted(this, new InsurerGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsurerGetAsync(string token, long insurerId) {
            this.InsurerGetAsync(token, insurerId, null);
        }
        
        public void InsurerGetAsync(string token, long insurerId, object userState) {
            if ((this.onBeginInsurerGetDelegate == null)) {
                this.onBeginInsurerGetDelegate = new BeginOperationDelegate(this.OnBeginInsurerGet);
            }
            if ((this.onEndInsurerGetDelegate == null)) {
                this.onEndInsurerGetDelegate = new EndOperationDelegate(this.OnEndInsurerGet);
            }
            if ((this.onInsurerGetCompletedDelegate == null)) {
                this.onInsurerGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsurerGetCompleted);
            }
            base.InvokeAsync(this.onBeginInsurerGetDelegate, new object[] {
                        token,
                        insurerId}, this.onEndInsurerGetDelegate, this.onInsurerGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProgramsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProgramsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProgramCollectionResponse Mercury.Server.Application.IApplication.EndProgramsAvailable(System.IAsyncResult result) {
            return base.Channel.EndProgramsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginProgramsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProgramsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndProgramsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.ProgramCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProgramsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProgramsAvailableCompleted(object state) {
            if ((this.ProgramsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProgramsAvailableCompleted(this, new ProgramsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProgramsAvailableAsync(string token) {
            this.ProgramsAvailableAsync(token, null);
        }
        
        public void ProgramsAvailableAsync(string token, object userState) {
            if ((this.onBeginProgramsAvailableDelegate == null)) {
                this.onBeginProgramsAvailableDelegate = new BeginOperationDelegate(this.OnBeginProgramsAvailable);
            }
            if ((this.onEndProgramsAvailableDelegate == null)) {
                this.onEndProgramsAvailableDelegate = new EndOperationDelegate(this.OnEndProgramsAvailable);
            }
            if ((this.onProgramsAvailableCompletedDelegate == null)) {
                this.onProgramsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProgramsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginProgramsAvailableDelegate, new object[] {
                        token}, this.onEndProgramsAvailableDelegate, this.onProgramsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProgramDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProgramDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndProgramDictionary(System.IAsyncResult result) {
            return base.Channel.EndProgramDictionary(result);
        }
        
        private System.IAsyncResult OnBeginProgramDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProgramDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndProgramDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProgramDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProgramDictionaryCompleted(object state) {
            if ((this.ProgramDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProgramDictionaryCompleted(this, new ProgramDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProgramDictionaryAsync(string token) {
            this.ProgramDictionaryAsync(token, null);
        }
        
        public void ProgramDictionaryAsync(string token, object userState) {
            if ((this.onBeginProgramDictionaryDelegate == null)) {
                this.onBeginProgramDictionaryDelegate = new BeginOperationDelegate(this.OnBeginProgramDictionary);
            }
            if ((this.onEndProgramDictionaryDelegate == null)) {
                this.onEndProgramDictionaryDelegate = new EndOperationDelegate(this.OnEndProgramDictionary);
            }
            if ((this.onProgramDictionaryCompletedDelegate == null)) {
                this.onProgramDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProgramDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginProgramDictionaryDelegate, new object[] {
                        token}, this.onEndProgramDictionaryDelegate, this.onProgramDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProgramGet(string token, long programId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProgramGet(token, programId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Program Mercury.Server.Application.IApplication.EndProgramGet(System.IAsyncResult result) {
            return base.Channel.EndProgramGet(result);
        }
        
        private System.IAsyncResult OnBeginProgramGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long programId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProgramGet(token, programId, callback, asyncState);
        }
        
        private object[] OnEndProgramGet(System.IAsyncResult result) {
            Mercury.Server.Application.Program retVal = ((Mercury.Server.Application.IApplication)(this)).EndProgramGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProgramGetCompleted(object state) {
            if ((this.ProgramGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProgramGetCompleted(this, new ProgramGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProgramGetAsync(string token, long programId) {
            this.ProgramGetAsync(token, programId, null);
        }
        
        public void ProgramGetAsync(string token, long programId, object userState) {
            if ((this.onBeginProgramGetDelegate == null)) {
                this.onBeginProgramGetDelegate = new BeginOperationDelegate(this.OnBeginProgramGet);
            }
            if ((this.onEndProgramGetDelegate == null)) {
                this.onEndProgramGetDelegate = new EndOperationDelegate(this.OnEndProgramGet);
            }
            if ((this.onProgramGetCompletedDelegate == null)) {
                this.onProgramGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProgramGetCompleted);
            }
            base.InvokeAsync(this.onBeginProgramGetDelegate, new object[] {
                        token,
                        programId}, this.onEndProgramGetDelegate, this.onProgramGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceHeadersGet(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceHeadersGet(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse Mercury.Server.Application.IApplication.EndMedicalServiceHeadersGet(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceHeadersGet(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceHeadersGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceHeadersGet(token, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceHeadersGet(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceHeadersGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceHeadersGetCompleted(object state) {
            if ((this.MedicalServiceHeadersGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceHeadersGetCompleted(this, new MedicalServiceHeadersGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceHeadersGetAsync(string token) {
            this.MedicalServiceHeadersGetAsync(token, null);
        }
        
        public void MedicalServiceHeadersGetAsync(string token, object userState) {
            if ((this.onBeginMedicalServiceHeadersGetDelegate == null)) {
                this.onBeginMedicalServiceHeadersGetDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceHeadersGet);
            }
            if ((this.onEndMedicalServiceHeadersGetDelegate == null)) {
                this.onEndMedicalServiceHeadersGetDelegate = new EndOperationDelegate(this.OnEndMedicalServiceHeadersGet);
            }
            if ((this.onMedicalServiceHeadersGetCompletedDelegate == null)) {
                this.onMedicalServiceHeadersGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceHeadersGetCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceHeadersGetDelegate, new object[] {
                        token}, this.onEndMedicalServiceHeadersGetDelegate, this.onMedicalServiceHeadersGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceHeadersGetByType(string token, Mercury.Server.Application.MedicalServiceType serviceType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceHeadersGetByType(token, serviceType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse Mercury.Server.Application.IApplication.EndMedicalServiceHeadersGetByType(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceHeadersGetByType(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceHeadersGetByType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.MedicalServiceType serviceType = ((Mercury.Server.Application.MedicalServiceType)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceHeadersGetByType(token, serviceType, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceHeadersGetByType(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceHeadersGetByType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceHeadersGetByTypeCompleted(object state) {
            if ((this.MedicalServiceHeadersGetByTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceHeadersGetByTypeCompleted(this, new MedicalServiceHeadersGetByTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceHeadersGetByTypeAsync(string token, Mercury.Server.Application.MedicalServiceType serviceType) {
            this.MedicalServiceHeadersGetByTypeAsync(token, serviceType, null);
        }
        
        public void MedicalServiceHeadersGetByTypeAsync(string token, Mercury.Server.Application.MedicalServiceType serviceType, object userState) {
            if ((this.onBeginMedicalServiceHeadersGetByTypeDelegate == null)) {
                this.onBeginMedicalServiceHeadersGetByTypeDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceHeadersGetByType);
            }
            if ((this.onEndMedicalServiceHeadersGetByTypeDelegate == null)) {
                this.onEndMedicalServiceHeadersGetByTypeDelegate = new EndOperationDelegate(this.OnEndMedicalServiceHeadersGetByType);
            }
            if ((this.onMedicalServiceHeadersGetByTypeCompletedDelegate == null)) {
                this.onMedicalServiceHeadersGetByTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceHeadersGetByTypeCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceHeadersGetByTypeDelegate, new object[] {
                        token,
                        serviceType}, this.onEndMedicalServiceHeadersGetByTypeDelegate, this.onMedicalServiceHeadersGetByTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceGet(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceGet(token, serviceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Service Mercury.Server.Application.IApplication.EndMedicalServiceGet(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceGet(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long serviceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceGet(token, serviceId, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceGet(System.IAsyncResult result) {
            Mercury.Server.Application.Service retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceGetCompleted(object state) {
            if ((this.MedicalServiceGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceGetCompleted(this, new MedicalServiceGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceGetAsync(string token, long serviceId) {
            this.MedicalServiceGetAsync(token, serviceId, null);
        }
        
        public void MedicalServiceGetAsync(string token, long serviceId, object userState) {
            if ((this.onBeginMedicalServiceGetDelegate == null)) {
                this.onBeginMedicalServiceGetDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceGet);
            }
            if ((this.onEndMedicalServiceGetDelegate == null)) {
                this.onEndMedicalServiceGetDelegate = new EndOperationDelegate(this.OnEndMedicalServiceGet);
            }
            if ((this.onMedicalServiceGetCompletedDelegate == null)) {
                this.onMedicalServiceGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceGetCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceGetDelegate, new object[] {
                        token,
                        serviceId}, this.onEndMedicalServiceGetDelegate, this.onMedicalServiceGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceGetIdByName(string token, string serviceName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceGetIdByName(token, serviceName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMedicalServiceGetIdByName(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceGetIdByName(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceGetIdByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string serviceName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceGetIdByName(token, serviceName, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceGetIdByName(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceGetIdByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceGetIdByNameCompleted(object state) {
            if ((this.MedicalServiceGetIdByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceGetIdByNameCompleted(this, new MedicalServiceGetIdByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceGetIdByNameAsync(string token, string serviceName) {
            this.MedicalServiceGetIdByNameAsync(token, serviceName, null);
        }
        
        public void MedicalServiceGetIdByNameAsync(string token, string serviceName, object userState) {
            if ((this.onBeginMedicalServiceGetIdByNameDelegate == null)) {
                this.onBeginMedicalServiceGetIdByNameDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceGetIdByName);
            }
            if ((this.onEndMedicalServiceGetIdByNameDelegate == null)) {
                this.onEndMedicalServiceGetIdByNameDelegate = new EndOperationDelegate(this.OnEndMedicalServiceGetIdByName);
            }
            if ((this.onMedicalServiceGetIdByNameCompletedDelegate == null)) {
                this.onMedicalServiceGetIdByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceGetIdByNameCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceGetIdByNameDelegate, new object[] {
                        token,
                        serviceName}, this.onEndMedicalServiceGetIdByNameDelegate, this.onMedicalServiceGetIdByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceDelete(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceDelete(token, serviceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndMedicalServiceDelete(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceDelete(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long serviceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceDelete(token, serviceId, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceDelete(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceDeleteCompleted(object state) {
            if ((this.MedicalServiceDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceDeleteCompleted(this, new MedicalServiceDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceDeleteAsync(string token, long serviceId) {
            this.MedicalServiceDeleteAsync(token, serviceId, null);
        }
        
        public void MedicalServiceDeleteAsync(string token, long serviceId, object userState) {
            if ((this.onBeginMedicalServiceDeleteDelegate == null)) {
                this.onBeginMedicalServiceDeleteDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceDelete);
            }
            if ((this.onEndMedicalServiceDeleteDelegate == null)) {
                this.onEndMedicalServiceDeleteDelegate = new EndOperationDelegate(this.OnEndMedicalServiceDelete);
            }
            if ((this.onMedicalServiceDeleteCompletedDelegate == null)) {
                this.onMedicalServiceDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceDeleteDelegate, new object[] {
                        token,
                        serviceId}, this.onEndMedicalServiceDeleteDelegate, this.onMedicalServiceDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSingletonGet(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSingletonGet(token, serviceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ServiceSingleton Mercury.Server.Application.IApplication.EndMedicalServiceSingletonGet(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSingletonGet(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSingletonGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long serviceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSingletonGet(token, serviceId, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSingletonGet(System.IAsyncResult result) {
            Mercury.Server.Application.ServiceSingleton retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSingletonGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSingletonGetCompleted(object state) {
            if ((this.MedicalServiceSingletonGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSingletonGetCompleted(this, new MedicalServiceSingletonGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSingletonGetAsync(string token, long serviceId) {
            this.MedicalServiceSingletonGetAsync(token, serviceId, null);
        }
        
        public void MedicalServiceSingletonGetAsync(string token, long serviceId, object userState) {
            if ((this.onBeginMedicalServiceSingletonGetDelegate == null)) {
                this.onBeginMedicalServiceSingletonGetDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSingletonGet);
            }
            if ((this.onEndMedicalServiceSingletonGetDelegate == null)) {
                this.onEndMedicalServiceSingletonGetDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSingletonGet);
            }
            if ((this.onMedicalServiceSingletonGetCompletedDelegate == null)) {
                this.onMedicalServiceSingletonGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSingletonGetCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSingletonGetDelegate, new object[] {
                        token,
                        serviceId}, this.onEndMedicalServiceSingletonGetDelegate, this.onMedicalServiceSingletonGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSingletonSave(string token, Mercury.Server.Application.ServiceSingleton singleton, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSingletonSave(token, singleton, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndMedicalServiceSingletonSave(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSingletonSave(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSingletonSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ServiceSingleton singleton = ((Mercury.Server.Application.ServiceSingleton)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSingletonSave(token, singleton, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSingletonSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSingletonSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSingletonSaveCompleted(object state) {
            if ((this.MedicalServiceSingletonSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSingletonSaveCompleted(this, new MedicalServiceSingletonSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSingletonSaveAsync(string token, Mercury.Server.Application.ServiceSingleton singleton) {
            this.MedicalServiceSingletonSaveAsync(token, singleton, null);
        }
        
        public void MedicalServiceSingletonSaveAsync(string token, Mercury.Server.Application.ServiceSingleton singleton, object userState) {
            if ((this.onBeginMedicalServiceSingletonSaveDelegate == null)) {
                this.onBeginMedicalServiceSingletonSaveDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSingletonSave);
            }
            if ((this.onEndMedicalServiceSingletonSaveDelegate == null)) {
                this.onEndMedicalServiceSingletonSaveDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSingletonSave);
            }
            if ((this.onMedicalServiceSingletonSaveCompletedDelegate == null)) {
                this.onMedicalServiceSingletonSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSingletonSaveCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSingletonSaveDelegate, new object[] {
                        token,
                        singleton}, this.onEndMedicalServiceSingletonSaveDelegate, this.onMedicalServiceSingletonSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSingletonDefinitionValidate(string token, Mercury.Server.Application.ServiceSingletonDefinition singletonDefinition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSingletonDefinitionValidate(token, singletonDefinition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndMedicalServiceSingletonDefinitionValidate(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSingletonDefinitionValidate(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSingletonDefinitionValidate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ServiceSingletonDefinition singletonDefinition = ((Mercury.Server.Application.ServiceSingletonDefinition)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSingletonDefinitionValidate(token, singletonDefinition, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSingletonDefinitionValidate(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSingletonDefinitionValidate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSingletonDefinitionValidateCompleted(object state) {
            if ((this.MedicalServiceSingletonDefinitionValidateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSingletonDefinitionValidateCompleted(this, new MedicalServiceSingletonDefinitionValidateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSingletonDefinitionValidateAsync(string token, Mercury.Server.Application.ServiceSingletonDefinition singletonDefinition) {
            this.MedicalServiceSingletonDefinitionValidateAsync(token, singletonDefinition, null);
        }
        
        public void MedicalServiceSingletonDefinitionValidateAsync(string token, Mercury.Server.Application.ServiceSingletonDefinition singletonDefinition, object userState) {
            if ((this.onBeginMedicalServiceSingletonDefinitionValidateDelegate == null)) {
                this.onBeginMedicalServiceSingletonDefinitionValidateDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSingletonDefinitionValidate);
            }
            if ((this.onEndMedicalServiceSingletonDefinitionValidateDelegate == null)) {
                this.onEndMedicalServiceSingletonDefinitionValidateDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSingletonDefinitionValidate);
            }
            if ((this.onMedicalServiceSingletonDefinitionValidateCompletedDelegate == null)) {
                this.onMedicalServiceSingletonDefinitionValidateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSingletonDefinitionValidateCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSingletonDefinitionValidateDelegate, new object[] {
                        token,
                        singletonDefinition}, this.onEndMedicalServiceSingletonDefinitionValidateDelegate, this.onMedicalServiceSingletonDefinitionValidateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSingletonPreview(string token, Mercury.Server.Application.ServiceSingleton serviceSingleton, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSingletonPreview(token, serviceSingleton, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse Mercury.Server.Application.IApplication.EndMedicalServiceSingletonPreview(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSingletonPreview(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSingletonPreview(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ServiceSingleton serviceSingleton = ((Mercury.Server.Application.ServiceSingleton)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSingletonPreview(token, serviceSingleton, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSingletonPreview(System.IAsyncResult result) {
            Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSingletonPreview(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSingletonPreviewCompleted(object state) {
            if ((this.MedicalServiceSingletonPreviewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSingletonPreviewCompleted(this, new MedicalServiceSingletonPreviewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSingletonPreviewAsync(string token, Mercury.Server.Application.ServiceSingleton serviceSingleton) {
            this.MedicalServiceSingletonPreviewAsync(token, serviceSingleton, null);
        }
        
        public void MedicalServiceSingletonPreviewAsync(string token, Mercury.Server.Application.ServiceSingleton serviceSingleton, object userState) {
            if ((this.onBeginMedicalServiceSingletonPreviewDelegate == null)) {
                this.onBeginMedicalServiceSingletonPreviewDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSingletonPreview);
            }
            if ((this.onEndMedicalServiceSingletonPreviewDelegate == null)) {
                this.onEndMedicalServiceSingletonPreviewDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSingletonPreview);
            }
            if ((this.onMedicalServiceSingletonPreviewCompletedDelegate == null)) {
                this.onMedicalServiceSingletonPreviewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSingletonPreviewCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSingletonPreviewDelegate, new object[] {
                        token,
                        serviceSingleton}, this.onEndMedicalServiceSingletonPreviewDelegate, this.onMedicalServiceSingletonPreviewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSetPreview(string token, Mercury.Server.Application.ServiceSet serviceSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSetPreview(token, serviceSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse Mercury.Server.Application.IApplication.EndMedicalServiceSetPreview(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSetPreview(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSetPreview(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ServiceSet serviceSet = ((Mercury.Server.Application.ServiceSet)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSetPreview(token, serviceSet, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSetPreview(System.IAsyncResult result) {
            Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSetPreview(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSetPreviewCompleted(object state) {
            if ((this.MedicalServiceSetPreviewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSetPreviewCompleted(this, new MedicalServiceSetPreviewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSetPreviewAsync(string token, Mercury.Server.Application.ServiceSet serviceSet) {
            this.MedicalServiceSetPreviewAsync(token, serviceSet, null);
        }
        
        public void MedicalServiceSetPreviewAsync(string token, Mercury.Server.Application.ServiceSet serviceSet, object userState) {
            if ((this.onBeginMedicalServiceSetPreviewDelegate == null)) {
                this.onBeginMedicalServiceSetPreviewDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSetPreview);
            }
            if ((this.onEndMedicalServiceSetPreviewDelegate == null)) {
                this.onEndMedicalServiceSetPreviewDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSetPreview);
            }
            if ((this.onMedicalServiceSetPreviewCompletedDelegate == null)) {
                this.onMedicalServiceSetPreviewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSetPreviewCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSetPreviewDelegate, new object[] {
                        token,
                        serviceSet}, this.onEndMedicalServiceSetPreviewDelegate, this.onMedicalServiceSetPreviewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSetGet(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSetGet(token, serviceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ServiceSet Mercury.Server.Application.IApplication.EndMedicalServiceSetGet(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSetGet(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSetGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long serviceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSetGet(token, serviceId, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSetGet(System.IAsyncResult result) {
            Mercury.Server.Application.ServiceSet retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSetGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSetGetCompleted(object state) {
            if ((this.MedicalServiceSetGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSetGetCompleted(this, new MedicalServiceSetGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSetGetAsync(string token, long serviceId) {
            this.MedicalServiceSetGetAsync(token, serviceId, null);
        }
        
        public void MedicalServiceSetGetAsync(string token, long serviceId, object userState) {
            if ((this.onBeginMedicalServiceSetGetDelegate == null)) {
                this.onBeginMedicalServiceSetGetDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSetGet);
            }
            if ((this.onEndMedicalServiceSetGetDelegate == null)) {
                this.onEndMedicalServiceSetGetDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSetGet);
            }
            if ((this.onMedicalServiceSetGetCompletedDelegate == null)) {
                this.onMedicalServiceSetGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSetGetCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSetGetDelegate, new object[] {
                        token,
                        serviceId}, this.onEndMedicalServiceSetGetDelegate, this.onMedicalServiceSetGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSetDefinitionValidate(string token, Mercury.Server.Application.ServiceSetDefinition setDefinition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSetDefinitionValidate(token, setDefinition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndMedicalServiceSetDefinitionValidate(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSetDefinitionValidate(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSetDefinitionValidate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ServiceSetDefinition setDefinition = ((Mercury.Server.Application.ServiceSetDefinition)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSetDefinitionValidate(token, setDefinition, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSetDefinitionValidate(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSetDefinitionValidate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSetDefinitionValidateCompleted(object state) {
            if ((this.MedicalServiceSetDefinitionValidateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSetDefinitionValidateCompleted(this, new MedicalServiceSetDefinitionValidateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSetDefinitionValidateAsync(string token, Mercury.Server.Application.ServiceSetDefinition setDefinition) {
            this.MedicalServiceSetDefinitionValidateAsync(token, setDefinition, null);
        }
        
        public void MedicalServiceSetDefinitionValidateAsync(string token, Mercury.Server.Application.ServiceSetDefinition setDefinition, object userState) {
            if ((this.onBeginMedicalServiceSetDefinitionValidateDelegate == null)) {
                this.onBeginMedicalServiceSetDefinitionValidateDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSetDefinitionValidate);
            }
            if ((this.onEndMedicalServiceSetDefinitionValidateDelegate == null)) {
                this.onEndMedicalServiceSetDefinitionValidateDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSetDefinitionValidate);
            }
            if ((this.onMedicalServiceSetDefinitionValidateCompletedDelegate == null)) {
                this.onMedicalServiceSetDefinitionValidateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSetDefinitionValidateCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSetDefinitionValidateDelegate, new object[] {
                        token,
                        setDefinition}, this.onEndMedicalServiceSetDefinitionValidateDelegate, this.onMedicalServiceSetDefinitionValidateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMedicalServiceSetSave(string token, Mercury.Server.Application.ServiceSet serviceSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMedicalServiceSetSave(token, serviceSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndMedicalServiceSetSave(System.IAsyncResult result) {
            return base.Channel.EndMedicalServiceSetSave(result);
        }
        
        private System.IAsyncResult OnBeginMedicalServiceSetSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ServiceSet serviceSet = ((Mercury.Server.Application.ServiceSet)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMedicalServiceSetSave(token, serviceSet, callback, asyncState);
        }
        
        private object[] OnEndMedicalServiceSetSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMedicalServiceSetSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMedicalServiceSetSaveCompleted(object state) {
            if ((this.MedicalServiceSetSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MedicalServiceSetSaveCompleted(this, new MedicalServiceSetSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MedicalServiceSetSaveAsync(string token, Mercury.Server.Application.ServiceSet serviceSet) {
            this.MedicalServiceSetSaveAsync(token, serviceSet, null);
        }
        
        public void MedicalServiceSetSaveAsync(string token, Mercury.Server.Application.ServiceSet serviceSet, object userState) {
            if ((this.onBeginMedicalServiceSetSaveDelegate == null)) {
                this.onBeginMedicalServiceSetSaveDelegate = new BeginOperationDelegate(this.OnBeginMedicalServiceSetSave);
            }
            if ((this.onEndMedicalServiceSetSaveDelegate == null)) {
                this.onEndMedicalServiceSetSaveDelegate = new EndOperationDelegate(this.OnEndMedicalServiceSetSave);
            }
            if ((this.onMedicalServiceSetSaveCompletedDelegate == null)) {
                this.onMedicalServiceSetSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMedicalServiceSetSaveCompleted);
            }
            base.InvokeAsync(this.onBeginMedicalServiceSetSaveDelegate, new object[] {
                        token,
                        serviceSet}, this.onEndMedicalServiceSetSaveDelegate, this.onMedicalServiceSetSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServiceGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServiceGet(token, memberServiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberService Mercury.Server.Application.IApplication.EndMemberServiceGet(System.IAsyncResult result) {
            return base.Channel.EndMemberServiceGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberServiceGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberServiceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServiceGet(token, memberServiceId, callback, asyncState);
        }
        
        private object[] OnEndMemberServiceGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberService retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServiceGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServiceGetCompleted(object state) {
            if ((this.MemberServiceGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServiceGetCompleted(this, new MemberServiceGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServiceGetAsync(string token, long memberServiceId) {
            this.MemberServiceGetAsync(token, memberServiceId, null);
        }
        
        public void MemberServiceGetAsync(string token, long memberServiceId, object userState) {
            if ((this.onBeginMemberServiceGetDelegate == null)) {
                this.onBeginMemberServiceGetDelegate = new BeginOperationDelegate(this.OnBeginMemberServiceGet);
            }
            if ((this.onEndMemberServiceGetDelegate == null)) {
                this.onEndMemberServiceGetDelegate = new EndOperationDelegate(this.OnEndMemberServiceGet);
            }
            if ((this.onMemberServiceGetCompletedDelegate == null)) {
                this.onMemberServiceGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServiceGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServiceGetDelegate, new object[] {
                        token,
                        memberServiceId}, this.onEndMemberServiceGetDelegate, this.onMemberServiceGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServiceAddManual(string token, long memberId, long serviceId, System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServiceAddManual(token, memberId, serviceId, eventDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndMemberServiceAddManual(System.IAsyncResult result) {
            return base.Channel.EndMemberServiceAddManual(result);
        }
        
        private System.IAsyncResult OnBeginMemberServiceAddManual(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            long serviceId = ((long)(inValues[2]));
            System.DateTime eventDate = ((System.DateTime)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServiceAddManual(token, memberId, serviceId, eventDate, callback, asyncState);
        }
        
        private object[] OnEndMemberServiceAddManual(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServiceAddManual(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServiceAddManualCompleted(object state) {
            if ((this.MemberServiceAddManualCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServiceAddManualCompleted(this, new MemberServiceAddManualCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServiceAddManualAsync(string token, long memberId, long serviceId, System.DateTime eventDate) {
            this.MemberServiceAddManualAsync(token, memberId, serviceId, eventDate, null);
        }
        
        public void MemberServiceAddManualAsync(string token, long memberId, long serviceId, System.DateTime eventDate, object userState) {
            if ((this.onBeginMemberServiceAddManualDelegate == null)) {
                this.onBeginMemberServiceAddManualDelegate = new BeginOperationDelegate(this.OnBeginMemberServiceAddManual);
            }
            if ((this.onEndMemberServiceAddManualDelegate == null)) {
                this.onEndMemberServiceAddManualDelegate = new EndOperationDelegate(this.OnEndMemberServiceAddManual);
            }
            if ((this.onMemberServiceAddManualCompletedDelegate == null)) {
                this.onMemberServiceAddManualCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServiceAddManualCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServiceAddManualDelegate, new object[] {
                        token,
                        memberId,
                        serviceId,
                        eventDate}, this.onEndMemberServiceAddManualDelegate, this.onMemberServiceAddManualCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServiceRemoveManual(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServiceRemoveManual(token, memberServiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndMemberServiceRemoveManual(System.IAsyncResult result) {
            return base.Channel.EndMemberServiceRemoveManual(result);
        }
        
        private System.IAsyncResult OnBeginMemberServiceRemoveManual(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberServiceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServiceRemoveManual(token, memberServiceId, callback, asyncState);
        }
        
        private object[] OnEndMemberServiceRemoveManual(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServiceRemoveManual(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServiceRemoveManualCompleted(object state) {
            if ((this.MemberServiceRemoveManualCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServiceRemoveManualCompleted(this, new MemberServiceRemoveManualCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServiceRemoveManualAsync(string token, long memberServiceId) {
            this.MemberServiceRemoveManualAsync(token, memberServiceId, null);
        }
        
        public void MemberServiceRemoveManualAsync(string token, long memberServiceId, object userState) {
            if ((this.onBeginMemberServiceRemoveManualDelegate == null)) {
                this.onBeginMemberServiceRemoveManualDelegate = new BeginOperationDelegate(this.OnBeginMemberServiceRemoveManual);
            }
            if ((this.onEndMemberServiceRemoveManualDelegate == null)) {
                this.onEndMemberServiceRemoveManualDelegate = new EndOperationDelegate(this.OnEndMemberServiceRemoveManual);
            }
            if ((this.onMemberServiceRemoveManualCompletedDelegate == null)) {
                this.onMemberServiceRemoveManualCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServiceRemoveManualCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServiceRemoveManualDelegate, new object[] {
                        token,
                        memberServiceId}, this.onEndMemberServiceRemoveManualDelegate, this.onMemberServiceRemoveManualCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServicesGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServicesGetCount(token, memberId, showHidden, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMemberServicesGetCount(System.IAsyncResult result) {
            return base.Channel.EndMemberServicesGetCount(result);
        }
        
        private System.IAsyncResult OnBeginMemberServicesGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            bool showHidden = ((bool)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServicesGetCount(token, memberId, showHidden, callback, asyncState);
        }
        
        private object[] OnEndMemberServicesGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServicesGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServicesGetCountCompleted(object state) {
            if ((this.MemberServicesGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServicesGetCountCompleted(this, new MemberServicesGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServicesGetCountAsync(string token, long memberId, bool showHidden) {
            this.MemberServicesGetCountAsync(token, memberId, showHidden, null);
        }
        
        public void MemberServicesGetCountAsync(string token, long memberId, bool showHidden, object userState) {
            if ((this.onBeginMemberServicesGetCountDelegate == null)) {
                this.onBeginMemberServicesGetCountDelegate = new BeginOperationDelegate(this.OnBeginMemberServicesGetCount);
            }
            if ((this.onEndMemberServicesGetCountDelegate == null)) {
                this.onEndMemberServicesGetCountDelegate = new EndOperationDelegate(this.OnEndMemberServicesGetCount);
            }
            if ((this.onMemberServicesGetCountCompletedDelegate == null)) {
                this.onMemberServicesGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServicesGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServicesGetCountDelegate, new object[] {
                        token,
                        memberId,
                        showHidden}, this.onEndMemberServicesGetCountDelegate, this.onMemberServicesGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServicesGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServicesGetByPage(token, memberId, initialRow, count, showHidden, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberServiceCollectionResponse Mercury.Server.Application.IApplication.EndMemberServicesGetByPage(System.IAsyncResult result) {
            return base.Channel.EndMemberServicesGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginMemberServicesGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            bool showHidden = ((bool)(inValues[4]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServicesGetByPage(token, memberId, initialRow, count, showHidden, callback, asyncState);
        }
        
        private object[] OnEndMemberServicesGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.MemberServiceCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServicesGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServicesGetByPageCompleted(object state) {
            if ((this.MemberServicesGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServicesGetByPageCompleted(this, new MemberServicesGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServicesGetByPageAsync(string token, long memberId, int initialRow, int count, bool showHidden) {
            this.MemberServicesGetByPageAsync(token, memberId, initialRow, count, showHidden, null);
        }
        
        public void MemberServicesGetByPageAsync(string token, long memberId, int initialRow, int count, bool showHidden, object userState) {
            if ((this.onBeginMemberServicesGetByPageDelegate == null)) {
                this.onBeginMemberServicesGetByPageDelegate = new BeginOperationDelegate(this.OnBeginMemberServicesGetByPage);
            }
            if ((this.onEndMemberServicesGetByPageDelegate == null)) {
                this.onEndMemberServicesGetByPageDelegate = new EndOperationDelegate(this.OnEndMemberServicesGetByPage);
            }
            if ((this.onMemberServicesGetByPageCompletedDelegate == null)) {
                this.onMemberServicesGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServicesGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServicesGetByPageDelegate, new object[] {
                        token,
                        memberId,
                        initialRow,
                        count,
                        showHidden}, this.onEndMemberServicesGetByPageDelegate, this.onMemberServicesGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServiceDetailSingletonGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServiceDetailSingletonGet(token, memberServiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse Mercury.Server.Application.IApplication.EndMemberServiceDetailSingletonGet(System.IAsyncResult result) {
            return base.Channel.EndMemberServiceDetailSingletonGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberServiceDetailSingletonGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberServiceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServiceDetailSingletonGet(token, memberServiceId, callback, asyncState);
        }
        
        private object[] OnEndMemberServiceDetailSingletonGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServiceDetailSingletonGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServiceDetailSingletonGetCompleted(object state) {
            if ((this.MemberServiceDetailSingletonGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServiceDetailSingletonGetCompleted(this, new MemberServiceDetailSingletonGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServiceDetailSingletonGetAsync(string token, long memberServiceId) {
            this.MemberServiceDetailSingletonGetAsync(token, memberServiceId, null);
        }
        
        public void MemberServiceDetailSingletonGetAsync(string token, long memberServiceId, object userState) {
            if ((this.onBeginMemberServiceDetailSingletonGetDelegate == null)) {
                this.onBeginMemberServiceDetailSingletonGetDelegate = new BeginOperationDelegate(this.OnBeginMemberServiceDetailSingletonGet);
            }
            if ((this.onEndMemberServiceDetailSingletonGetDelegate == null)) {
                this.onEndMemberServiceDetailSingletonGetDelegate = new EndOperationDelegate(this.OnEndMemberServiceDetailSingletonGet);
            }
            if ((this.onMemberServiceDetailSingletonGetCompletedDelegate == null)) {
                this.onMemberServiceDetailSingletonGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServiceDetailSingletonGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServiceDetailSingletonGetDelegate, new object[] {
                        token,
                        memberServiceId}, this.onEndMemberServiceDetailSingletonGetDelegate, this.onMemberServiceDetailSingletonGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberServiceDetailSetGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberServiceDetailSetGet(token, memberServiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberServiceDetailSetCollectionResponse Mercury.Server.Application.IApplication.EndMemberServiceDetailSetGet(System.IAsyncResult result) {
            return base.Channel.EndMemberServiceDetailSetGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberServiceDetailSetGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberServiceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberServiceDetailSetGet(token, memberServiceId, callback, asyncState);
        }
        
        private object[] OnEndMemberServiceDetailSetGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberServiceDetailSetCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberServiceDetailSetGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberServiceDetailSetGetCompleted(object state) {
            if ((this.MemberServiceDetailSetGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberServiceDetailSetGetCompleted(this, new MemberServiceDetailSetGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberServiceDetailSetGetAsync(string token, long memberServiceId) {
            this.MemberServiceDetailSetGetAsync(token, memberServiceId, null);
        }
        
        public void MemberServiceDetailSetGetAsync(string token, long memberServiceId, object userState) {
            if ((this.onBeginMemberServiceDetailSetGetDelegate == null)) {
                this.onBeginMemberServiceDetailSetGetDelegate = new BeginOperationDelegate(this.OnBeginMemberServiceDetailSetGet);
            }
            if ((this.onEndMemberServiceDetailSetGetDelegate == null)) {
                this.onEndMemberServiceDetailSetGetDelegate = new EndOperationDelegate(this.OnEndMemberServiceDetailSetGet);
            }
            if ((this.onMemberServiceDetailSetGetCompletedDelegate == null)) {
                this.onMemberServiceDetailSetGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberServiceDetailSetGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberServiceDetailSetGetDelegate, new object[] {
                        token,
                        memberServiceId}, this.onEndMemberServiceDetailSetGetDelegate, this.onMemberServiceDetailSetGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProblemStatementGet(string token, long problemStatementId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProblemStatementGet(token, problemStatementId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProblemStatement Mercury.Server.Application.IApplication.EndProblemStatementGet(System.IAsyncResult result) {
            return base.Channel.EndProblemStatementGet(result);
        }
        
        private System.IAsyncResult OnBeginProblemStatementGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long problemStatementId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProblemStatementGet(token, problemStatementId, callback, asyncState);
        }
        
        private object[] OnEndProblemStatementGet(System.IAsyncResult result) {
            Mercury.Server.Application.ProblemStatement retVal = ((Mercury.Server.Application.IApplication)(this)).EndProblemStatementGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProblemStatementGetCompleted(object state) {
            if ((this.ProblemStatementGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProblemStatementGetCompleted(this, new ProblemStatementGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProblemStatementGetAsync(string token, long problemStatementId) {
            this.ProblemStatementGetAsync(token, problemStatementId, null);
        }
        
        public void ProblemStatementGetAsync(string token, long problemStatementId, object userState) {
            if ((this.onBeginProblemStatementGetDelegate == null)) {
                this.onBeginProblemStatementGetDelegate = new BeginOperationDelegate(this.OnBeginProblemStatementGet);
            }
            if ((this.onEndProblemStatementGetDelegate == null)) {
                this.onEndProblemStatementGetDelegate = new EndOperationDelegate(this.OnEndProblemStatementGet);
            }
            if ((this.onProblemStatementGetCompletedDelegate == null)) {
                this.onProblemStatementGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProblemStatementGetCompleted);
            }
            base.InvokeAsync(this.onBeginProblemStatementGetDelegate, new object[] {
                        token,
                        problemStatementId}, this.onEndProblemStatementGetDelegate, this.onProblemStatementGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProblemStatementSave(string token, Mercury.Server.Application.ProblemStatement problemStatement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProblemStatementSave(token, problemStatement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndProblemStatementSave(System.IAsyncResult result) {
            return base.Channel.EndProblemStatementSave(result);
        }
        
        private System.IAsyncResult OnBeginProblemStatementSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ProblemStatement problemStatement = ((Mercury.Server.Application.ProblemStatement)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProblemStatementSave(token, problemStatement, callback, asyncState);
        }
        
        private object[] OnEndProblemStatementSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProblemStatementSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProblemStatementSaveCompleted(object state) {
            if ((this.ProblemStatementSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProblemStatementSaveCompleted(this, new ProblemStatementSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProblemStatementSaveAsync(string token, Mercury.Server.Application.ProblemStatement problemStatement) {
            this.ProblemStatementSaveAsync(token, problemStatement, null);
        }
        
        public void ProblemStatementSaveAsync(string token, Mercury.Server.Application.ProblemStatement problemStatement, object userState) {
            if ((this.onBeginProblemStatementSaveDelegate == null)) {
                this.onBeginProblemStatementSaveDelegate = new BeginOperationDelegate(this.OnBeginProblemStatementSave);
            }
            if ((this.onEndProblemStatementSaveDelegate == null)) {
                this.onEndProblemStatementSaveDelegate = new EndOperationDelegate(this.OnEndProblemStatementSave);
            }
            if ((this.onProblemStatementSaveCompletedDelegate == null)) {
                this.onProblemStatementSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProblemStatementSaveCompleted);
            }
            base.InvokeAsync(this.onBeginProblemStatementSaveDelegate, new object[] {
                        token,
                        problemStatement}, this.onEndProblemStatementSaveDelegate, this.onProblemStatementSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareOutcomesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareOutcomesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CareOutcomeCollectionResponse Mercury.Server.Application.IApplication.EndCareOutcomesAvailable(System.IAsyncResult result) {
            return base.Channel.EndCareOutcomesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginCareOutcomesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareOutcomesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndCareOutcomesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.CareOutcomeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareOutcomesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareOutcomesAvailableCompleted(object state) {
            if ((this.CareOutcomesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareOutcomesAvailableCompleted(this, new CareOutcomesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareOutcomesAvailableAsync(string token) {
            this.CareOutcomesAvailableAsync(token, null);
        }
        
        public void CareOutcomesAvailableAsync(string token, object userState) {
            if ((this.onBeginCareOutcomesAvailableDelegate == null)) {
                this.onBeginCareOutcomesAvailableDelegate = new BeginOperationDelegate(this.OnBeginCareOutcomesAvailable);
            }
            if ((this.onEndCareOutcomesAvailableDelegate == null)) {
                this.onEndCareOutcomesAvailableDelegate = new EndOperationDelegate(this.OnEndCareOutcomesAvailable);
            }
            if ((this.onCareOutcomesAvailableCompletedDelegate == null)) {
                this.onCareOutcomesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareOutcomesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginCareOutcomesAvailableDelegate, new object[] {
                        token}, this.onEndCareOutcomesAvailableDelegate, this.onCareOutcomesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareOutcomeDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareOutcomeDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndCareOutcomeDictionary(System.IAsyncResult result) {
            return base.Channel.EndCareOutcomeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginCareOutcomeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareOutcomeDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndCareOutcomeDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareOutcomeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareOutcomeDictionaryCompleted(object state) {
            if ((this.CareOutcomeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareOutcomeDictionaryCompleted(this, new CareOutcomeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareOutcomeDictionaryAsync(string token) {
            this.CareOutcomeDictionaryAsync(token, null);
        }
        
        public void CareOutcomeDictionaryAsync(string token, object userState) {
            if ((this.onBeginCareOutcomeDictionaryDelegate == null)) {
                this.onBeginCareOutcomeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginCareOutcomeDictionary);
            }
            if ((this.onEndCareOutcomeDictionaryDelegate == null)) {
                this.onEndCareOutcomeDictionaryDelegate = new EndOperationDelegate(this.OnEndCareOutcomeDictionary);
            }
            if ((this.onCareOutcomeDictionaryCompletedDelegate == null)) {
                this.onCareOutcomeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareOutcomeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginCareOutcomeDictionaryDelegate, new object[] {
                        token}, this.onEndCareOutcomeDictionaryDelegate, this.onCareOutcomeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareOutcomeGet(string token, long careOutcomeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareOutcomeGet(token, careOutcomeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CareOutcome Mercury.Server.Application.IApplication.EndCareOutcomeGet(System.IAsyncResult result) {
            return base.Channel.EndCareOutcomeGet(result);
        }
        
        private System.IAsyncResult OnBeginCareOutcomeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long careOutcomeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareOutcomeGet(token, careOutcomeId, callback, asyncState);
        }
        
        private object[] OnEndCareOutcomeGet(System.IAsyncResult result) {
            Mercury.Server.Application.CareOutcome retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareOutcomeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareOutcomeGetCompleted(object state) {
            if ((this.CareOutcomeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareOutcomeGetCompleted(this, new CareOutcomeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareOutcomeGetAsync(string token, long careOutcomeId) {
            this.CareOutcomeGetAsync(token, careOutcomeId, null);
        }
        
        public void CareOutcomeGetAsync(string token, long careOutcomeId, object userState) {
            if ((this.onBeginCareOutcomeGetDelegate == null)) {
                this.onBeginCareOutcomeGetDelegate = new BeginOperationDelegate(this.OnBeginCareOutcomeGet);
            }
            if ((this.onEndCareOutcomeGetDelegate == null)) {
                this.onEndCareOutcomeGetDelegate = new EndOperationDelegate(this.OnEndCareOutcomeGet);
            }
            if ((this.onCareOutcomeGetCompletedDelegate == null)) {
                this.onCareOutcomeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareOutcomeGetCompleted);
            }
            base.InvokeAsync(this.onBeginCareOutcomeGetDelegate, new object[] {
                        token,
                        careOutcomeId}, this.onEndCareOutcomeGetDelegate, this.onCareOutcomeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareOutcomeGetByName(string token, string careOutcomeName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareOutcomeGetByName(token, careOutcomeName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CareOutcome Mercury.Server.Application.IApplication.EndCareOutcomeGetByName(System.IAsyncResult result) {
            return base.Channel.EndCareOutcomeGetByName(result);
        }
        
        private System.IAsyncResult OnBeginCareOutcomeGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string careOutcomeName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareOutcomeGetByName(token, careOutcomeName, callback, asyncState);
        }
        
        private object[] OnEndCareOutcomeGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.CareOutcome retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareOutcomeGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareOutcomeGetByNameCompleted(object state) {
            if ((this.CareOutcomeGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareOutcomeGetByNameCompleted(this, new CareOutcomeGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareOutcomeGetByNameAsync(string token, string careOutcomeName) {
            this.CareOutcomeGetByNameAsync(token, careOutcomeName, null);
        }
        
        public void CareOutcomeGetByNameAsync(string token, string careOutcomeName, object userState) {
            if ((this.onBeginCareOutcomeGetByNameDelegate == null)) {
                this.onBeginCareOutcomeGetByNameDelegate = new BeginOperationDelegate(this.OnBeginCareOutcomeGetByName);
            }
            if ((this.onEndCareOutcomeGetByNameDelegate == null)) {
                this.onEndCareOutcomeGetByNameDelegate = new EndOperationDelegate(this.OnEndCareOutcomeGetByName);
            }
            if ((this.onCareOutcomeGetByNameCompletedDelegate == null)) {
                this.onCareOutcomeGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareOutcomeGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginCareOutcomeGetByNameDelegate, new object[] {
                        token,
                        careOutcomeName}, this.onEndCareOutcomeGetByNameDelegate, this.onCareOutcomeGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareOutcomeSave(string token, Mercury.Server.Application.CareOutcome careOutcome, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareOutcomeSave(token, careOutcome, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndCareOutcomeSave(System.IAsyncResult result) {
            return base.Channel.EndCareOutcomeSave(result);
        }
        
        private System.IAsyncResult OnBeginCareOutcomeSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CareOutcome careOutcome = ((Mercury.Server.Application.CareOutcome)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareOutcomeSave(token, careOutcome, callback, asyncState);
        }
        
        private object[] OnEndCareOutcomeSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareOutcomeSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareOutcomeSaveCompleted(object state) {
            if ((this.CareOutcomeSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareOutcomeSaveCompleted(this, new CareOutcomeSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareOutcomeSaveAsync(string token, Mercury.Server.Application.CareOutcome careOutcome) {
            this.CareOutcomeSaveAsync(token, careOutcome, null);
        }
        
        public void CareOutcomeSaveAsync(string token, Mercury.Server.Application.CareOutcome careOutcome, object userState) {
            if ((this.onBeginCareOutcomeSaveDelegate == null)) {
                this.onBeginCareOutcomeSaveDelegate = new BeginOperationDelegate(this.OnBeginCareOutcomeSave);
            }
            if ((this.onEndCareOutcomeSaveDelegate == null)) {
                this.onEndCareOutcomeSaveDelegate = new EndOperationDelegate(this.OnEndCareOutcomeSave);
            }
            if ((this.onCareOutcomeSaveCompletedDelegate == null)) {
                this.onCareOutcomeSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareOutcomeSaveCompleted);
            }
            base.InvokeAsync(this.onBeginCareOutcomeSaveDelegate, new object[] {
                        token,
                        careOutcome}, this.onEndCareOutcomeSaveDelegate, this.onCareOutcomeSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberCaseCreate(string token, long memberId, bool ignoreExisting, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberCaseCreate(token, memberId, ignoreExisting, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberCaseCreateResponse Mercury.Server.Application.IApplication.EndMemberCaseCreate(System.IAsyncResult result) {
            return base.Channel.EndMemberCaseCreate(result);
        }
        
        private System.IAsyncResult OnBeginMemberCaseCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            bool ignoreExisting = ((bool)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberCaseCreate(token, memberId, ignoreExisting, callback, asyncState);
        }
        
        private object[] OnEndMemberCaseCreate(System.IAsyncResult result) {
            Mercury.Server.Application.MemberCaseCreateResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberCaseCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberCaseCreateCompleted(object state) {
            if ((this.MemberCaseCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberCaseCreateCompleted(this, new MemberCaseCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberCaseCreateAsync(string token, long memberId, bool ignoreExisting) {
            this.MemberCaseCreateAsync(token, memberId, ignoreExisting, null);
        }
        
        public void MemberCaseCreateAsync(string token, long memberId, bool ignoreExisting, object userState) {
            if ((this.onBeginMemberCaseCreateDelegate == null)) {
                this.onBeginMemberCaseCreateDelegate = new BeginOperationDelegate(this.OnBeginMemberCaseCreate);
            }
            if ((this.onEndMemberCaseCreateDelegate == null)) {
                this.onEndMemberCaseCreateDelegate = new EndOperationDelegate(this.OnEndMemberCaseCreate);
            }
            if ((this.onMemberCaseCreateCompletedDelegate == null)) {
                this.onMemberCaseCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberCaseCreateCompleted);
            }
            base.InvokeAsync(this.onBeginMemberCaseCreateDelegate, new object[] {
                        token,
                        memberId,
                        ignoreExisting}, this.onEndMemberCaseCreateDelegate, this.onMemberCaseCreateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberCaseGet(string token, long memberCaseId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberCaseGet(token, memberCaseId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberCase Mercury.Server.Application.IApplication.EndMemberCaseGet(System.IAsyncResult result) {
            return base.Channel.EndMemberCaseGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberCaseGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberCaseId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberCaseGet(token, memberCaseId, callback, asyncState);
        }
        
        private object[] OnEndMemberCaseGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberCase retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberCaseGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberCaseGetCompleted(object state) {
            if ((this.MemberCaseGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberCaseGetCompleted(this, new MemberCaseGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberCaseGetAsync(string token, long memberCaseId) {
            this.MemberCaseGetAsync(token, memberCaseId, null);
        }
        
        public void MemberCaseGetAsync(string token, long memberCaseId, object userState) {
            if ((this.onBeginMemberCaseGetDelegate == null)) {
                this.onBeginMemberCaseGetDelegate = new BeginOperationDelegate(this.OnBeginMemberCaseGet);
            }
            if ((this.onEndMemberCaseGetDelegate == null)) {
                this.onEndMemberCaseGetDelegate = new EndOperationDelegate(this.OnEndMemberCaseGet);
            }
            if ((this.onMemberCaseGetCompletedDelegate == null)) {
                this.onMemberCaseGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberCaseGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberCaseGetDelegate, new object[] {
                        token,
                        memberCaseId}, this.onEndMemberCaseGetDelegate, this.onMemberCaseGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginBenefitPlansAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBenefitPlansAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BenefitPlanCollectionResponse Mercury.Server.Application.IApplication.EndBenefitPlansAvailable(System.IAsyncResult result) {
            return base.Channel.EndBenefitPlansAvailable(result);
        }
        
        private System.IAsyncResult OnBeginBenefitPlansAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginBenefitPlansAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndBenefitPlansAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.BenefitPlanCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndBenefitPlansAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBenefitPlansAvailableCompleted(object state) {
            if ((this.BenefitPlansAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BenefitPlansAvailableCompleted(this, new BenefitPlansAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BenefitPlansAvailableAsync(string token) {
            this.BenefitPlansAvailableAsync(token, null);
        }
        
        public void BenefitPlansAvailableAsync(string token, object userState) {
            if ((this.onBeginBenefitPlansAvailableDelegate == null)) {
                this.onBeginBenefitPlansAvailableDelegate = new BeginOperationDelegate(this.OnBeginBenefitPlansAvailable);
            }
            if ((this.onEndBenefitPlansAvailableDelegate == null)) {
                this.onEndBenefitPlansAvailableDelegate = new EndOperationDelegate(this.OnEndBenefitPlansAvailable);
            }
            if ((this.onBenefitPlansAvailableCompletedDelegate == null)) {
                this.onBenefitPlansAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBenefitPlansAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginBenefitPlansAvailableDelegate, new object[] {
                        token}, this.onEndBenefitPlansAvailableDelegate, this.onBenefitPlansAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginBenefitPlanDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBenefitPlanDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndBenefitPlanDictionary(System.IAsyncResult result) {
            return base.Channel.EndBenefitPlanDictionary(result);
        }
        
        private System.IAsyncResult OnBeginBenefitPlanDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginBenefitPlanDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndBenefitPlanDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndBenefitPlanDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBenefitPlanDictionaryCompleted(object state) {
            if ((this.BenefitPlanDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BenefitPlanDictionaryCompleted(this, new BenefitPlanDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BenefitPlanDictionaryAsync(string token) {
            this.BenefitPlanDictionaryAsync(token, null);
        }
        
        public void BenefitPlanDictionaryAsync(string token, object userState) {
            if ((this.onBeginBenefitPlanDictionaryDelegate == null)) {
                this.onBeginBenefitPlanDictionaryDelegate = new BeginOperationDelegate(this.OnBeginBenefitPlanDictionary);
            }
            if ((this.onEndBenefitPlanDictionaryDelegate == null)) {
                this.onEndBenefitPlanDictionaryDelegate = new EndOperationDelegate(this.OnEndBenefitPlanDictionary);
            }
            if ((this.onBenefitPlanDictionaryCompletedDelegate == null)) {
                this.onBenefitPlanDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBenefitPlanDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginBenefitPlanDictionaryDelegate, new object[] {
                        token}, this.onEndBenefitPlanDictionaryDelegate, this.onBenefitPlanDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginBenefitPlanGet(string token, long benefitPlanId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBenefitPlanGet(token, benefitPlanId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BenefitPlan Mercury.Server.Application.IApplication.EndBenefitPlanGet(System.IAsyncResult result) {
            return base.Channel.EndBenefitPlanGet(result);
        }
        
        private System.IAsyncResult OnBeginBenefitPlanGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long benefitPlanId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginBenefitPlanGet(token, benefitPlanId, callback, asyncState);
        }
        
        private object[] OnEndBenefitPlanGet(System.IAsyncResult result) {
            Mercury.Server.Application.BenefitPlan retVal = ((Mercury.Server.Application.IApplication)(this)).EndBenefitPlanGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBenefitPlanGetCompleted(object state) {
            if ((this.BenefitPlanGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BenefitPlanGetCompleted(this, new BenefitPlanGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BenefitPlanGetAsync(string token, long benefitPlanId) {
            this.BenefitPlanGetAsync(token, benefitPlanId, null);
        }
        
        public void BenefitPlanGetAsync(string token, long benefitPlanId, object userState) {
            if ((this.onBeginBenefitPlanGetDelegate == null)) {
                this.onBeginBenefitPlanGetDelegate = new BeginOperationDelegate(this.OnBeginBenefitPlanGet);
            }
            if ((this.onEndBenefitPlanGetDelegate == null)) {
                this.onEndBenefitPlanGetDelegate = new EndOperationDelegate(this.OnEndBenefitPlanGet);
            }
            if ((this.onBenefitPlanGetCompletedDelegate == null)) {
                this.onBenefitPlanGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBenefitPlanGetCompleted);
            }
            base.InvokeAsync(this.onBeginBenefitPlanGetDelegate, new object[] {
                        token,
                        benefitPlanId}, this.onEndBenefitPlanGetDelegate, this.onBenefitPlanGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContractsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ContractCollectionResponse Mercury.Server.Application.IApplication.EndContractsAvailable(System.IAsyncResult result) {
            return base.Channel.EndContractsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginContractsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContractsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndContractsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.ContractCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndContractsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractsAvailableCompleted(object state) {
            if ((this.ContractsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractsAvailableCompleted(this, new ContractsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractsAvailableAsync(string token) {
            this.ContractsAvailableAsync(token, null);
        }
        
        public void ContractsAvailableAsync(string token, object userState) {
            if ((this.onBeginContractsAvailableDelegate == null)) {
                this.onBeginContractsAvailableDelegate = new BeginOperationDelegate(this.OnBeginContractsAvailable);
            }
            if ((this.onEndContractsAvailableDelegate == null)) {
                this.onEndContractsAvailableDelegate = new EndOperationDelegate(this.OnEndContractsAvailable);
            }
            if ((this.onContractsAvailableCompletedDelegate == null)) {
                this.onContractsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginContractsAvailableDelegate, new object[] {
                        token}, this.onEndContractsAvailableDelegate, this.onContractsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContractDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndContractDictionary(System.IAsyncResult result) {
            return base.Channel.EndContractDictionary(result);
        }
        
        private System.IAsyncResult OnBeginContractDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContractDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndContractDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndContractDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractDictionaryCompleted(object state) {
            if ((this.ContractDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractDictionaryCompleted(this, new ContractDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractDictionaryAsync(string token) {
            this.ContractDictionaryAsync(token, null);
        }
        
        public void ContractDictionaryAsync(string token, object userState) {
            if ((this.onBeginContractDictionaryDelegate == null)) {
                this.onBeginContractDictionaryDelegate = new BeginOperationDelegate(this.OnBeginContractDictionary);
            }
            if ((this.onEndContractDictionaryDelegate == null)) {
                this.onEndContractDictionaryDelegate = new EndOperationDelegate(this.OnEndContractDictionary);
            }
            if ((this.onContractDictionaryCompletedDelegate == null)) {
                this.onContractDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginContractDictionaryDelegate, new object[] {
                        token}, this.onEndContractDictionaryDelegate, this.onContractDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContractGet(string token, long contractId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractGet(token, contractId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Contract Mercury.Server.Application.IApplication.EndContractGet(System.IAsyncResult result) {
            return base.Channel.EndContractGet(result);
        }
        
        private System.IAsyncResult OnBeginContractGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long contractId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContractGet(token, contractId, callback, asyncState);
        }
        
        private object[] OnEndContractGet(System.IAsyncResult result) {
            Mercury.Server.Application.Contract retVal = ((Mercury.Server.Application.IApplication)(this)).EndContractGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractGetCompleted(object state) {
            if ((this.ContractGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractGetCompleted(this, new ContractGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractGetAsync(string token, long contractId) {
            this.ContractGetAsync(token, contractId, null);
        }
        
        public void ContractGetAsync(string token, long contractId, object userState) {
            if ((this.onBeginContractGetDelegate == null)) {
                this.onBeginContractGetDelegate = new BeginOperationDelegate(this.OnBeginContractGet);
            }
            if ((this.onEndContractGetDelegate == null)) {
                this.onEndContractGetDelegate = new EndOperationDelegate(this.OnEndContractGet);
            }
            if ((this.onContractGetCompletedDelegate == null)) {
                this.onContractGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractGetCompleted);
            }
            base.InvokeAsync(this.onBeginContractGetDelegate, new object[] {
                        token,
                        contractId}, this.onEndContractGetDelegate, this.onContractGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoverageLevelsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoverageLevelsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CoverageLevelCollectionResponse Mercury.Server.Application.IApplication.EndCoverageLevelsAvailable(System.IAsyncResult result) {
            return base.Channel.EndCoverageLevelsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginCoverageLevelsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoverageLevelsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndCoverageLevelsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.CoverageLevelCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoverageLevelsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoverageLevelsAvailableCompleted(object state) {
            if ((this.CoverageLevelsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoverageLevelsAvailableCompleted(this, new CoverageLevelsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoverageLevelsAvailableAsync(string token) {
            this.CoverageLevelsAvailableAsync(token, null);
        }
        
        public void CoverageLevelsAvailableAsync(string token, object userState) {
            if ((this.onBeginCoverageLevelsAvailableDelegate == null)) {
                this.onBeginCoverageLevelsAvailableDelegate = new BeginOperationDelegate(this.OnBeginCoverageLevelsAvailable);
            }
            if ((this.onEndCoverageLevelsAvailableDelegate == null)) {
                this.onEndCoverageLevelsAvailableDelegate = new EndOperationDelegate(this.OnEndCoverageLevelsAvailable);
            }
            if ((this.onCoverageLevelsAvailableCompletedDelegate == null)) {
                this.onCoverageLevelsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoverageLevelsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginCoverageLevelsAvailableDelegate, new object[] {
                        token}, this.onEndCoverageLevelsAvailableDelegate, this.onCoverageLevelsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoverageLevelDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoverageLevelDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndCoverageLevelDictionary(System.IAsyncResult result) {
            return base.Channel.EndCoverageLevelDictionary(result);
        }
        
        private System.IAsyncResult OnBeginCoverageLevelDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoverageLevelDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndCoverageLevelDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoverageLevelDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoverageLevelDictionaryCompleted(object state) {
            if ((this.CoverageLevelDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoverageLevelDictionaryCompleted(this, new CoverageLevelDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoverageLevelDictionaryAsync(string token) {
            this.CoverageLevelDictionaryAsync(token, null);
        }
        
        public void CoverageLevelDictionaryAsync(string token, object userState) {
            if ((this.onBeginCoverageLevelDictionaryDelegate == null)) {
                this.onBeginCoverageLevelDictionaryDelegate = new BeginOperationDelegate(this.OnBeginCoverageLevelDictionary);
            }
            if ((this.onEndCoverageLevelDictionaryDelegate == null)) {
                this.onEndCoverageLevelDictionaryDelegate = new EndOperationDelegate(this.OnEndCoverageLevelDictionary);
            }
            if ((this.onCoverageLevelDictionaryCompletedDelegate == null)) {
                this.onCoverageLevelDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoverageLevelDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginCoverageLevelDictionaryDelegate, new object[] {
                        token}, this.onEndCoverageLevelDictionaryDelegate, this.onCoverageLevelDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoverageLevelGet(string token, long coverageLevelId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoverageLevelGet(token, coverageLevelId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CoverageLevel Mercury.Server.Application.IApplication.EndCoverageLevelGet(System.IAsyncResult result) {
            return base.Channel.EndCoverageLevelGet(result);
        }
        
        private System.IAsyncResult OnBeginCoverageLevelGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long coverageLevelId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoverageLevelGet(token, coverageLevelId, callback, asyncState);
        }
        
        private object[] OnEndCoverageLevelGet(System.IAsyncResult result) {
            Mercury.Server.Application.CoverageLevel retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoverageLevelGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoverageLevelGetCompleted(object state) {
            if ((this.CoverageLevelGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoverageLevelGetCompleted(this, new CoverageLevelGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoverageLevelGetAsync(string token, long coverageLevelId) {
            this.CoverageLevelGetAsync(token, coverageLevelId, null);
        }
        
        public void CoverageLevelGetAsync(string token, long coverageLevelId, object userState) {
            if ((this.onBeginCoverageLevelGetDelegate == null)) {
                this.onBeginCoverageLevelGetDelegate = new BeginOperationDelegate(this.OnBeginCoverageLevelGet);
            }
            if ((this.onEndCoverageLevelGetDelegate == null)) {
                this.onEndCoverageLevelGetDelegate = new EndOperationDelegate(this.OnEndCoverageLevelGet);
            }
            if ((this.onCoverageLevelGetCompletedDelegate == null)) {
                this.onCoverageLevelGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoverageLevelGetCompleted);
            }
            base.InvokeAsync(this.onBeginCoverageLevelGetDelegate, new object[] {
                        token,
                        coverageLevelId}, this.onEndCoverageLevelGetDelegate, this.onCoverageLevelGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoverageTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoverageTypesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CoverageTypeCollectionResponse Mercury.Server.Application.IApplication.EndCoverageTypesAvailable(System.IAsyncResult result) {
            return base.Channel.EndCoverageTypesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginCoverageTypesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoverageTypesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndCoverageTypesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.CoverageTypeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoverageTypesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoverageTypesAvailableCompleted(object state) {
            if ((this.CoverageTypesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoverageTypesAvailableCompleted(this, new CoverageTypesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoverageTypesAvailableAsync(string token) {
            this.CoverageTypesAvailableAsync(token, null);
        }
        
        public void CoverageTypesAvailableAsync(string token, object userState) {
            if ((this.onBeginCoverageTypesAvailableDelegate == null)) {
                this.onBeginCoverageTypesAvailableDelegate = new BeginOperationDelegate(this.OnBeginCoverageTypesAvailable);
            }
            if ((this.onEndCoverageTypesAvailableDelegate == null)) {
                this.onEndCoverageTypesAvailableDelegate = new EndOperationDelegate(this.OnEndCoverageTypesAvailable);
            }
            if ((this.onCoverageTypesAvailableCompletedDelegate == null)) {
                this.onCoverageTypesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoverageTypesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginCoverageTypesAvailableDelegate, new object[] {
                        token}, this.onEndCoverageTypesAvailableDelegate, this.onCoverageTypesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoverageTypeDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoverageTypeDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndCoverageTypeDictionary(System.IAsyncResult result) {
            return base.Channel.EndCoverageTypeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginCoverageTypeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoverageTypeDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndCoverageTypeDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoverageTypeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoverageTypeDictionaryCompleted(object state) {
            if ((this.CoverageTypeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoverageTypeDictionaryCompleted(this, new CoverageTypeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoverageTypeDictionaryAsync(string token) {
            this.CoverageTypeDictionaryAsync(token, null);
        }
        
        public void CoverageTypeDictionaryAsync(string token, object userState) {
            if ((this.onBeginCoverageTypeDictionaryDelegate == null)) {
                this.onBeginCoverageTypeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginCoverageTypeDictionary);
            }
            if ((this.onEndCoverageTypeDictionaryDelegate == null)) {
                this.onEndCoverageTypeDictionaryDelegate = new EndOperationDelegate(this.OnEndCoverageTypeDictionary);
            }
            if ((this.onCoverageTypeDictionaryCompletedDelegate == null)) {
                this.onCoverageTypeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoverageTypeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginCoverageTypeDictionaryDelegate, new object[] {
                        token}, this.onEndCoverageTypeDictionaryDelegate, this.onCoverageTypeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoverageTypeGet(string token, long coverageTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoverageTypeGet(token, coverageTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CoverageType Mercury.Server.Application.IApplication.EndCoverageTypeGet(System.IAsyncResult result) {
            return base.Channel.EndCoverageTypeGet(result);
        }
        
        private System.IAsyncResult OnBeginCoverageTypeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long coverageTypeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoverageTypeGet(token, coverageTypeId, callback, asyncState);
        }
        
        private object[] OnEndCoverageTypeGet(System.IAsyncResult result) {
            Mercury.Server.Application.CoverageType retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoverageTypeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoverageTypeGetCompleted(object state) {
            if ((this.CoverageTypeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoverageTypeGetCompleted(this, new CoverageTypeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoverageTypeGetAsync(string token, long coverageTypeId) {
            this.CoverageTypeGetAsync(token, coverageTypeId, null);
        }
        
        public void CoverageTypeGetAsync(string token, long coverageTypeId, object userState) {
            if ((this.onBeginCoverageTypeGetDelegate == null)) {
                this.onBeginCoverageTypeGetDelegate = new BeginOperationDelegate(this.OnBeginCoverageTypeGet);
            }
            if ((this.onEndCoverageTypeGetDelegate == null)) {
                this.onEndCoverageTypeGetDelegate = new EndOperationDelegate(this.OnEndCoverageTypeGet);
            }
            if ((this.onCoverageTypeGetCompletedDelegate == null)) {
                this.onCoverageTypeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoverageTypeGetCompleted);
            }
            base.InvokeAsync(this.onBeginCoverageTypeGetDelegate, new object[] {
                        token,
                        coverageTypeId}, this.onEndCoverageTypeGetDelegate, this.onCoverageTypeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginInsuranceTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsuranceTypesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.InsuranceTypeCollectionResponse Mercury.Server.Application.IApplication.EndInsuranceTypesAvailable(System.IAsyncResult result) {
            return base.Channel.EndInsuranceTypesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginInsuranceTypesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginInsuranceTypesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndInsuranceTypesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.InsuranceTypeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndInsuranceTypesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsuranceTypesAvailableCompleted(object state) {
            if ((this.InsuranceTypesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsuranceTypesAvailableCompleted(this, new InsuranceTypesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsuranceTypesAvailableAsync(string token) {
            this.InsuranceTypesAvailableAsync(token, null);
        }
        
        public void InsuranceTypesAvailableAsync(string token, object userState) {
            if ((this.onBeginInsuranceTypesAvailableDelegate == null)) {
                this.onBeginInsuranceTypesAvailableDelegate = new BeginOperationDelegate(this.OnBeginInsuranceTypesAvailable);
            }
            if ((this.onEndInsuranceTypesAvailableDelegate == null)) {
                this.onEndInsuranceTypesAvailableDelegate = new EndOperationDelegate(this.OnEndInsuranceTypesAvailable);
            }
            if ((this.onInsuranceTypesAvailableCompletedDelegate == null)) {
                this.onInsuranceTypesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsuranceTypesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginInsuranceTypesAvailableDelegate, new object[] {
                        token}, this.onEndInsuranceTypesAvailableDelegate, this.onInsuranceTypesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginInsuranceTypeDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsuranceTypeDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndInsuranceTypeDictionary(System.IAsyncResult result) {
            return base.Channel.EndInsuranceTypeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginInsuranceTypeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginInsuranceTypeDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndInsuranceTypeDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndInsuranceTypeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsuranceTypeDictionaryCompleted(object state) {
            if ((this.InsuranceTypeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsuranceTypeDictionaryCompleted(this, new InsuranceTypeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsuranceTypeDictionaryAsync(string token) {
            this.InsuranceTypeDictionaryAsync(token, null);
        }
        
        public void InsuranceTypeDictionaryAsync(string token, object userState) {
            if ((this.onBeginInsuranceTypeDictionaryDelegate == null)) {
                this.onBeginInsuranceTypeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginInsuranceTypeDictionary);
            }
            if ((this.onEndInsuranceTypeDictionaryDelegate == null)) {
                this.onEndInsuranceTypeDictionaryDelegate = new EndOperationDelegate(this.OnEndInsuranceTypeDictionary);
            }
            if ((this.onInsuranceTypeDictionaryCompletedDelegate == null)) {
                this.onInsuranceTypeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsuranceTypeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginInsuranceTypeDictionaryDelegate, new object[] {
                        token}, this.onEndInsuranceTypeDictionaryDelegate, this.onInsuranceTypeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginInsuranceTypeGet(string token, long insuranceTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsuranceTypeGet(token, insuranceTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.InsuranceType Mercury.Server.Application.IApplication.EndInsuranceTypeGet(System.IAsyncResult result) {
            return base.Channel.EndInsuranceTypeGet(result);
        }
        
        private System.IAsyncResult OnBeginInsuranceTypeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long insuranceTypeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginInsuranceTypeGet(token, insuranceTypeId, callback, asyncState);
        }
        
        private object[] OnEndInsuranceTypeGet(System.IAsyncResult result) {
            Mercury.Server.Application.InsuranceType retVal = ((Mercury.Server.Application.IApplication)(this)).EndInsuranceTypeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsuranceTypeGetCompleted(object state) {
            if ((this.InsuranceTypeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsuranceTypeGetCompleted(this, new InsuranceTypeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsuranceTypeGetAsync(string token, long insuranceTypeId) {
            this.InsuranceTypeGetAsync(token, insuranceTypeId, null);
        }
        
        public void InsuranceTypeGetAsync(string token, long insuranceTypeId, object userState) {
            if ((this.onBeginInsuranceTypeGetDelegate == null)) {
                this.onBeginInsuranceTypeGetDelegate = new BeginOperationDelegate(this.OnBeginInsuranceTypeGet);
            }
            if ((this.onEndInsuranceTypeGetDelegate == null)) {
                this.onEndInsuranceTypeGetDelegate = new EndOperationDelegate(this.OnEndInsuranceTypeGet);
            }
            if ((this.onInsuranceTypeGetCompletedDelegate == null)) {
                this.onInsuranceTypeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsuranceTypeGetCompleted);
            }
            base.InvokeAsync(this.onBeginInsuranceTypeGetDelegate, new object[] {
                        token,
                        insuranceTypeId}, this.onEndInsuranceTypeGetDelegate, this.onInsuranceTypeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginInsurersAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsurersAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.InsurerCollectionResponse Mercury.Server.Application.IApplication.EndInsurersAvailable(System.IAsyncResult result) {
            return base.Channel.EndInsurersAvailable(result);
        }
        
        private System.IAsyncResult OnBeginInsurersAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginInsurersAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndInsurersAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.InsurerCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndInsurersAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsurersAvailableCompleted(object state) {
            if ((this.InsurersAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsurersAvailableCompleted(this, new InsurersAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsurersAvailableAsync(string token) {
            this.InsurersAvailableAsync(token, null);
        }
        
        public void InsurersAvailableAsync(string token, object userState) {
            if ((this.onBeginInsurersAvailableDelegate == null)) {
                this.onBeginInsurersAvailableDelegate = new BeginOperationDelegate(this.OnBeginInsurersAvailable);
            }
            if ((this.onEndInsurersAvailableDelegate == null)) {
                this.onEndInsurersAvailableDelegate = new EndOperationDelegate(this.OnEndInsurersAvailable);
            }
            if ((this.onInsurersAvailableCompletedDelegate == null)) {
                this.onInsurersAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsurersAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginInsurersAvailableDelegate, new object[] {
                        token}, this.onEndInsurersAvailableDelegate, this.onInsurersAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteGetMostRecentByType(string token, long entityId, long noteTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteGetMostRecentByType(token, entityId, noteTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityNote Mercury.Server.Application.IApplication.EndEntityNoteGetMostRecentByType(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteGetMostRecentByType(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteGetMostRecentByType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            long noteTypeId = ((long)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteGetMostRecentByType(token, entityId, noteTypeId, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteGetMostRecentByType(System.IAsyncResult result) {
            Mercury.Server.Application.EntityNote retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteGetMostRecentByType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteGetMostRecentByTypeCompleted(object state) {
            if ((this.EntityNoteGetMostRecentByTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteGetMostRecentByTypeCompleted(this, new EntityNoteGetMostRecentByTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteGetMostRecentByTypeAsync(string token, long entityId, long noteTypeId) {
            this.EntityNoteGetMostRecentByTypeAsync(token, entityId, noteTypeId, null);
        }
        
        public void EntityNoteGetMostRecentByTypeAsync(string token, long entityId, long noteTypeId, object userState) {
            if ((this.onBeginEntityNoteGetMostRecentByTypeDelegate == null)) {
                this.onBeginEntityNoteGetMostRecentByTypeDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteGetMostRecentByType);
            }
            if ((this.onEndEntityNoteGetMostRecentByTypeDelegate == null)) {
                this.onEndEntityNoteGetMostRecentByTypeDelegate = new EndOperationDelegate(this.OnEndEntityNoteGetMostRecentByType);
            }
            if ((this.onEntityNoteGetMostRecentByTypeCompletedDelegate == null)) {
                this.onEntityNoteGetMostRecentByTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteGetMostRecentByTypeCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteGetMostRecentByTypeDelegate, new object[] {
                        token,
                        entityId,
                        noteTypeId}, this.onEndEntityNoteGetMostRecentByTypeDelegate, this.onEntityNoteGetMostRecentByTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SearchResultFormHeaderCollectionResponse Mercury.Server.Application.IApplication.EndFormsAvailable(System.IAsyncResult result) {
            return base.Channel.EndFormsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginFormsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndFormsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.SearchResultFormHeaderCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormsAvailableCompleted(object state) {
            if ((this.FormsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormsAvailableCompleted(this, new FormsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormsAvailableAsync(string token) {
            this.FormsAvailableAsync(token, null);
        }
        
        public void FormsAvailableAsync(string token, object userState) {
            if ((this.onBeginFormsAvailableDelegate == null)) {
                this.onBeginFormsAvailableDelegate = new BeginOperationDelegate(this.OnBeginFormsAvailable);
            }
            if ((this.onEndFormsAvailableDelegate == null)) {
                this.onEndFormsAvailableDelegate = new EndOperationDelegate(this.OnEndFormsAvailable);
            }
            if ((this.onFormsAvailableCompletedDelegate == null)) {
                this.onFormsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginFormsAvailableDelegate, new object[] {
                        token}, this.onEndFormsAvailableDelegate, this.onFormsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormGet(string token, long formId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormGet(token, formId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Form Mercury.Server.Application.IApplication.EndFormGet(System.IAsyncResult result) {
            return base.Channel.EndFormGet(result);
        }
        
        private System.IAsyncResult OnBeginFormGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long formId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormGet(token, formId, callback, asyncState);
        }
        
        private object[] OnEndFormGet(System.IAsyncResult result) {
            Mercury.Server.Application.Form retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormGetCompleted(object state) {
            if ((this.FormGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormGetCompleted(this, new FormGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormGetAsync(string token, long formId) {
            this.FormGetAsync(token, formId, null);
        }
        
        public void FormGetAsync(string token, long formId, object userState) {
            if ((this.onBeginFormGetDelegate == null)) {
                this.onBeginFormGetDelegate = new BeginOperationDelegate(this.OnBeginFormGet);
            }
            if ((this.onEndFormGetDelegate == null)) {
                this.onEndFormGetDelegate = new EndOperationDelegate(this.OnEndFormGet);
            }
            if ((this.onFormGetCompletedDelegate == null)) {
                this.onFormGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormGetCompleted);
            }
            base.InvokeAsync(this.onBeginFormGetDelegate, new object[] {
                        token,
                        formId}, this.onEndFormGetDelegate, this.onFormGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormGetByName(string token, string formName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormGetByName(token, formName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Form Mercury.Server.Application.IApplication.EndFormGetByName(System.IAsyncResult result) {
            return base.Channel.EndFormGetByName(result);
        }
        
        private System.IAsyncResult OnBeginFormGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string formName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormGetByName(token, formName, callback, asyncState);
        }
        
        private object[] OnEndFormGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.Form retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormGetByNameCompleted(object state) {
            if ((this.FormGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormGetByNameCompleted(this, new FormGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormGetByNameAsync(string token, string formName) {
            this.FormGetByNameAsync(token, formName, null);
        }
        
        public void FormGetByNameAsync(string token, string formName, object userState) {
            if ((this.onBeginFormGetByNameDelegate == null)) {
                this.onBeginFormGetByNameDelegate = new BeginOperationDelegate(this.OnBeginFormGetByName);
            }
            if ((this.onEndFormGetByNameDelegate == null)) {
                this.onEndFormGetByNameDelegate = new EndOperationDelegate(this.OnEndFormGetByName);
            }
            if ((this.onFormGetByNameCompletedDelegate == null)) {
                this.onFormGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginFormGetByNameDelegate, new object[] {
                        token,
                        formName}, this.onEndFormGetByNameDelegate, this.onFormGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormGetByEntityFormId(string token, long entityFormId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormGetByEntityFormId(token, entityFormId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Form Mercury.Server.Application.IApplication.EndFormGetByEntityFormId(System.IAsyncResult result) {
            return base.Channel.EndFormGetByEntityFormId(result);
        }
        
        private System.IAsyncResult OnBeginFormGetByEntityFormId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityFormId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormGetByEntityFormId(token, entityFormId, callback, asyncState);
        }
        
        private object[] OnEndFormGetByEntityFormId(System.IAsyncResult result) {
            Mercury.Server.Application.Form retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormGetByEntityFormId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormGetByEntityFormIdCompleted(object state) {
            if ((this.FormGetByEntityFormIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormGetByEntityFormIdCompleted(this, new FormGetByEntityFormIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormGetByEntityFormIdAsync(string token, long entityFormId) {
            this.FormGetByEntityFormIdAsync(token, entityFormId, null);
        }
        
        public void FormGetByEntityFormIdAsync(string token, long entityFormId, object userState) {
            if ((this.onBeginFormGetByEntityFormIdDelegate == null)) {
                this.onBeginFormGetByEntityFormIdDelegate = new BeginOperationDelegate(this.OnBeginFormGetByEntityFormId);
            }
            if ((this.onEndFormGetByEntityFormIdDelegate == null)) {
                this.onEndFormGetByEntityFormIdDelegate = new EndOperationDelegate(this.OnEndFormGetByEntityFormId);
            }
            if ((this.onFormGetByEntityFormIdCompletedDelegate == null)) {
                this.onFormGetByEntityFormIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormGetByEntityFormIdCompleted);
            }
            base.InvokeAsync(this.onBeginFormGetByEntityFormIdDelegate, new object[] {
                        token,
                        entityFormId}, this.onEndFormGetByEntityFormIdDelegate, this.onFormGetByEntityFormIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormCompile(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormCompile(token, form, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FormCompileMessageCollectionResponse Mercury.Server.Application.IApplication.EndFormCompile(System.IAsyncResult result) {
            return base.Channel.EndFormCompile(result);
        }
        
        private System.IAsyncResult OnBeginFormCompile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormCompile(token, form, callback, asyncState);
        }
        
        private object[] OnEndFormCompile(System.IAsyncResult result) {
            Mercury.Server.Application.FormCompileMessageCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormCompile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormCompileCompleted(object state) {
            if ((this.FormCompileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormCompileCompleted(this, new FormCompileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormCompileAsync(string token, Mercury.Server.Application.Form form) {
            this.FormCompileAsync(token, form, null);
        }
        
        public void FormCompileAsync(string token, Mercury.Server.Application.Form form, object userState) {
            if ((this.onBeginFormCompileDelegate == null)) {
                this.onBeginFormCompileDelegate = new BeginOperationDelegate(this.OnBeginFormCompile);
            }
            if ((this.onEndFormCompileDelegate == null)) {
                this.onEndFormCompileDelegate = new EndOperationDelegate(this.OnEndFormCompile);
            }
            if ((this.onFormCompileCompletedDelegate == null)) {
                this.onFormCompileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormCompileCompleted);
            }
            base.InvokeAsync(this.onBeginFormCompileDelegate, new object[] {
                        token,
                        form}, this.onEndFormCompileDelegate, this.onFormCompileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormSubmit(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormSubmit(token, form, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FormSubmitResponse Mercury.Server.Application.IApplication.EndFormSubmit(System.IAsyncResult result) {
            return base.Channel.EndFormSubmit(result);
        }
        
        private System.IAsyncResult OnBeginFormSubmit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormSubmit(token, form, callback, asyncState);
        }
        
        private object[] OnEndFormSubmit(System.IAsyncResult result) {
            Mercury.Server.Application.FormSubmitResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormSubmit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormSubmitCompleted(object state) {
            if ((this.FormSubmitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormSubmitCompleted(this, new FormSubmitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormSubmitAsync(string token, Mercury.Server.Application.Form form) {
            this.FormSubmitAsync(token, form, null);
        }
        
        public void FormSubmitAsync(string token, Mercury.Server.Application.Form form, object userState) {
            if ((this.onBeginFormSubmitDelegate == null)) {
                this.onBeginFormSubmitDelegate = new BeginOperationDelegate(this.OnBeginFormSubmit);
            }
            if ((this.onEndFormSubmitDelegate == null)) {
                this.onEndFormSubmitDelegate = new EndOperationDelegate(this.OnEndFormSubmit);
            }
            if ((this.onFormSubmitCompletedDelegate == null)) {
                this.onFormSubmitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormSubmitCompleted);
            }
            base.InvokeAsync(this.onBeginFormSubmitDelegate, new object[] {
                        token,
                        form}, this.onEndFormSubmitDelegate, this.onFormSubmitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormSave(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormSave(token, form, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndFormSave(System.IAsyncResult result) {
            return base.Channel.EndFormSave(result);
        }
        
        private System.IAsyncResult OnBeginFormSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormSave(token, form, callback, asyncState);
        }
        
        private object[] OnEndFormSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormSaveCompleted(object state) {
            if ((this.FormSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormSaveCompleted(this, new FormSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormSaveAsync(string token, Mercury.Server.Application.Form form) {
            this.FormSaveAsync(token, form, null);
        }
        
        public void FormSaveAsync(string token, Mercury.Server.Application.Form form, object userState) {
            if ((this.onBeginFormSaveDelegate == null)) {
                this.onBeginFormSaveDelegate = new BeginOperationDelegate(this.OnBeginFormSave);
            }
            if ((this.onEndFormSaveDelegate == null)) {
                this.onEndFormSaveDelegate = new EndOperationDelegate(this.OnEndFormSave);
            }
            if ((this.onFormSaveCompletedDelegate == null)) {
                this.onFormSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormSaveCompleted);
            }
            base.InvokeAsync(this.onBeginFormSaveDelegate, new object[] {
                        token,
                        form}, this.onEndFormSaveDelegate, this.onFormSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_DataBindableProperties(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_DataBindableProperties(token, form, controlId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndFormControl_DataBindableProperties(System.IAsyncResult result) {
            return base.Channel.EndFormControl_DataBindableProperties(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_DataBindableProperties(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_DataBindableProperties(token, form, controlId, callback, asyncState);
        }
        
        private object[] OnEndFormControl_DataBindableProperties(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_DataBindableProperties(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_DataBindablePropertiesCompleted(object state) {
            if ((this.FormControl_DataBindablePropertiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_DataBindablePropertiesCompleted(this, new FormControl_DataBindablePropertiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_DataBindablePropertiesAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId) {
            this.FormControl_DataBindablePropertiesAsync(token, form, controlId, null);
        }
        
        public void FormControl_DataBindablePropertiesAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, object userState) {
            if ((this.onBeginFormControl_DataBindablePropertiesDelegate == null)) {
                this.onBeginFormControl_DataBindablePropertiesDelegate = new BeginOperationDelegate(this.OnBeginFormControl_DataBindableProperties);
            }
            if ((this.onEndFormControl_DataBindablePropertiesDelegate == null)) {
                this.onEndFormControl_DataBindablePropertiesDelegate = new EndOperationDelegate(this.OnEndFormControl_DataBindableProperties);
            }
            if ((this.onFormControl_DataBindablePropertiesCompletedDelegate == null)) {
                this.onFormControl_DataBindablePropertiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_DataBindablePropertiesCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_DataBindablePropertiesDelegate, new object[] {
                        token,
                        form,
                        controlId}, this.onEndFormControl_DataBindablePropertiesDelegate, this.onFormControl_DataBindablePropertiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_DataBindingContexts(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_DataBindingContexts(token, form, controlId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndFormControl_DataBindingContexts(System.IAsyncResult result) {
            return base.Channel.EndFormControl_DataBindingContexts(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_DataBindingContexts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_DataBindingContexts(token, form, controlId, callback, asyncState);
        }
        
        private object[] OnEndFormControl_DataBindingContexts(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_DataBindingContexts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_DataBindingContextsCompleted(object state) {
            if ((this.FormControl_DataBindingContextsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_DataBindingContextsCompleted(this, new FormControl_DataBindingContextsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_DataBindingContextsAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId) {
            this.FormControl_DataBindingContextsAsync(token, form, controlId, null);
        }
        
        public void FormControl_DataBindingContextsAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, object userState) {
            if ((this.onBeginFormControl_DataBindingContextsDelegate == null)) {
                this.onBeginFormControl_DataBindingContextsDelegate = new BeginOperationDelegate(this.OnBeginFormControl_DataBindingContexts);
            }
            if ((this.onEndFormControl_DataBindingContextsDelegate == null)) {
                this.onEndFormControl_DataBindingContextsDelegate = new EndOperationDelegate(this.OnEndFormControl_DataBindingContexts);
            }
            if ((this.onFormControl_DataBindingContextsCompletedDelegate == null)) {
                this.onFormControl_DataBindingContextsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_DataBindingContextsCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_DataBindingContextsDelegate, new object[] {
                        token,
                        form,
                        controlId}, this.onEndFormControl_DataBindingContextsDelegate, this.onFormControl_DataBindingContextsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_DataBindingAllowed(string token, Mercury.Server.Application.Form form, System.Guid controlId, string bindableProperty, string forDataType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_DataBindingAllowed(token, form, controlId, bindableProperty, forDataType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndFormControl_DataBindingAllowed(System.IAsyncResult result) {
            return base.Channel.EndFormControl_DataBindingAllowed(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_DataBindingAllowed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            string bindableProperty = ((string)(inValues[3]));
            string forDataType = ((string)(inValues[4]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_DataBindingAllowed(token, form, controlId, bindableProperty, forDataType, callback, asyncState);
        }
        
        private object[] OnEndFormControl_DataBindingAllowed(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_DataBindingAllowed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_DataBindingAllowedCompleted(object state) {
            if ((this.FormControl_DataBindingAllowedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_DataBindingAllowedCompleted(this, new FormControl_DataBindingAllowedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_DataBindingAllowedAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string bindableProperty, string forDataType) {
            this.FormControl_DataBindingAllowedAsync(token, form, controlId, bindableProperty, forDataType, null);
        }
        
        public void FormControl_DataBindingAllowedAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string bindableProperty, string forDataType, object userState) {
            if ((this.onBeginFormControl_DataBindingAllowedDelegate == null)) {
                this.onBeginFormControl_DataBindingAllowedDelegate = new BeginOperationDelegate(this.OnBeginFormControl_DataBindingAllowed);
            }
            if ((this.onEndFormControl_DataBindingAllowedDelegate == null)) {
                this.onEndFormControl_DataBindingAllowedDelegate = new EndOperationDelegate(this.OnEndFormControl_DataBindingAllowed);
            }
            if ((this.onFormControl_DataBindingAllowedCompletedDelegate == null)) {
                this.onFormControl_DataBindingAllowedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_DataBindingAllowedCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_DataBindingAllowedDelegate, new object[] {
                        token,
                        form,
                        controlId,
                        bindableProperty,
                        forDataType}, this.onEndFormControl_DataBindingAllowedDelegate, this.onFormControl_DataBindingAllowedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_EvaluateDataBinding(string token, Mercury.Server.Application.Form form, System.Guid controlId, Mercury.Server.Application.FormControlDataBinding dataBinding, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_EvaluateDataBinding(token, form, controlId, dataBinding, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mercury.Server.Application.IApplication.EndFormControl_EvaluateDataBinding(System.IAsyncResult result) {
            return base.Channel.EndFormControl_EvaluateDataBinding(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_EvaluateDataBinding(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            Mercury.Server.Application.FormControlDataBinding dataBinding = ((Mercury.Server.Application.FormControlDataBinding)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_EvaluateDataBinding(token, form, controlId, dataBinding, callback, asyncState);
        }
        
        private object[] OnEndFormControl_EvaluateDataBinding(System.IAsyncResult result) {
            string retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_EvaluateDataBinding(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_EvaluateDataBindingCompleted(object state) {
            if ((this.FormControl_EvaluateDataBindingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_EvaluateDataBindingCompleted(this, new FormControl_EvaluateDataBindingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_EvaluateDataBindingAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, Mercury.Server.Application.FormControlDataBinding dataBinding) {
            this.FormControl_EvaluateDataBindingAsync(token, form, controlId, dataBinding, null);
        }
        
        public void FormControl_EvaluateDataBindingAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, Mercury.Server.Application.FormControlDataBinding dataBinding, object userState) {
            if ((this.onBeginFormControl_EvaluateDataBindingDelegate == null)) {
                this.onBeginFormControl_EvaluateDataBindingDelegate = new BeginOperationDelegate(this.OnBeginFormControl_EvaluateDataBinding);
            }
            if ((this.onEndFormControl_EvaluateDataBindingDelegate == null)) {
                this.onEndFormControl_EvaluateDataBindingDelegate = new EndOperationDelegate(this.OnEndFormControl_EvaluateDataBinding);
            }
            if ((this.onFormControl_EvaluateDataBindingCompletedDelegate == null)) {
                this.onFormControl_EvaluateDataBindingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_EvaluateDataBindingCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_EvaluateDataBindingDelegate, new object[] {
                        token,
                        form,
                        controlId,
                        dataBinding}, this.onEndFormControl_EvaluateDataBindingDelegate, this.onFormControl_EvaluateDataBindingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginForm_OnDataSourceChanged(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForm_OnDataSourceChanged(token, form, controlId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Form Mercury.Server.Application.IApplication.EndForm_OnDataSourceChanged(System.IAsyncResult result) {
            return base.Channel.EndForm_OnDataSourceChanged(result);
        }
        
        private System.IAsyncResult OnBeginForm_OnDataSourceChanged(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginForm_OnDataSourceChanged(token, form, controlId, callback, asyncState);
        }
        
        private object[] OnEndForm_OnDataSourceChanged(System.IAsyncResult result) {
            Mercury.Server.Application.Form retVal = ((Mercury.Server.Application.IApplication)(this)).EndForm_OnDataSourceChanged(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForm_OnDataSourceChangedCompleted(object state) {
            if ((this.Form_OnDataSourceChangedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Form_OnDataSourceChangedCompleted(this, new Form_OnDataSourceChangedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Form_OnDataSourceChangedAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId) {
            this.Form_OnDataSourceChangedAsync(token, form, controlId, null);
        }
        
        public void Form_OnDataSourceChangedAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, object userState) {
            if ((this.onBeginForm_OnDataSourceChangedDelegate == null)) {
                this.onBeginForm_OnDataSourceChangedDelegate = new BeginOperationDelegate(this.OnBeginForm_OnDataSourceChanged);
            }
            if ((this.onEndForm_OnDataSourceChangedDelegate == null)) {
                this.onEndForm_OnDataSourceChangedDelegate = new EndOperationDelegate(this.OnEndForm_OnDataSourceChanged);
            }
            if ((this.onForm_OnDataSourceChangedCompletedDelegate == null)) {
                this.onForm_OnDataSourceChangedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForm_OnDataSourceChangedCompleted);
            }
            base.InvokeAsync(this.onBeginForm_OnDataSourceChangedDelegate, new object[] {
                        token,
                        form,
                        controlId}, this.onEndForm_OnDataSourceChangedDelegate, this.onForm_OnDataSourceChangedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_Events(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_Events(token, form, controlId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> Mercury.Server.Application.IApplication.EndFormControl_Events(System.IAsyncResult result) {
            return base.Channel.EndFormControl_Events(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_Events(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_Events(token, form, controlId, callback, asyncState);
        }
        
        private object[] OnEndFormControl_Events(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_Events(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_EventsCompleted(object state) {
            if ((this.FormControl_EventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_EventsCompleted(this, new FormControl_EventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_EventsAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId) {
            this.FormControl_EventsAsync(token, form, controlId, null);
        }
        
        public void FormControl_EventsAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, object userState) {
            if ((this.onBeginFormControl_EventsDelegate == null)) {
                this.onBeginFormControl_EventsDelegate = new BeginOperationDelegate(this.OnBeginFormControl_Events);
            }
            if ((this.onEndFormControl_EventsDelegate == null)) {
                this.onEndFormControl_EventsDelegate = new EndOperationDelegate(this.OnEndFormControl_Events);
            }
            if ((this.onFormControl_EventsCompletedDelegate == null)) {
                this.onFormControl_EventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_EventsCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_EventsDelegate, new object[] {
                        token,
                        form,
                        controlId}, this.onEndFormControl_EventsDelegate, this.onFormControl_EventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_EventHandler_Compile(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_EventHandler_Compile(token, form, controlId, eventName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FormCompileMessageCollectionResponse Mercury.Server.Application.IApplication.EndFormControl_EventHandler_Compile(System.IAsyncResult result) {
            return base.Channel.EndFormControl_EventHandler_Compile(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_EventHandler_Compile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            string eventName = ((string)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_EventHandler_Compile(token, form, controlId, eventName, callback, asyncState);
        }
        
        private object[] OnEndFormControl_EventHandler_Compile(System.IAsyncResult result) {
            Mercury.Server.Application.FormCompileMessageCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_EventHandler_Compile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_EventHandler_CompileCompleted(object state) {
            if ((this.FormControl_EventHandler_CompileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_EventHandler_CompileCompleted(this, new FormControl_EventHandler_CompileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_EventHandler_CompileAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName) {
            this.FormControl_EventHandler_CompileAsync(token, form, controlId, eventName, null);
        }
        
        public void FormControl_EventHandler_CompileAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, object userState) {
            if ((this.onBeginFormControl_EventHandler_CompileDelegate == null)) {
                this.onBeginFormControl_EventHandler_CompileDelegate = new BeginOperationDelegate(this.OnBeginFormControl_EventHandler_Compile);
            }
            if ((this.onEndFormControl_EventHandler_CompileDelegate == null)) {
                this.onEndFormControl_EventHandler_CompileDelegate = new EndOperationDelegate(this.OnEndFormControl_EventHandler_Compile);
            }
            if ((this.onFormControl_EventHandler_CompileCompletedDelegate == null)) {
                this.onFormControl_EventHandler_CompileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_EventHandler_CompileCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_EventHandler_CompileDelegate, new object[] {
                        token,
                        form,
                        controlId,
                        eventName}, this.onEndFormControl_EventHandler_CompileDelegate, this.onFormControl_EventHandler_CompileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_RaiseEvent(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_RaiseEvent(token, form, controlId, eventName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FormControlRaiseEventResponse Mercury.Server.Application.IApplication.EndFormControl_RaiseEvent(System.IAsyncResult result) {
            return base.Channel.EndFormControl_RaiseEvent(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_RaiseEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            string eventName = ((string)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_RaiseEvent(token, form, controlId, eventName, callback, asyncState);
        }
        
        private object[] OnEndFormControl_RaiseEvent(System.IAsyncResult result) {
            Mercury.Server.Application.FormControlRaiseEventResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_RaiseEvent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_RaiseEventCompleted(object state) {
            if ((this.FormControl_RaiseEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_RaiseEventCompleted(this, new FormControl_RaiseEventCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_RaiseEventAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName) {
            this.FormControl_RaiseEventAsync(token, form, controlId, eventName, null);
        }
        
        public void FormControl_RaiseEventAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, object userState) {
            if ((this.onBeginFormControl_RaiseEventDelegate == null)) {
                this.onBeginFormControl_RaiseEventDelegate = new BeginOperationDelegate(this.OnBeginFormControl_RaiseEvent);
            }
            if ((this.onEndFormControl_RaiseEventDelegate == null)) {
                this.onEndFormControl_RaiseEventDelegate = new EndOperationDelegate(this.OnEndFormControl_RaiseEvent);
            }
            if ((this.onFormControl_RaiseEventCompletedDelegate == null)) {
                this.onFormControl_RaiseEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_RaiseEventCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_RaiseEventDelegate, new object[] {
                        token,
                        form,
                        controlId,
                        eventName}, this.onEndFormControl_RaiseEventDelegate, this.onFormControl_RaiseEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControl_ValueChanged(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControl_ValueChanged(token, form, controlId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.FormControlValueChangedResponse Mercury.Server.Application.IApplication.EndFormControl_ValueChanged(System.IAsyncResult result) {
            return base.Channel.EndFormControl_ValueChanged(result);
        }
        
        private System.IAsyncResult OnBeginFormControl_ValueChanged(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControl_ValueChanged(token, form, controlId, callback, asyncState);
        }
        
        private object[] OnEndFormControl_ValueChanged(System.IAsyncResult result) {
            Mercury.Server.Application.FormControlValueChangedResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControl_ValueChanged(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControl_ValueChangedCompleted(object state) {
            if ((this.FormControl_ValueChangedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControl_ValueChangedCompleted(this, new FormControl_ValueChangedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControl_ValueChangedAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId) {
            this.FormControl_ValueChangedAsync(token, form, controlId, null);
        }
        
        public void FormControl_ValueChangedAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, object userState) {
            if ((this.onBeginFormControl_ValueChangedDelegate == null)) {
                this.onBeginFormControl_ValueChangedDelegate = new BeginOperationDelegate(this.OnBeginFormControl_ValueChanged);
            }
            if ((this.onEndFormControl_ValueChangedDelegate == null)) {
                this.onEndFormControl_ValueChangedDelegate = new EndOperationDelegate(this.OnEndFormControl_ValueChanged);
            }
            if ((this.onFormControl_ValueChangedCompletedDelegate == null)) {
                this.onFormControl_ValueChangedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControl_ValueChangedCompleted);
            }
            base.InvokeAsync(this.onBeginFormControl_ValueChangedDelegate, new object[] {
                        token,
                        form,
                        controlId}, this.onEndFormControl_ValueChangedDelegate, this.onFormControl_ValueChangedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginFormControlSelection_ReferenceGetPage(string token, Mercury.Server.Application.Form form, System.Guid controlId, string text, int initialRow, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFormControlSelection_ReferenceGetPage(token, form, controlId, text, initialRow, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndFormControlSelection_ReferenceGetPage(System.IAsyncResult result) {
            return base.Channel.EndFormControlSelection_ReferenceGetPage(result);
        }
        
        private System.IAsyncResult OnBeginFormControlSelection_ReferenceGetPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Form form = ((Mercury.Server.Application.Form)(inValues[1]));
            System.Guid controlId = ((System.Guid)(inValues[2]));
            string text = ((string)(inValues[3]));
            int initialRow = ((int)(inValues[4]));
            int pageSize = ((int)(inValues[5]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginFormControlSelection_ReferenceGetPage(token, form, controlId, text, initialRow, pageSize, callback, asyncState);
        }
        
        private object[] OnEndFormControlSelection_ReferenceGetPage(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndFormControlSelection_ReferenceGetPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFormControlSelection_ReferenceGetPageCompleted(object state) {
            if ((this.FormControlSelection_ReferenceGetPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FormControlSelection_ReferenceGetPageCompleted(this, new FormControlSelection_ReferenceGetPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FormControlSelection_ReferenceGetPageAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string text, int initialRow, int pageSize) {
            this.FormControlSelection_ReferenceGetPageAsync(token, form, controlId, text, initialRow, pageSize, null);
        }
        
        public void FormControlSelection_ReferenceGetPageAsync(string token, Mercury.Server.Application.Form form, System.Guid controlId, string text, int initialRow, int pageSize, object userState) {
            if ((this.onBeginFormControlSelection_ReferenceGetPageDelegate == null)) {
                this.onBeginFormControlSelection_ReferenceGetPageDelegate = new BeginOperationDelegate(this.OnBeginFormControlSelection_ReferenceGetPage);
            }
            if ((this.onEndFormControlSelection_ReferenceGetPageDelegate == null)) {
                this.onEndFormControlSelection_ReferenceGetPageDelegate = new EndOperationDelegate(this.OnEndFormControlSelection_ReferenceGetPage);
            }
            if ((this.onFormControlSelection_ReferenceGetPageCompletedDelegate == null)) {
                this.onFormControlSelection_ReferenceGetPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFormControlSelection_ReferenceGetPageCompleted);
            }
            base.InvokeAsync(this.onBeginFormControlSelection_ReferenceGetPageDelegate, new object[] {
                        token,
                        form,
                        controlId,
                        text,
                        initialRow,
                        pageSize}, this.onEndFormControlSelection_ReferenceGetPageDelegate, this.onFormControlSelection_ReferenceGetPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareLevelsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareLevelsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CareLevelCollectionResponse Mercury.Server.Application.IApplication.EndCareLevelsAvailable(System.IAsyncResult result) {
            return base.Channel.EndCareLevelsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginCareLevelsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareLevelsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndCareLevelsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.CareLevelCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareLevelsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareLevelsAvailableCompleted(object state) {
            if ((this.CareLevelsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareLevelsAvailableCompleted(this, new CareLevelsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareLevelsAvailableAsync(string token) {
            this.CareLevelsAvailableAsync(token, null);
        }
        
        public void CareLevelsAvailableAsync(string token, object userState) {
            if ((this.onBeginCareLevelsAvailableDelegate == null)) {
                this.onBeginCareLevelsAvailableDelegate = new BeginOperationDelegate(this.OnBeginCareLevelsAvailable);
            }
            if ((this.onEndCareLevelsAvailableDelegate == null)) {
                this.onEndCareLevelsAvailableDelegate = new EndOperationDelegate(this.OnEndCareLevelsAvailable);
            }
            if ((this.onCareLevelsAvailableCompletedDelegate == null)) {
                this.onCareLevelsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareLevelsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginCareLevelsAvailableDelegate, new object[] {
                        token}, this.onEndCareLevelsAvailableDelegate, this.onCareLevelsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareLevelGet(string token, long careLevelId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareLevelGet(token, careLevelId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CareLevel Mercury.Server.Application.IApplication.EndCareLevelGet(System.IAsyncResult result) {
            return base.Channel.EndCareLevelGet(result);
        }
        
        private System.IAsyncResult OnBeginCareLevelGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long careLevelId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareLevelGet(token, careLevelId, callback, asyncState);
        }
        
        private object[] OnEndCareLevelGet(System.IAsyncResult result) {
            Mercury.Server.Application.CareLevel retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareLevelGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareLevelGetCompleted(object state) {
            if ((this.CareLevelGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareLevelGetCompleted(this, new CareLevelGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareLevelGetAsync(string token, long careLevelId) {
            this.CareLevelGetAsync(token, careLevelId, null);
        }
        
        public void CareLevelGetAsync(string token, long careLevelId, object userState) {
            if ((this.onBeginCareLevelGetDelegate == null)) {
                this.onBeginCareLevelGetDelegate = new BeginOperationDelegate(this.OnBeginCareLevelGet);
            }
            if ((this.onEndCareLevelGetDelegate == null)) {
                this.onEndCareLevelGetDelegate = new EndOperationDelegate(this.OnEndCareLevelGet);
            }
            if ((this.onCareLevelGetCompletedDelegate == null)) {
                this.onCareLevelGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareLevelGetCompleted);
            }
            base.InvokeAsync(this.onBeginCareLevelGetDelegate, new object[] {
                        token,
                        careLevelId}, this.onEndCareLevelGetDelegate, this.onCareLevelGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCareLevelSave(string token, Mercury.Server.Application.CareLevel careLevel, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCareLevelSave(token, careLevel, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndCareLevelSave(System.IAsyncResult result) {
            return base.Channel.EndCareLevelSave(result);
        }
        
        private System.IAsyncResult OnBeginCareLevelSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CareLevel careLevel = ((Mercury.Server.Application.CareLevel)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCareLevelSave(token, careLevel, callback, asyncState);
        }
        
        private object[] OnEndCareLevelSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCareLevelSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCareLevelSaveCompleted(object state) {
            if ((this.CareLevelSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CareLevelSaveCompleted(this, new CareLevelSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CareLevelSaveAsync(string token, Mercury.Server.Application.CareLevel careLevel) {
            this.CareLevelSaveAsync(token, careLevel, null);
        }
        
        public void CareLevelSaveAsync(string token, Mercury.Server.Application.CareLevel careLevel, object userState) {
            if ((this.onBeginCareLevelSaveDelegate == null)) {
                this.onBeginCareLevelSaveDelegate = new BeginOperationDelegate(this.OnBeginCareLevelSave);
            }
            if ((this.onEndCareLevelSaveDelegate == null)) {
                this.onEndCareLevelSaveDelegate = new EndOperationDelegate(this.OnEndCareLevelSave);
            }
            if ((this.onCareLevelSaveCompletedDelegate == null)) {
                this.onCareLevelSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCareLevelSaveCompleted);
            }
            base.InvokeAsync(this.onBeginCareLevelSaveDelegate, new object[] {
                        token,
                        careLevel}, this.onEndCareLevelSaveDelegate, this.onCareLevelSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCarePlansAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCarePlansAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CarePlanCollectionResponse Mercury.Server.Application.IApplication.EndCarePlansAvailable(System.IAsyncResult result) {
            return base.Channel.EndCarePlansAvailable(result);
        }
        
        private System.IAsyncResult OnBeginCarePlansAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCarePlansAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndCarePlansAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.CarePlanCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCarePlansAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCarePlansAvailableCompleted(object state) {
            if ((this.CarePlansAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CarePlansAvailableCompleted(this, new CarePlansAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CarePlansAvailableAsync(string token) {
            this.CarePlansAvailableAsync(token, null);
        }
        
        public void CarePlansAvailableAsync(string token, object userState) {
            if ((this.onBeginCarePlansAvailableDelegate == null)) {
                this.onBeginCarePlansAvailableDelegate = new BeginOperationDelegate(this.OnBeginCarePlansAvailable);
            }
            if ((this.onEndCarePlansAvailableDelegate == null)) {
                this.onEndCarePlansAvailableDelegate = new EndOperationDelegate(this.OnEndCarePlansAvailable);
            }
            if ((this.onCarePlansAvailableCompletedDelegate == null)) {
                this.onCarePlansAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCarePlansAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginCarePlansAvailableDelegate, new object[] {
                        token}, this.onEndCarePlansAvailableDelegate, this.onCarePlansAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCarePlanGet(string token, long carePlanId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCarePlanGet(token, carePlanId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CarePlan Mercury.Server.Application.IApplication.EndCarePlanGet(System.IAsyncResult result) {
            return base.Channel.EndCarePlanGet(result);
        }
        
        private System.IAsyncResult OnBeginCarePlanGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long carePlanId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCarePlanGet(token, carePlanId, callback, asyncState);
        }
        
        private object[] OnEndCarePlanGet(System.IAsyncResult result) {
            Mercury.Server.Application.CarePlan retVal = ((Mercury.Server.Application.IApplication)(this)).EndCarePlanGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCarePlanGetCompleted(object state) {
            if ((this.CarePlanGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CarePlanGetCompleted(this, new CarePlanGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CarePlanGetAsync(string token, long carePlanId) {
            this.CarePlanGetAsync(token, carePlanId, null);
        }
        
        public void CarePlanGetAsync(string token, long carePlanId, object userState) {
            if ((this.onBeginCarePlanGetDelegate == null)) {
                this.onBeginCarePlanGetDelegate = new BeginOperationDelegate(this.OnBeginCarePlanGet);
            }
            if ((this.onEndCarePlanGetDelegate == null)) {
                this.onEndCarePlanGetDelegate = new EndOperationDelegate(this.OnEndCarePlanGet);
            }
            if ((this.onCarePlanGetCompletedDelegate == null)) {
                this.onCarePlanGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCarePlanGetCompleted);
            }
            base.InvokeAsync(this.onBeginCarePlanGetDelegate, new object[] {
                        token,
                        carePlanId}, this.onEndCarePlanGetDelegate, this.onCarePlanGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCarePlanSave(string token, Mercury.Server.Application.CarePlan carePlan, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCarePlanSave(token, carePlan, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndCarePlanSave(System.IAsyncResult result) {
            return base.Channel.EndCarePlanSave(result);
        }
        
        private System.IAsyncResult OnBeginCarePlanSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CarePlan carePlan = ((Mercury.Server.Application.CarePlan)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCarePlanSave(token, carePlan, callback, asyncState);
        }
        
        private object[] OnEndCarePlanSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCarePlanSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCarePlanSaveCompleted(object state) {
            if ((this.CarePlanSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CarePlanSaveCompleted(this, new CarePlanSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CarePlanSaveAsync(string token, Mercury.Server.Application.CarePlan carePlan) {
            this.CarePlanSaveAsync(token, carePlan, null);
        }
        
        public void CarePlanSaveAsync(string token, Mercury.Server.Application.CarePlan carePlan, object userState) {
            if ((this.onBeginCarePlanSaveDelegate == null)) {
                this.onBeginCarePlanSaveDelegate = new BeginOperationDelegate(this.OnBeginCarePlanSave);
            }
            if ((this.onEndCarePlanSaveDelegate == null)) {
                this.onEndCarePlanSaveDelegate = new EndOperationDelegate(this.OnEndCarePlanSave);
            }
            if ((this.onCarePlanSaveCompletedDelegate == null)) {
                this.onCarePlanSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCarePlanSaveCompleted);
            }
            base.InvokeAsync(this.onBeginCarePlanSaveDelegate, new object[] {
                        token,
                        carePlan}, this.onEndCarePlanSaveDelegate, this.onCarePlanSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProblemStatementsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProblemStatementsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ProblemStatementCollectionResponse Mercury.Server.Application.IApplication.EndProblemStatementsAvailable(System.IAsyncResult result) {
            return base.Channel.EndProblemStatementsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginProblemStatementsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProblemStatementsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndProblemStatementsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.ProblemStatementCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndProblemStatementsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProblemStatementsAvailableCompleted(object state) {
            if ((this.ProblemStatementsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProblemStatementsAvailableCompleted(this, new ProblemStatementsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProblemStatementsAvailableAsync(string token) {
            this.ProblemStatementsAvailableAsync(token, null);
        }
        
        public void ProblemStatementsAvailableAsync(string token, object userState) {
            if ((this.onBeginProblemStatementsAvailableDelegate == null)) {
                this.onBeginProblemStatementsAvailableDelegate = new BeginOperationDelegate(this.OnBeginProblemStatementsAvailable);
            }
            if ((this.onEndProblemStatementsAvailableDelegate == null)) {
                this.onEndProblemStatementsAvailableDelegate = new EndOperationDelegate(this.OnEndProblemStatementsAvailable);
            }
            if ((this.onProblemStatementsAvailableCompletedDelegate == null)) {
                this.onProblemStatementsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProblemStatementsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginProblemStatementsAvailableDelegate, new object[] {
                        token}, this.onEndProblemStatementsAvailableDelegate, this.onProblemStatementsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityAddressSave(string token, Mercury.Server.Application.EntityAddress entityAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityAddressSave(token, entityAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEntityAddressSave(System.IAsyncResult result) {
            return base.Channel.EndEntityAddressSave(result);
        }
        
        private System.IAsyncResult OnBeginEntityAddressSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityAddress entityAddress = ((Mercury.Server.Application.EntityAddress)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityAddressSave(token, entityAddress, callback, asyncState);
        }
        
        private object[] OnEndEntityAddressSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityAddressSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityAddressSaveCompleted(object state) {
            if ((this.EntityAddressSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityAddressSaveCompleted(this, new EntityAddressSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityAddressSaveAsync(string token, Mercury.Server.Application.EntityAddress entityAddress) {
            this.EntityAddressSaveAsync(token, entityAddress, null);
        }
        
        public void EntityAddressSaveAsync(string token, Mercury.Server.Application.EntityAddress entityAddress, object userState) {
            if ((this.onBeginEntityAddressSaveDelegate == null)) {
                this.onBeginEntityAddressSaveDelegate = new BeginOperationDelegate(this.OnBeginEntityAddressSave);
            }
            if ((this.onEndEntityAddressSaveDelegate == null)) {
                this.onEndEntityAddressSaveDelegate = new EndOperationDelegate(this.OnEndEntityAddressSave);
            }
            if ((this.onEntityAddressSaveCompletedDelegate == null)) {
                this.onEntityAddressSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityAddressSaveCompleted);
            }
            base.InvokeAsync(this.onBeginEntityAddressSaveDelegate, new object[] {
                        token,
                        entityAddress}, this.onEndEntityAddressSaveDelegate, this.onEntityAddressSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityAddressTerminate(string token, Mercury.Server.Application.EntityAddress entityAddress, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityAddressTerminate(token, entityAddress, terminationDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEntityAddressTerminate(System.IAsyncResult result) {
            return base.Channel.EndEntityAddressTerminate(result);
        }
        
        private System.IAsyncResult OnBeginEntityAddressTerminate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityAddress entityAddress = ((Mercury.Server.Application.EntityAddress)(inValues[1]));
            System.DateTime terminationDate = ((System.DateTime)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityAddressTerminate(token, entityAddress, terminationDate, callback, asyncState);
        }
        
        private object[] OnEndEntityAddressTerminate(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityAddressTerminate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityAddressTerminateCompleted(object state) {
            if ((this.EntityAddressTerminateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityAddressTerminateCompleted(this, new EntityAddressTerminateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityAddressTerminateAsync(string token, Mercury.Server.Application.EntityAddress entityAddress, System.DateTime terminationDate) {
            this.EntityAddressTerminateAsync(token, entityAddress, terminationDate, null);
        }
        
        public void EntityAddressTerminateAsync(string token, Mercury.Server.Application.EntityAddress entityAddress, System.DateTime terminationDate, object userState) {
            if ((this.onBeginEntityAddressTerminateDelegate == null)) {
                this.onBeginEntityAddressTerminateDelegate = new BeginOperationDelegate(this.OnBeginEntityAddressTerminate);
            }
            if ((this.onEndEntityAddressTerminateDelegate == null)) {
                this.onEndEntityAddressTerminateDelegate = new EndOperationDelegate(this.OnEndEntityAddressTerminate);
            }
            if ((this.onEntityAddressTerminateCompletedDelegate == null)) {
                this.onEntityAddressTerminateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityAddressTerminateCompleted);
            }
            base.InvokeAsync(this.onBeginEntityAddressTerminateDelegate, new object[] {
                        token,
                        entityAddress,
                        terminationDate}, this.onEndEntityAddressTerminateDelegate, this.onEntityAddressTerminateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactGet(string token, long entityContactId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactGet(token, entityContactId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityContact Mercury.Server.Application.IApplication.EndEntityContactGet(System.IAsyncResult result) {
            return base.Channel.EndEntityContactGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityContactId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactGet(token, entityContactId, callback, asyncState);
        }
        
        private object[] OnEndEntityContactGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityContact retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactGetCompleted(object state) {
            if ((this.EntityContactGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactGetCompleted(this, new EntityContactGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactGetAsync(string token, long entityContactId) {
            this.EntityContactGetAsync(token, entityContactId, null);
        }
        
        public void EntityContactGetAsync(string token, long entityContactId, object userState) {
            if ((this.onBeginEntityContactGetDelegate == null)) {
                this.onBeginEntityContactGetDelegate = new BeginOperationDelegate(this.OnBeginEntityContactGet);
            }
            if ((this.onEndEntityContactGetDelegate == null)) {
                this.onEndEntityContactGetDelegate = new EndOperationDelegate(this.OnEndEntityContactGet);
            }
            if ((this.onEntityContactGetCompletedDelegate == null)) {
                this.onEntityContactGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactGetDelegate, new object[] {
                        token,
                        entityContactId}, this.onEndEntityContactGetDelegate, this.onEntityContactGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactsGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactsGetCount(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndEntityContactsGetCount(System.IAsyncResult result) {
            return base.Channel.EndEntityContactsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactsGetCount(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityContactsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactsGetCountCompleted(object state) {
            if ((this.EntityContactsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactsGetCountCompleted(this, new EntityContactsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactsGetCountAsync(string token, long entityId) {
            this.EntityContactsGetCountAsync(token, entityId, null);
        }
        
        public void EntityContactsGetCountAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityContactsGetCountDelegate == null)) {
                this.onBeginEntityContactsGetCountDelegate = new BeginOperationDelegate(this.OnBeginEntityContactsGetCount);
            }
            if ((this.onEndEntityContactsGetCountDelegate == null)) {
                this.onEndEntityContactsGetCountDelegate = new EndOperationDelegate(this.OnEndEntityContactsGetCount);
            }
            if ((this.onEntityContactsGetCountCompletedDelegate == null)) {
                this.onEntityContactsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactsGetCountDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityContactsGetCountDelegate, this.onEntityContactsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactsGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactsGetByPage(token, entityId, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityContactCollectionResponse Mercury.Server.Application.IApplication.EndEntityContactsGetByPage(System.IAsyncResult result) {
            return base.Channel.EndEntityContactsGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactsGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactsGetByPage(token, entityId, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndEntityContactsGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.EntityContactCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactsGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactsGetByPageCompleted(object state) {
            if ((this.EntityContactsGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactsGetByPageCompleted(this, new EntityContactsGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactsGetByPageAsync(string token, long entityId, int initialRow, int count) {
            this.EntityContactsGetByPageAsync(token, entityId, initialRow, count, null);
        }
        
        public void EntityContactsGetByPageAsync(string token, long entityId, int initialRow, int count, object userState) {
            if ((this.onBeginEntityContactsGetByPageDelegate == null)) {
                this.onBeginEntityContactsGetByPageDelegate = new BeginOperationDelegate(this.OnBeginEntityContactsGetByPage);
            }
            if ((this.onEndEntityContactsGetByPageDelegate == null)) {
                this.onEndEntityContactsGetByPageDelegate = new EndOperationDelegate(this.OnEndEntityContactsGetByPage);
            }
            if ((this.onEntityContactsGetByPageCompletedDelegate == null)) {
                this.onEntityContactsGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactsGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactsGetByPageDelegate, new object[] {
                        token,
                        entityId,
                        initialRow,
                        count}, this.onEndEntityContactsGetByPageDelegate, this.onEntityContactsGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactSave(string token, Mercury.Server.Application.EntityContact entityContact, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactSave(token, entityContact, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEntityContactSave(System.IAsyncResult result) {
            return base.Channel.EndEntityContactSave(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityContact entityContact = ((Mercury.Server.Application.EntityContact)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactSave(token, entityContact, callback, asyncState);
        }
        
        private object[] OnEndEntityContactSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactSaveCompleted(object state) {
            if ((this.EntityContactSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactSaveCompleted(this, new EntityContactSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactSaveAsync(string token, Mercury.Server.Application.EntityContact entityContact) {
            this.EntityContactSaveAsync(token, entityContact, null);
        }
        
        public void EntityContactSaveAsync(string token, Mercury.Server.Application.EntityContact entityContact, object userState) {
            if ((this.onBeginEntityContactSaveDelegate == null)) {
                this.onBeginEntityContactSaveDelegate = new BeginOperationDelegate(this.OnBeginEntityContactSave);
            }
            if ((this.onEndEntityContactSaveDelegate == null)) {
                this.onEndEntityContactSaveDelegate = new EndOperationDelegate(this.OnEndEntityContactSave);
            }
            if ((this.onEntityContactSaveCompletedDelegate == null)) {
                this.onEntityContactSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactSaveCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactSaveDelegate, new object[] {
                        token,
                        entityContact}, this.onEndEntityContactSaveDelegate, this.onEntityContactSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactInformationGet(string token, long entityContactInformationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactInformationGet(token, entityContactInformationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityContactInformation Mercury.Server.Application.IApplication.EndEntityContactInformationGet(System.IAsyncResult result) {
            return base.Channel.EndEntityContactInformationGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactInformationGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityContactInformationId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactInformationGet(token, entityContactInformationId, callback, asyncState);
        }
        
        private object[] OnEndEntityContactInformationGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityContactInformation retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactInformationGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactInformationGetCompleted(object state) {
            if ((this.EntityContactInformationGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactInformationGetCompleted(this, new EntityContactInformationGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactInformationGetAsync(string token, long entityContactInformationId) {
            this.EntityContactInformationGetAsync(token, entityContactInformationId, null);
        }
        
        public void EntityContactInformationGetAsync(string token, long entityContactInformationId, object userState) {
            if ((this.onBeginEntityContactInformationGetDelegate == null)) {
                this.onBeginEntityContactInformationGetDelegate = new BeginOperationDelegate(this.OnBeginEntityContactInformationGet);
            }
            if ((this.onEndEntityContactInformationGetDelegate == null)) {
                this.onEndEntityContactInformationGetDelegate = new EndOperationDelegate(this.OnEndEntityContactInformationGet);
            }
            if ((this.onEntityContactInformationGetCompletedDelegate == null)) {
                this.onEntityContactInformationGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactInformationGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactInformationGetDelegate, new object[] {
                        token,
                        entityContactInformationId}, this.onEndEntityContactInformationGetDelegate, this.onEntityContactInformationGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactInformationGetByTypeDate(string token, long entityId, Mercury.Server.Application.EntityContactType contactType, System.DateTime forDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactInformationGetByTypeDate(token, entityId, contactType, forDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityContactInformation Mercury.Server.Application.IApplication.EndEntityContactInformationGetByTypeDate(System.IAsyncResult result) {
            return base.Channel.EndEntityContactInformationGetByTypeDate(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactInformationGetByTypeDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            Mercury.Server.Application.EntityContactType contactType = ((Mercury.Server.Application.EntityContactType)(inValues[2]));
            System.DateTime forDate = ((System.DateTime)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactInformationGetByTypeDate(token, entityId, contactType, forDate, callback, asyncState);
        }
        
        private object[] OnEndEntityContactInformationGetByTypeDate(System.IAsyncResult result) {
            Mercury.Server.Application.EntityContactInformation retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactInformationGetByTypeDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactInformationGetByTypeDateCompleted(object state) {
            if ((this.EntityContactInformationGetByTypeDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactInformationGetByTypeDateCompleted(this, new EntityContactInformationGetByTypeDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactInformationGetByTypeDateAsync(string token, long entityId, Mercury.Server.Application.EntityContactType contactType, System.DateTime forDate) {
            this.EntityContactInformationGetByTypeDateAsync(token, entityId, contactType, forDate, null);
        }
        
        public void EntityContactInformationGetByTypeDateAsync(string token, long entityId, Mercury.Server.Application.EntityContactType contactType, System.DateTime forDate, object userState) {
            if ((this.onBeginEntityContactInformationGetByTypeDateDelegate == null)) {
                this.onBeginEntityContactInformationGetByTypeDateDelegate = new BeginOperationDelegate(this.OnBeginEntityContactInformationGetByTypeDate);
            }
            if ((this.onEndEntityContactInformationGetByTypeDateDelegate == null)) {
                this.onEndEntityContactInformationGetByTypeDateDelegate = new EndOperationDelegate(this.OnEndEntityContactInformationGetByTypeDate);
            }
            if ((this.onEntityContactInformationGetByTypeDateCompletedDelegate == null)) {
                this.onEntityContactInformationGetByTypeDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactInformationGetByTypeDateCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactInformationGetByTypeDateDelegate, new object[] {
                        token,
                        entityId,
                        contactType,
                        forDate}, this.onEndEntityContactInformationGetByTypeDateDelegate, this.onEntityContactInformationGetByTypeDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactInformationsGet(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactInformationsGet(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityContactInformationCollectionResponse Mercury.Server.Application.IApplication.EndEntityContactInformationsGet(System.IAsyncResult result) {
            return base.Channel.EndEntityContactInformationsGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactInformationsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactInformationsGet(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityContactInformationsGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityContactInformationCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactInformationsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactInformationsGetCompleted(object state) {
            if ((this.EntityContactInformationsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactInformationsGetCompleted(this, new EntityContactInformationsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactInformationsGetAsync(string token, long entityId) {
            this.EntityContactInformationsGetAsync(token, entityId, null);
        }
        
        public void EntityContactInformationsGetAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityContactInformationsGetDelegate == null)) {
                this.onBeginEntityContactInformationsGetDelegate = new BeginOperationDelegate(this.OnBeginEntityContactInformationsGet);
            }
            if ((this.onEndEntityContactInformationsGetDelegate == null)) {
                this.onEndEntityContactInformationsGetDelegate = new EndOperationDelegate(this.OnEndEntityContactInformationsGet);
            }
            if ((this.onEntityContactInformationsGetCompletedDelegate == null)) {
                this.onEntityContactInformationsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactInformationsGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactInformationsGetDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityContactInformationsGetDelegate, this.onEntityContactInformationsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactInformationSave(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactInformationSave(token, entityContactInformation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEntityContactInformationSave(System.IAsyncResult result) {
            return base.Channel.EndEntityContactInformationSave(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactInformationSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityContactInformation entityContactInformation = ((Mercury.Server.Application.EntityContactInformation)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactInformationSave(token, entityContactInformation, callback, asyncState);
        }
        
        private object[] OnEndEntityContactInformationSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactInformationSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactInformationSaveCompleted(object state) {
            if ((this.EntityContactInformationSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactInformationSaveCompleted(this, new EntityContactInformationSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactInformationSaveAsync(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation) {
            this.EntityContactInformationSaveAsync(token, entityContactInformation, null);
        }
        
        public void EntityContactInformationSaveAsync(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, object userState) {
            if ((this.onBeginEntityContactInformationSaveDelegate == null)) {
                this.onBeginEntityContactInformationSaveDelegate = new BeginOperationDelegate(this.OnBeginEntityContactInformationSave);
            }
            if ((this.onEndEntityContactInformationSaveDelegate == null)) {
                this.onEndEntityContactInformationSaveDelegate = new EndOperationDelegate(this.OnEndEntityContactInformationSave);
            }
            if ((this.onEntityContactInformationSaveCompletedDelegate == null)) {
                this.onEntityContactInformationSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactInformationSaveCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactInformationSaveDelegate, new object[] {
                        token,
                        entityContactInformation}, this.onEndEntityContactInformationSaveDelegate, this.onEntityContactInformationSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityContactInformationTerminate(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityContactInformationTerminate(token, entityContactInformation, terminationDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEntityContactInformationTerminate(System.IAsyncResult result) {
            return base.Channel.EndEntityContactInformationTerminate(result);
        }
        
        private System.IAsyncResult OnBeginEntityContactInformationTerminate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityContactInformation entityContactInformation = ((Mercury.Server.Application.EntityContactInformation)(inValues[1]));
            System.DateTime terminationDate = ((System.DateTime)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityContactInformationTerminate(token, entityContactInformation, terminationDate, callback, asyncState);
        }
        
        private object[] OnEndEntityContactInformationTerminate(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityContactInformationTerminate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityContactInformationTerminateCompleted(object state) {
            if ((this.EntityContactInformationTerminateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityContactInformationTerminateCompleted(this, new EntityContactInformationTerminateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityContactInformationTerminateAsync(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.DateTime terminationDate) {
            this.EntityContactInformationTerminateAsync(token, entityContactInformation, terminationDate, null);
        }
        
        public void EntityContactInformationTerminateAsync(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.DateTime terminationDate, object userState) {
            if ((this.onBeginEntityContactInformationTerminateDelegate == null)) {
                this.onBeginEntityContactInformationTerminateDelegate = new BeginOperationDelegate(this.OnBeginEntityContactInformationTerminate);
            }
            if ((this.onEndEntityContactInformationTerminateDelegate == null)) {
                this.onEndEntityContactInformationTerminateDelegate = new EndOperationDelegate(this.OnEndEntityContactInformationTerminate);
            }
            if ((this.onEntityContactInformationTerminateCompletedDelegate == null)) {
                this.onEntityContactInformationTerminateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityContactInformationTerminateCompleted);
            }
            base.InvokeAsync(this.onBeginEntityContactInformationTerminateDelegate, new object[] {
                        token,
                        entityContactInformation,
                        terminationDate}, this.onEndEntityContactInformationTerminateDelegate, this.onEntityContactInformationTerminateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityCorrespondenceGet(string token, long entityCorrespondenceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityCorrespondenceGet(token, entityCorrespondenceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityCorrespondence Mercury.Server.Application.IApplication.EndEntityCorrespondenceGet(System.IAsyncResult result) {
            return base.Channel.EndEntityCorrespondenceGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityCorrespondenceGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityCorrespondenceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityCorrespondenceGet(token, entityCorrespondenceId, callback, asyncState);
        }
        
        private object[] OnEndEntityCorrespondenceGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityCorrespondence retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityCorrespondenceGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityCorrespondenceGetCompleted(object state) {
            if ((this.EntityCorrespondenceGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityCorrespondenceGetCompleted(this, new EntityCorrespondenceGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityCorrespondenceGetAsync(string token, long entityCorrespondenceId) {
            this.EntityCorrespondenceGetAsync(token, entityCorrespondenceId, null);
        }
        
        public void EntityCorrespondenceGetAsync(string token, long entityCorrespondenceId, object userState) {
            if ((this.onBeginEntityCorrespondenceGetDelegate == null)) {
                this.onBeginEntityCorrespondenceGetDelegate = new BeginOperationDelegate(this.OnBeginEntityCorrespondenceGet);
            }
            if ((this.onEndEntityCorrespondenceGetDelegate == null)) {
                this.onEndEntityCorrespondenceGetDelegate = new EndOperationDelegate(this.OnEndEntityCorrespondenceGet);
            }
            if ((this.onEntityCorrespondenceGetCompletedDelegate == null)) {
                this.onEntityCorrespondenceGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityCorrespondenceGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityCorrespondenceGetDelegate, new object[] {
                        token,
                        entityCorrespondenceId}, this.onEndEntityCorrespondenceGetDelegate, this.onEntityCorrespondenceGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityCorrespondenceImageGet(string token, long entityCorrespondenceId, bool render, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityCorrespondenceImageGet(token, entityCorrespondenceId, render, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ImageResponse Mercury.Server.Application.IApplication.EndEntityCorrespondenceImageGet(System.IAsyncResult result) {
            return base.Channel.EndEntityCorrespondenceImageGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityCorrespondenceImageGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityCorrespondenceId = ((long)(inValues[1]));
            bool render = ((bool)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityCorrespondenceImageGet(token, entityCorrespondenceId, render, callback, asyncState);
        }
        
        private object[] OnEndEntityCorrespondenceImageGet(System.IAsyncResult result) {
            Mercury.Server.Application.ImageResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityCorrespondenceImageGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityCorrespondenceImageGetCompleted(object state) {
            if ((this.EntityCorrespondenceImageGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityCorrespondenceImageGetCompleted(this, new EntityCorrespondenceImageGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityCorrespondenceImageGetAsync(string token, long entityCorrespondenceId, bool render) {
            this.EntityCorrespondenceImageGetAsync(token, entityCorrespondenceId, render, null);
        }
        
        public void EntityCorrespondenceImageGetAsync(string token, long entityCorrespondenceId, bool render, object userState) {
            if ((this.onBeginEntityCorrespondenceImageGetDelegate == null)) {
                this.onBeginEntityCorrespondenceImageGetDelegate = new BeginOperationDelegate(this.OnBeginEntityCorrespondenceImageGet);
            }
            if ((this.onEndEntityCorrespondenceImageGetDelegate == null)) {
                this.onEndEntityCorrespondenceImageGetDelegate = new EndOperationDelegate(this.OnEndEntityCorrespondenceImageGet);
            }
            if ((this.onEntityCorrespondenceImageGetCompletedDelegate == null)) {
                this.onEntityCorrespondenceImageGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityCorrespondenceImageGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityCorrespondenceImageGetDelegate, new object[] {
                        token,
                        entityCorrespondenceId,
                        render}, this.onEndEntityCorrespondenceImageGetDelegate, this.onEntityCorrespondenceImageGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityCorrespondenceSave(string token, Mercury.Server.Application.EntityCorrespondence entityCorrespondence, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityCorrespondenceSave(token, entityCorrespondence, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEntityCorrespondenceSave(System.IAsyncResult result) {
            return base.Channel.EndEntityCorrespondenceSave(result);
        }
        
        private System.IAsyncResult OnBeginEntityCorrespondenceSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityCorrespondence entityCorrespondence = ((Mercury.Server.Application.EntityCorrespondence)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityCorrespondenceSave(token, entityCorrespondence, callback, asyncState);
        }
        
        private object[] OnEndEntityCorrespondenceSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityCorrespondenceSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityCorrespondenceSaveCompleted(object state) {
            if ((this.EntityCorrespondenceSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityCorrespondenceSaveCompleted(this, new EntityCorrespondenceSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityCorrespondenceSaveAsync(string token, Mercury.Server.Application.EntityCorrespondence entityCorrespondence) {
            this.EntityCorrespondenceSaveAsync(token, entityCorrespondence, null);
        }
        
        public void EntityCorrespondenceSaveAsync(string token, Mercury.Server.Application.EntityCorrespondence entityCorrespondence, object userState) {
            if ((this.onBeginEntityCorrespondenceSaveDelegate == null)) {
                this.onBeginEntityCorrespondenceSaveDelegate = new BeginOperationDelegate(this.OnBeginEntityCorrespondenceSave);
            }
            if ((this.onEndEntityCorrespondenceSaveDelegate == null)) {
                this.onEndEntityCorrespondenceSaveDelegate = new EndOperationDelegate(this.OnEndEntityCorrespondenceSave);
            }
            if ((this.onEntityCorrespondenceSaveCompletedDelegate == null)) {
                this.onEntityCorrespondenceSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityCorrespondenceSaveCompleted);
            }
            base.InvokeAsync(this.onBeginEntityCorrespondenceSaveDelegate, new object[] {
                        token,
                        entityCorrespondence}, this.onEndEntityCorrespondenceSaveDelegate, this.onEntityCorrespondenceSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityDocumentsGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityDocumentsGetCount(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndEntityDocumentsGetCount(System.IAsyncResult result) {
            return base.Channel.EndEntityDocumentsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginEntityDocumentsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityDocumentsGetCount(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityDocumentsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityDocumentsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityDocumentsGetCountCompleted(object state) {
            if ((this.EntityDocumentsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityDocumentsGetCountCompleted(this, new EntityDocumentsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityDocumentsGetCountAsync(string token, long entityId) {
            this.EntityDocumentsGetCountAsync(token, entityId, null);
        }
        
        public void EntityDocumentsGetCountAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityDocumentsGetCountDelegate == null)) {
                this.onBeginEntityDocumentsGetCountDelegate = new BeginOperationDelegate(this.OnBeginEntityDocumentsGetCount);
            }
            if ((this.onEndEntityDocumentsGetCountDelegate == null)) {
                this.onEndEntityDocumentsGetCountDelegate = new EndOperationDelegate(this.OnEndEntityDocumentsGetCount);
            }
            if ((this.onEntityDocumentsGetCountCompletedDelegate == null)) {
                this.onEntityDocumentsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityDocumentsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginEntityDocumentsGetCountDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityDocumentsGetCountDelegate, this.onEntityDocumentsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityDocumentsGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityDocumentsGetByPage(token, entityId, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityDocumentCollectionResponse Mercury.Server.Application.IApplication.EndEntityDocumentsGetByPage(System.IAsyncResult result) {
            return base.Channel.EndEntityDocumentsGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginEntityDocumentsGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityDocumentsGetByPage(token, entityId, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndEntityDocumentsGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.EntityDocumentCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityDocumentsGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityDocumentsGetByPageCompleted(object state) {
            if ((this.EntityDocumentsGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityDocumentsGetByPageCompleted(this, new EntityDocumentsGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityDocumentsGetByPageAsync(string token, long entityId, int initialRow, int count) {
            this.EntityDocumentsGetByPageAsync(token, entityId, initialRow, count, null);
        }
        
        public void EntityDocumentsGetByPageAsync(string token, long entityId, int initialRow, int count, object userState) {
            if ((this.onBeginEntityDocumentsGetByPageDelegate == null)) {
                this.onBeginEntityDocumentsGetByPageDelegate = new BeginOperationDelegate(this.OnBeginEntityDocumentsGetByPage);
            }
            if ((this.onEndEntityDocumentsGetByPageDelegate == null)) {
                this.onEndEntityDocumentsGetByPageDelegate = new EndOperationDelegate(this.OnEndEntityDocumentsGetByPage);
            }
            if ((this.onEntityDocumentsGetByPageCompletedDelegate == null)) {
                this.onEntityDocumentsGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityDocumentsGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginEntityDocumentsGetByPageDelegate, new object[] {
                        token,
                        entityId,
                        initialRow,
                        count}, this.onEndEntityDocumentsGetByPageDelegate, this.onEntityDocumentsGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteGet(string token, long entityNoteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteGet(token, entityNoteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityNote Mercury.Server.Application.IApplication.EndEntityNoteGet(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityNoteId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteGet(token, entityNoteId, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityNote retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteGetCompleted(object state) {
            if ((this.EntityNoteGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteGetCompleted(this, new EntityNoteGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteGetAsync(string token, long entityNoteId) {
            this.EntityNoteGetAsync(token, entityNoteId, null);
        }
        
        public void EntityNoteGetAsync(string token, long entityNoteId, object userState) {
            if ((this.onBeginEntityNoteGetDelegate == null)) {
                this.onBeginEntityNoteGetDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteGet);
            }
            if ((this.onEndEntityNoteGetDelegate == null)) {
                this.onEndEntityNoteGetDelegate = new EndOperationDelegate(this.OnEndEntityNoteGet);
            }
            if ((this.onEntityNoteGetCompletedDelegate == null)) {
                this.onEntityNoteGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteGetDelegate, new object[] {
                        token,
                        entityNoteId}, this.onEndEntityNoteGetDelegate, this.onEntityNoteGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteSave(string token, Mercury.Server.Application.EntityNote entityNote, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteSave(token, entityNote, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEntityNoteSave(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteSave(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityNote entityNote = ((Mercury.Server.Application.EntityNote)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteSave(token, entityNote, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteSaveCompleted(object state) {
            if ((this.EntityNoteSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteSaveCompleted(this, new EntityNoteSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteSaveAsync(string token, Mercury.Server.Application.EntityNote entityNote) {
            this.EntityNoteSaveAsync(token, entityNote, null);
        }
        
        public void EntityNoteSaveAsync(string token, Mercury.Server.Application.EntityNote entityNote, object userState) {
            if ((this.onBeginEntityNoteSaveDelegate == null)) {
                this.onBeginEntityNoteSaveDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteSave);
            }
            if ((this.onEndEntityNoteSaveDelegate == null)) {
                this.onEndEntityNoteSaveDelegate = new EndOperationDelegate(this.OnEndEntityNoteSave);
            }
            if ((this.onEntityNoteSaveCompletedDelegate == null)) {
                this.onEntityNoteSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteSaveCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteSaveDelegate, new object[] {
                        token,
                        entityNote}, this.onEndEntityNoteSaveDelegate, this.onEntityNoteSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteTerminate(string token, Mercury.Server.Application.EntityNote entityNote, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteTerminate(token, entityNote, terminationDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEntityNoteTerminate(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteTerminate(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteTerminate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityNote entityNote = ((Mercury.Server.Application.EntityNote)(inValues[1]));
            System.DateTime terminationDate = ((System.DateTime)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteTerminate(token, entityNote, terminationDate, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteTerminate(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteTerminate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteTerminateCompleted(object state) {
            if ((this.EntityNoteTerminateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteTerminateCompleted(this, new EntityNoteTerminateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteTerminateAsync(string token, Mercury.Server.Application.EntityNote entityNote, System.DateTime terminationDate) {
            this.EntityNoteTerminateAsync(token, entityNote, terminationDate, null);
        }
        
        public void EntityNoteTerminateAsync(string token, Mercury.Server.Application.EntityNote entityNote, System.DateTime terminationDate, object userState) {
            if ((this.onBeginEntityNoteTerminateDelegate == null)) {
                this.onBeginEntityNoteTerminateDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteTerminate);
            }
            if ((this.onEndEntityNoteTerminateDelegate == null)) {
                this.onEndEntityNoteTerminateDelegate = new EndOperationDelegate(this.OnEndEntityNoteTerminate);
            }
            if ((this.onEntityNoteTerminateCompletedDelegate == null)) {
                this.onEntityNoteTerminateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteTerminateCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteTerminateDelegate, new object[] {
                        token,
                        entityNote,
                        terminationDate}, this.onEndEntityNoteTerminateDelegate, this.onEntityNoteTerminateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteContentsGet(string token, long entityNoteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteContentsGet(token, entityNoteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityNoteContentCollectionResponse Mercury.Server.Application.IApplication.EndEntityNoteContentsGet(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteContentsGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteContentsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityNoteId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteContentsGet(token, entityNoteId, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteContentsGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityNoteContentCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteContentsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteContentsGetCompleted(object state) {
            if ((this.EntityNoteContentsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteContentsGetCompleted(this, new EntityNoteContentsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteContentsGetAsync(string token, long entityNoteId) {
            this.EntityNoteContentsGetAsync(token, entityNoteId, null);
        }
        
        public void EntityNoteContentsGetAsync(string token, long entityNoteId, object userState) {
            if ((this.onBeginEntityNoteContentsGetDelegate == null)) {
                this.onBeginEntityNoteContentsGetDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteContentsGet);
            }
            if ((this.onEndEntityNoteContentsGetDelegate == null)) {
                this.onEndEntityNoteContentsGetDelegate = new EndOperationDelegate(this.OnEndEntityNoteContentsGet);
            }
            if ((this.onEntityNoteContentsGetCompletedDelegate == null)) {
                this.onEntityNoteContentsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteContentsGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteContentsGetDelegate, new object[] {
                        token,
                        entityNoteId}, this.onEndEntityNoteContentsGetDelegate, this.onEntityNoteContentsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteContentAppend(string token, Mercury.Server.Application.EntityNote entityNote, string content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteContentAppend(token, entityNote, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEntityNoteContentAppend(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteContentAppend(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteContentAppend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.EntityNote entityNote = ((Mercury.Server.Application.EntityNote)(inValues[1]));
            string content = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteContentAppend(token, entityNote, content, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteContentAppend(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteContentAppend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteContentAppendCompleted(object state) {
            if ((this.EntityNoteContentAppendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteContentAppendCompleted(this, new EntityNoteContentAppendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteContentAppendAsync(string token, Mercury.Server.Application.EntityNote entityNote, string content) {
            this.EntityNoteContentAppendAsync(token, entityNote, content, null);
        }
        
        public void EntityNoteContentAppendAsync(string token, Mercury.Server.Application.EntityNote entityNote, string content, object userState) {
            if ((this.onBeginEntityNoteContentAppendDelegate == null)) {
                this.onBeginEntityNoteContentAppendDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteContentAppend);
            }
            if ((this.onEndEntityNoteContentAppendDelegate == null)) {
                this.onEndEntityNoteContentAppendDelegate = new EndOperationDelegate(this.OnEndEntityNoteContentAppend);
            }
            if ((this.onEntityNoteContentAppendCompletedDelegate == null)) {
                this.onEntityNoteContentAppendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteContentAppendCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteContentAppendDelegate, new object[] {
                        token,
                        entityNote,
                        content}, this.onEndEntityNoteContentAppendDelegate, this.onEntityNoteContentAppendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNotesGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNotesGetCount(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndEntityNotesGetCount(System.IAsyncResult result) {
            return base.Channel.EndEntityNotesGetCount(result);
        }
        
        private System.IAsyncResult OnBeginEntityNotesGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNotesGetCount(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityNotesGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNotesGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNotesGetCountCompleted(object state) {
            if ((this.EntityNotesGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNotesGetCountCompleted(this, new EntityNotesGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNotesGetCountAsync(string token, long entityId) {
            this.EntityNotesGetCountAsync(token, entityId, null);
        }
        
        public void EntityNotesGetCountAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityNotesGetCountDelegate == null)) {
                this.onBeginEntityNotesGetCountDelegate = new BeginOperationDelegate(this.OnBeginEntityNotesGetCount);
            }
            if ((this.onEndEntityNotesGetCountDelegate == null)) {
                this.onEndEntityNotesGetCountDelegate = new EndOperationDelegate(this.OnEndEntityNotesGetCount);
            }
            if ((this.onEntityNotesGetCountCompletedDelegate == null)) {
                this.onEntityNotesGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNotesGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNotesGetCountDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityNotesGetCountDelegate, this.onEntityNotesGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNotesGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNotesGetByPage(token, entityId, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityNoteCollectionResponse Mercury.Server.Application.IApplication.EndEntityNotesGetByPage(System.IAsyncResult result) {
            return base.Channel.EndEntityNotesGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginEntityNotesGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNotesGetByPage(token, entityId, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndEntityNotesGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.EntityNoteCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNotesGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNotesGetByPageCompleted(object state) {
            if ((this.EntityNotesGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNotesGetByPageCompleted(this, new EntityNotesGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNotesGetByPageAsync(string token, long entityId, int initialRow, int count) {
            this.EntityNotesGetByPageAsync(token, entityId, initialRow, count, null);
        }
        
        public void EntityNotesGetByPageAsync(string token, long entityId, int initialRow, int count, object userState) {
            if ((this.onBeginEntityNotesGetByPageDelegate == null)) {
                this.onBeginEntityNotesGetByPageDelegate = new BeginOperationDelegate(this.OnBeginEntityNotesGetByPage);
            }
            if ((this.onEndEntityNotesGetByPageDelegate == null)) {
                this.onEndEntityNotesGetByPageDelegate = new EndOperationDelegate(this.OnEndEntityNotesGetByPage);
            }
            if ((this.onEntityNotesGetByPageCompletedDelegate == null)) {
                this.onEntityNotesGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNotesGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNotesGetByPageDelegate, new object[] {
                        token,
                        entityId,
                        initialRow,
                        count}, this.onEndEntityNotesGetByPageDelegate, this.onEntityNotesGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteGetMostRecentByImportance(string token, long entityId, Mercury.Server.Application.NoteImportance importance, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteGetMostRecentByImportance(token, entityId, importance, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityNote Mercury.Server.Application.IApplication.EndEntityNoteGetMostRecentByImportance(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteGetMostRecentByImportance(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteGetMostRecentByImportance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            Mercury.Server.Application.NoteImportance importance = ((Mercury.Server.Application.NoteImportance)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteGetMostRecentByImportance(token, entityId, importance, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteGetMostRecentByImportance(System.IAsyncResult result) {
            Mercury.Server.Application.EntityNote retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteGetMostRecentByImportance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteGetMostRecentByImportanceCompleted(object state) {
            if ((this.EntityNoteGetMostRecentByImportanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteGetMostRecentByImportanceCompleted(this, new EntityNoteGetMostRecentByImportanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteGetMostRecentByImportanceAsync(string token, long entityId, Mercury.Server.Application.NoteImportance importance) {
            this.EntityNoteGetMostRecentByImportanceAsync(token, entityId, importance, null);
        }
        
        public void EntityNoteGetMostRecentByImportanceAsync(string token, long entityId, Mercury.Server.Application.NoteImportance importance, object userState) {
            if ((this.onBeginEntityNoteGetMostRecentByImportanceDelegate == null)) {
                this.onBeginEntityNoteGetMostRecentByImportanceDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteGetMostRecentByImportance);
            }
            if ((this.onEndEntityNoteGetMostRecentByImportanceDelegate == null)) {
                this.onEndEntityNoteGetMostRecentByImportanceDelegate = new EndOperationDelegate(this.OnEndEntityNoteGetMostRecentByImportance);
            }
            if ((this.onEntityNoteGetMostRecentByImportanceCompletedDelegate == null)) {
                this.onEntityNoteGetMostRecentByImportanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteGetMostRecentByImportanceCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteGetMostRecentByImportanceDelegate, new object[] {
                        token,
                        entityId,
                        importance}, this.onEndEntityNoteGetMostRecentByImportanceDelegate, this.onEntityNoteGetMostRecentByImportanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityNoteGetMostRecentByAllImportances(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityNoteGetMostRecentByAllImportances(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityNoteCollectionResponse Mercury.Server.Application.IApplication.EndEntityNoteGetMostRecentByAllImportances(System.IAsyncResult result) {
            return base.Channel.EndEntityNoteGetMostRecentByAllImportances(result);
        }
        
        private System.IAsyncResult OnBeginEntityNoteGetMostRecentByAllImportances(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityNoteGetMostRecentByAllImportances(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityNoteGetMostRecentByAllImportances(System.IAsyncResult result) {
            Mercury.Server.Application.EntityNoteCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityNoteGetMostRecentByAllImportances(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityNoteGetMostRecentByAllImportancesCompleted(object state) {
            if ((this.EntityNoteGetMostRecentByAllImportancesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityNoteGetMostRecentByAllImportancesCompleted(this, new EntityNoteGetMostRecentByAllImportancesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityNoteGetMostRecentByAllImportancesAsync(string token, long entityId) {
            this.EntityNoteGetMostRecentByAllImportancesAsync(token, entityId, null);
        }
        
        public void EntityNoteGetMostRecentByAllImportancesAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityNoteGetMostRecentByAllImportancesDelegate == null)) {
                this.onBeginEntityNoteGetMostRecentByAllImportancesDelegate = new BeginOperationDelegate(this.OnBeginEntityNoteGetMostRecentByAllImportances);
            }
            if ((this.onEndEntityNoteGetMostRecentByAllImportancesDelegate == null)) {
                this.onEndEntityNoteGetMostRecentByAllImportancesDelegate = new EndOperationDelegate(this.OnEndEntityNoteGetMostRecentByAllImportances);
            }
            if ((this.onEntityNoteGetMostRecentByAllImportancesCompletedDelegate == null)) {
                this.onEntityNoteGetMostRecentByAllImportancesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityNoteGetMostRecentByAllImportancesCompleted);
            }
            base.InvokeAsync(this.onBeginEntityNoteGetMostRecentByAllImportancesDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityNoteGetMostRecentByAllImportancesDelegate, this.onEntityNoteGetMostRecentByAllImportancesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginRevenueCodeDictionary(string token, string revenueCodePrefix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRevenueCodeDictionary(token, revenueCodePrefix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndRevenueCodeDictionary(System.IAsyncResult result) {
            return base.Channel.EndRevenueCodeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginRevenueCodeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string revenueCodePrefix = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginRevenueCodeDictionary(token, revenueCodePrefix, callback, asyncState);
        }
        
        private object[] OnEndRevenueCodeDictionary(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndRevenueCodeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRevenueCodeDictionaryCompleted(object state) {
            if ((this.RevenueCodeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RevenueCodeDictionaryCompleted(this, new RevenueCodeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RevenueCodeDictionaryAsync(string token, string revenueCodePrefix) {
            this.RevenueCodeDictionaryAsync(token, revenueCodePrefix, null);
        }
        
        public void RevenueCodeDictionaryAsync(string token, string revenueCodePrefix, object userState) {
            if ((this.onBeginRevenueCodeDictionaryDelegate == null)) {
                this.onBeginRevenueCodeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginRevenueCodeDictionary);
            }
            if ((this.onEndRevenueCodeDictionaryDelegate == null)) {
                this.onEndRevenueCodeDictionaryDelegate = new EndOperationDelegate(this.OnEndRevenueCodeDictionary);
            }
            if ((this.onRevenueCodeDictionaryCompletedDelegate == null)) {
                this.onRevenueCodeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRevenueCodeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginRevenueCodeDictionaryDelegate, new object[] {
                        token,
                        revenueCodePrefix}, this.onEndRevenueCodeDictionaryDelegate, this.onRevenueCodeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginBillTypeDictionary(string token, string billTypePrefix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBillTypeDictionary(token, billTypePrefix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndBillTypeDictionary(System.IAsyncResult result) {
            return base.Channel.EndBillTypeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginBillTypeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string billTypePrefix = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginBillTypeDictionary(token, billTypePrefix, callback, asyncState);
        }
        
        private object[] OnEndBillTypeDictionary(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndBillTypeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBillTypeDictionaryCompleted(object state) {
            if ((this.BillTypeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BillTypeDictionaryCompleted(this, new BillTypeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BillTypeDictionaryAsync(string token, string billTypePrefix) {
            this.BillTypeDictionaryAsync(token, billTypePrefix, null);
        }
        
        public void BillTypeDictionaryAsync(string token, string billTypePrefix, object userState) {
            if ((this.onBeginBillTypeDictionaryDelegate == null)) {
                this.onBeginBillTypeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginBillTypeDictionary);
            }
            if ((this.onEndBillTypeDictionaryDelegate == null)) {
                this.onEndBillTypeDictionaryDelegate = new EndOperationDelegate(this.OnEndBillTypeDictionary);
            }
            if ((this.onBillTypeDictionaryCompletedDelegate == null)) {
                this.onBillTypeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBillTypeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginBillTypeDictionaryDelegate, new object[] {
                        token,
                        billTypePrefix}, this.onEndBillTypeDictionaryDelegate, this.onBillTypeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginIcd9ProcedureCodeDictionary(string token, string icd9Icd9ProcedureCodePrefix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIcd9ProcedureCodeDictionary(token, icd9Icd9ProcedureCodePrefix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndIcd9ProcedureCodeDictionary(System.IAsyncResult result) {
            return base.Channel.EndIcd9ProcedureCodeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginIcd9ProcedureCodeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string icd9Icd9ProcedureCodePrefix = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginIcd9ProcedureCodeDictionary(token, icd9Icd9ProcedureCodePrefix, callback, asyncState);
        }
        
        private object[] OnEndIcd9ProcedureCodeDictionary(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndIcd9ProcedureCodeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIcd9ProcedureCodeDictionaryCompleted(object state) {
            if ((this.Icd9ProcedureCodeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Icd9ProcedureCodeDictionaryCompleted(this, new Icd9ProcedureCodeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Icd9ProcedureCodeDictionaryAsync(string token, string icd9Icd9ProcedureCodePrefix) {
            this.Icd9ProcedureCodeDictionaryAsync(token, icd9Icd9ProcedureCodePrefix, null);
        }
        
        public void Icd9ProcedureCodeDictionaryAsync(string token, string icd9Icd9ProcedureCodePrefix, object userState) {
            if ((this.onBeginIcd9ProcedureCodeDictionaryDelegate == null)) {
                this.onBeginIcd9ProcedureCodeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginIcd9ProcedureCodeDictionary);
            }
            if ((this.onEndIcd9ProcedureCodeDictionaryDelegate == null)) {
                this.onEndIcd9ProcedureCodeDictionaryDelegate = new EndOperationDelegate(this.OnEndIcd9ProcedureCodeDictionary);
            }
            if ((this.onIcd9ProcedureCodeDictionaryCompletedDelegate == null)) {
                this.onIcd9ProcedureCodeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIcd9ProcedureCodeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginIcd9ProcedureCodeDictionaryDelegate, new object[] {
                        token,
                        icd9Icd9ProcedureCodePrefix}, this.onEndIcd9ProcedureCodeDictionaryDelegate, this.onIcd9ProcedureCodeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginActionsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActionsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ActionCollectionResponse Mercury.Server.Application.IApplication.EndActionsAvailable(System.IAsyncResult result) {
            return base.Channel.EndActionsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginActionsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginActionsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndActionsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.ActionCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndActionsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActionsAvailableCompleted(object state) {
            if ((this.ActionsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActionsAvailableCompleted(this, new ActionsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActionsAvailableAsync(string token) {
            this.ActionsAvailableAsync(token, null);
        }
        
        public void ActionsAvailableAsync(string token, object userState) {
            if ((this.onBeginActionsAvailableDelegate == null)) {
                this.onBeginActionsAvailableDelegate = new BeginOperationDelegate(this.OnBeginActionsAvailable);
            }
            if ((this.onEndActionsAvailableDelegate == null)) {
                this.onEndActionsAvailableDelegate = new EndOperationDelegate(this.OnEndActionsAvailable);
            }
            if ((this.onActionsAvailableCompletedDelegate == null)) {
                this.onActionsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActionsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginActionsAvailableDelegate, new object[] {
                        token}, this.onEndActionsAvailableDelegate, this.onActionsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizationTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizationTypesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuthorizationTypeCollectionResponse Mercury.Server.Application.IApplication.EndAuthorizationTypesAvailable(System.IAsyncResult result) {
            return base.Channel.EndAuthorizationTypesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizationTypesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizationTypesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndAuthorizationTypesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.AuthorizationTypeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizationTypesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizationTypesAvailableCompleted(object state) {
            if ((this.AuthorizationTypesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizationTypesAvailableCompleted(this, new AuthorizationTypesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizationTypesAvailableAsync(string token) {
            this.AuthorizationTypesAvailableAsync(token, null);
        }
        
        public void AuthorizationTypesAvailableAsync(string token, object userState) {
            if ((this.onBeginAuthorizationTypesAvailableDelegate == null)) {
                this.onBeginAuthorizationTypesAvailableDelegate = new BeginOperationDelegate(this.OnBeginAuthorizationTypesAvailable);
            }
            if ((this.onEndAuthorizationTypesAvailableDelegate == null)) {
                this.onEndAuthorizationTypesAvailableDelegate = new EndOperationDelegate(this.OnEndAuthorizationTypesAvailable);
            }
            if ((this.onAuthorizationTypesAvailableCompletedDelegate == null)) {
                this.onAuthorizationTypesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizationTypesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizationTypesAvailableDelegate, new object[] {
                        token}, this.onEndAuthorizationTypesAvailableDelegate, this.onAuthorizationTypesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizationTypeGet(string token, long authorizationTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizationTypeGet(token, authorizationTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuthorizationType Mercury.Server.Application.IApplication.EndAuthorizationTypeGet(System.IAsyncResult result) {
            return base.Channel.EndAuthorizationTypeGet(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizationTypeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long authorizationTypeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizationTypeGet(token, authorizationTypeId, callback, asyncState);
        }
        
        private object[] OnEndAuthorizationTypeGet(System.IAsyncResult result) {
            Mercury.Server.Application.AuthorizationType retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizationTypeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizationTypeGetCompleted(object state) {
            if ((this.AuthorizationTypeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizationTypeGetCompleted(this, new AuthorizationTypeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizationTypeGetAsync(string token, long authorizationTypeId) {
            this.AuthorizationTypeGetAsync(token, authorizationTypeId, null);
        }
        
        public void AuthorizationTypeGetAsync(string token, long authorizationTypeId, object userState) {
            if ((this.onBeginAuthorizationTypeGetDelegate == null)) {
                this.onBeginAuthorizationTypeGetDelegate = new BeginOperationDelegate(this.OnBeginAuthorizationTypeGet);
            }
            if ((this.onEndAuthorizationTypeGetDelegate == null)) {
                this.onEndAuthorizationTypeGetDelegate = new EndOperationDelegate(this.OnEndAuthorizationTypeGet);
            }
            if ((this.onAuthorizationTypeGetCompletedDelegate == null)) {
                this.onAuthorizationTypeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizationTypeGetCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizationTypeGetDelegate, new object[] {
                        token,
                        authorizationTypeId}, this.onEndAuthorizationTypeGetDelegate, this.onAuthorizationTypeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberAuthorizationsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberAuthorizationsGetCount(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMemberAuthorizationsGetCount(System.IAsyncResult result) {
            return base.Channel.EndMemberAuthorizationsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginMemberAuthorizationsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberAuthorizationsGetCount(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberAuthorizationsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberAuthorizationsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberAuthorizationsGetCountCompleted(object state) {
            if ((this.MemberAuthorizationsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberAuthorizationsGetCountCompleted(this, new MemberAuthorizationsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberAuthorizationsGetCountAsync(string token, long memberId) {
            this.MemberAuthorizationsGetCountAsync(token, memberId, null);
        }
        
        public void MemberAuthorizationsGetCountAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberAuthorizationsGetCountDelegate == null)) {
                this.onBeginMemberAuthorizationsGetCountDelegate = new BeginOperationDelegate(this.OnBeginMemberAuthorizationsGetCount);
            }
            if ((this.onEndMemberAuthorizationsGetCountDelegate == null)) {
                this.onEndMemberAuthorizationsGetCountDelegate = new EndOperationDelegate(this.OnEndMemberAuthorizationsGetCount);
            }
            if ((this.onMemberAuthorizationsGetCountCompletedDelegate == null)) {
                this.onMemberAuthorizationsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberAuthorizationsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginMemberAuthorizationsGetCountDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberAuthorizationsGetCountDelegate, this.onMemberAuthorizationsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberAuthorizationsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberAuthorizationsGetByPage(token, memberId, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuthorizationCollectionResponse Mercury.Server.Application.IApplication.EndMemberAuthorizationsGetByPage(System.IAsyncResult result) {
            return base.Channel.EndMemberAuthorizationsGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginMemberAuthorizationsGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberAuthorizationsGetByPage(token, memberId, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndMemberAuthorizationsGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.AuthorizationCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberAuthorizationsGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberAuthorizationsGetByPageCompleted(object state) {
            if ((this.MemberAuthorizationsGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberAuthorizationsGetByPageCompleted(this, new MemberAuthorizationsGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberAuthorizationsGetByPageAsync(string token, long memberId, int initialRow, int count) {
            this.MemberAuthorizationsGetByPageAsync(token, memberId, initialRow, count, null);
        }
        
        public void MemberAuthorizationsGetByPageAsync(string token, long memberId, int initialRow, int count, object userState) {
            if ((this.onBeginMemberAuthorizationsGetByPageDelegate == null)) {
                this.onBeginMemberAuthorizationsGetByPageDelegate = new BeginOperationDelegate(this.OnBeginMemberAuthorizationsGetByPage);
            }
            if ((this.onEndMemberAuthorizationsGetByPageDelegate == null)) {
                this.onEndMemberAuthorizationsGetByPageDelegate = new EndOperationDelegate(this.OnEndMemberAuthorizationsGetByPage);
            }
            if ((this.onMemberAuthorizationsGetByPageCompletedDelegate == null)) {
                this.onMemberAuthorizationsGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberAuthorizationsGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginMemberAuthorizationsGetByPageDelegate, new object[] {
                        token,
                        memberId,
                        initialRow,
                        count}, this.onEndMemberAuthorizationsGetByPageDelegate, this.onMemberAuthorizationsGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizationLineGetByAuthorization(string token, long authorizationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizationLineGetByAuthorization(token, authorizationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuthorizationLineCollectionResponse Mercury.Server.Application.IApplication.EndAuthorizationLineGetByAuthorization(System.IAsyncResult result) {
            return base.Channel.EndAuthorizationLineGetByAuthorization(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizationLineGetByAuthorization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long authorizationId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizationLineGetByAuthorization(token, authorizationId, callback, asyncState);
        }
        
        private object[] OnEndAuthorizationLineGetByAuthorization(System.IAsyncResult result) {
            Mercury.Server.Application.AuthorizationLineCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizationLineGetByAuthorization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizationLineGetByAuthorizationCompleted(object state) {
            if ((this.AuthorizationLineGetByAuthorizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizationLineGetByAuthorizationCompleted(this, new AuthorizationLineGetByAuthorizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizationLineGetByAuthorizationAsync(string token, long authorizationId) {
            this.AuthorizationLineGetByAuthorizationAsync(token, authorizationId, null);
        }
        
        public void AuthorizationLineGetByAuthorizationAsync(string token, long authorizationId, object userState) {
            if ((this.onBeginAuthorizationLineGetByAuthorizationDelegate == null)) {
                this.onBeginAuthorizationLineGetByAuthorizationDelegate = new BeginOperationDelegate(this.OnBeginAuthorizationLineGetByAuthorization);
            }
            if ((this.onEndAuthorizationLineGetByAuthorizationDelegate == null)) {
                this.onEndAuthorizationLineGetByAuthorizationDelegate = new EndOperationDelegate(this.OnEndAuthorizationLineGetByAuthorization);
            }
            if ((this.onAuthorizationLineGetByAuthorizationCompletedDelegate == null)) {
                this.onAuthorizationLineGetByAuthorizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizationLineGetByAuthorizationCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizationLineGetByAuthorizationDelegate, new object[] {
                        token,
                        authorizationId}, this.onEndAuthorizationLineGetByAuthorizationDelegate, this.onAuthorizationLineGetByAuthorizationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizedServicesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizedServicesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuthorizedServiceCollectionResponse Mercury.Server.Application.IApplication.EndAuthorizedServicesAvailable(System.IAsyncResult result) {
            return base.Channel.EndAuthorizedServicesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizedServicesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizedServicesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndAuthorizedServicesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.AuthorizedServiceCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizedServicesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizedServicesAvailableCompleted(object state) {
            if ((this.AuthorizedServicesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizedServicesAvailableCompleted(this, new AuthorizedServicesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizedServicesAvailableAsync(string token) {
            this.AuthorizedServicesAvailableAsync(token, null);
        }
        
        public void AuthorizedServicesAvailableAsync(string token, object userState) {
            if ((this.onBeginAuthorizedServicesAvailableDelegate == null)) {
                this.onBeginAuthorizedServicesAvailableDelegate = new BeginOperationDelegate(this.OnBeginAuthorizedServicesAvailable);
            }
            if ((this.onEndAuthorizedServicesAvailableDelegate == null)) {
                this.onEndAuthorizedServicesAvailableDelegate = new EndOperationDelegate(this.OnEndAuthorizedServicesAvailable);
            }
            if ((this.onAuthorizedServicesAvailableCompletedDelegate == null)) {
                this.onAuthorizedServicesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizedServicesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizedServicesAvailableDelegate, new object[] {
                        token}, this.onEndAuthorizedServicesAvailableDelegate, this.onAuthorizedServicesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizedServiceGet(string token, long metricId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizedServiceGet(token, metricId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuthorizedService Mercury.Server.Application.IApplication.EndAuthorizedServiceGet(System.IAsyncResult result) {
            return base.Channel.EndAuthorizedServiceGet(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizedServiceGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long metricId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizedServiceGet(token, metricId, callback, asyncState);
        }
        
        private object[] OnEndAuthorizedServiceGet(System.IAsyncResult result) {
            Mercury.Server.Application.AuthorizedService retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizedServiceGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizedServiceGetCompleted(object state) {
            if ((this.AuthorizedServiceGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizedServiceGetCompleted(this, new AuthorizedServiceGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizedServiceGetAsync(string token, long metricId) {
            this.AuthorizedServiceGetAsync(token, metricId, null);
        }
        
        public void AuthorizedServiceGetAsync(string token, long metricId, object userState) {
            if ((this.onBeginAuthorizedServiceGetDelegate == null)) {
                this.onBeginAuthorizedServiceGetDelegate = new BeginOperationDelegate(this.OnBeginAuthorizedServiceGet);
            }
            if ((this.onEndAuthorizedServiceGetDelegate == null)) {
                this.onEndAuthorizedServiceGetDelegate = new EndOperationDelegate(this.OnEndAuthorizedServiceGet);
            }
            if ((this.onAuthorizedServiceGetCompletedDelegate == null)) {
                this.onAuthorizedServiceGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizedServiceGetCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizedServiceGetDelegate, new object[] {
                        token,
                        metricId}, this.onEndAuthorizedServiceGetDelegate, this.onAuthorizedServiceGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizedServiceSave(string token, Mercury.Server.Application.AuthorizedService metric, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizedServiceSave(token, metric, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndAuthorizedServiceSave(System.IAsyncResult result) {
            return base.Channel.EndAuthorizedServiceSave(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizedServiceSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.AuthorizedService metric = ((Mercury.Server.Application.AuthorizedService)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizedServiceSave(token, metric, callback, asyncState);
        }
        
        private object[] OnEndAuthorizedServiceSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizedServiceSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizedServiceSaveCompleted(object state) {
            if ((this.AuthorizedServiceSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizedServiceSaveCompleted(this, new AuthorizedServiceSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizedServiceSaveAsync(string token, Mercury.Server.Application.AuthorizedService metric) {
            this.AuthorizedServiceSaveAsync(token, metric, null);
        }
        
        public void AuthorizedServiceSaveAsync(string token, Mercury.Server.Application.AuthorizedService metric, object userState) {
            if ((this.onBeginAuthorizedServiceSaveDelegate == null)) {
                this.onBeginAuthorizedServiceSaveDelegate = new BeginOperationDelegate(this.OnBeginAuthorizedServiceSave);
            }
            if ((this.onEndAuthorizedServiceSaveDelegate == null)) {
                this.onEndAuthorizedServiceSaveDelegate = new EndOperationDelegate(this.OnEndAuthorizedServiceSave);
            }
            if ((this.onAuthorizedServiceSaveCompletedDelegate == null)) {
                this.onAuthorizedServiceSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizedServiceSaveCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizedServiceSaveDelegate, new object[] {
                        token,
                        metric}, this.onEndAuthorizedServiceSaveDelegate, this.onAuthorizedServiceSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginAuthorizedServicePreview(string token, Mercury.Server.Application.AuthorizedService authorizedService, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizedServicePreview(token, authorizedService, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse Mercury.Server.Application.IApplication.EndAuthorizedServicePreview(System.IAsyncResult result) {
            return base.Channel.EndAuthorizedServicePreview(result);
        }
        
        private System.IAsyncResult OnBeginAuthorizedServicePreview(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.AuthorizedService authorizedService = ((Mercury.Server.Application.AuthorizedService)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginAuthorizedServicePreview(token, authorizedService, callback, asyncState);
        }
        
        private object[] OnEndAuthorizedServicePreview(System.IAsyncResult result) {
            Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndAuthorizedServicePreview(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizedServicePreviewCompleted(object state) {
            if ((this.AuthorizedServicePreviewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizedServicePreviewCompleted(this, new AuthorizedServicePreviewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizedServicePreviewAsync(string token, Mercury.Server.Application.AuthorizedService authorizedService) {
            this.AuthorizedServicePreviewAsync(token, authorizedService, null);
        }
        
        public void AuthorizedServicePreviewAsync(string token, Mercury.Server.Application.AuthorizedService authorizedService, object userState) {
            if ((this.onBeginAuthorizedServicePreviewDelegate == null)) {
                this.onBeginAuthorizedServicePreviewDelegate = new BeginOperationDelegate(this.OnBeginAuthorizedServicePreview);
            }
            if ((this.onEndAuthorizedServicePreviewDelegate == null)) {
                this.onEndAuthorizedServicePreviewDelegate = new EndOperationDelegate(this.OnEndAuthorizedServicePreview);
            }
            if ((this.onAuthorizedServicePreviewCompletedDelegate == null)) {
                this.onAuthorizedServicePreviewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizedServicePreviewCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizedServicePreviewDelegate, new object[] {
                        token,
                        authorizedService}, this.onEndAuthorizedServicePreviewDelegate, this.onAuthorizedServicePreviewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberAuthorizedServicesGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberAuthorizedServicesGetCount(token, memberId, showHidden, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMemberAuthorizedServicesGetCount(System.IAsyncResult result) {
            return base.Channel.EndMemberAuthorizedServicesGetCount(result);
        }
        
        private System.IAsyncResult OnBeginMemberAuthorizedServicesGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            bool showHidden = ((bool)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberAuthorizedServicesGetCount(token, memberId, showHidden, callback, asyncState);
        }
        
        private object[] OnEndMemberAuthorizedServicesGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberAuthorizedServicesGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberAuthorizedServicesGetCountCompleted(object state) {
            if ((this.MemberAuthorizedServicesGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberAuthorizedServicesGetCountCompleted(this, new MemberAuthorizedServicesGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberAuthorizedServicesGetCountAsync(string token, long memberId, bool showHidden) {
            this.MemberAuthorizedServicesGetCountAsync(token, memberId, showHidden, null);
        }
        
        public void MemberAuthorizedServicesGetCountAsync(string token, long memberId, bool showHidden, object userState) {
            if ((this.onBeginMemberAuthorizedServicesGetCountDelegate == null)) {
                this.onBeginMemberAuthorizedServicesGetCountDelegate = new BeginOperationDelegate(this.OnBeginMemberAuthorizedServicesGetCount);
            }
            if ((this.onEndMemberAuthorizedServicesGetCountDelegate == null)) {
                this.onEndMemberAuthorizedServicesGetCountDelegate = new EndOperationDelegate(this.OnEndMemberAuthorizedServicesGetCount);
            }
            if ((this.onMemberAuthorizedServicesGetCountCompletedDelegate == null)) {
                this.onMemberAuthorizedServicesGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberAuthorizedServicesGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginMemberAuthorizedServicesGetCountDelegate, new object[] {
                        token,
                        memberId,
                        showHidden}, this.onEndMemberAuthorizedServicesGetCountDelegate, this.onMemberAuthorizedServicesGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberAuthorizedServicesGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberAuthorizedServicesGetByPage(token, memberId, initialRow, count, showHidden, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse Mercury.Server.Application.IApplication.EndMemberAuthorizedServicesGetByPage(System.IAsyncResult result) {
            return base.Channel.EndMemberAuthorizedServicesGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginMemberAuthorizedServicesGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            bool showHidden = ((bool)(inValues[4]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberAuthorizedServicesGetByPage(token, memberId, initialRow, count, showHidden, callback, asyncState);
        }
        
        private object[] OnEndMemberAuthorizedServicesGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberAuthorizedServicesGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberAuthorizedServicesGetByPageCompleted(object state) {
            if ((this.MemberAuthorizedServicesGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberAuthorizedServicesGetByPageCompleted(this, new MemberAuthorizedServicesGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberAuthorizedServicesGetByPageAsync(string token, long memberId, int initialRow, int count, bool showHidden) {
            this.MemberAuthorizedServicesGetByPageAsync(token, memberId, initialRow, count, showHidden, null);
        }
        
        public void MemberAuthorizedServicesGetByPageAsync(string token, long memberId, int initialRow, int count, bool showHidden, object userState) {
            if ((this.onBeginMemberAuthorizedServicesGetByPageDelegate == null)) {
                this.onBeginMemberAuthorizedServicesGetByPageDelegate = new BeginOperationDelegate(this.OnBeginMemberAuthorizedServicesGetByPage);
            }
            if ((this.onEndMemberAuthorizedServicesGetByPageDelegate == null)) {
                this.onEndMemberAuthorizedServicesGetByPageDelegate = new EndOperationDelegate(this.OnEndMemberAuthorizedServicesGetByPage);
            }
            if ((this.onMemberAuthorizedServicesGetByPageCompletedDelegate == null)) {
                this.onMemberAuthorizedServicesGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberAuthorizedServicesGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginMemberAuthorizedServicesGetByPageDelegate, new object[] {
                        token,
                        memberId,
                        initialRow,
                        count,
                        showHidden}, this.onEndMemberAuthorizedServicesGetByPageDelegate, this.onMemberAuthorizedServicesGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberAuthorizedServiceDetailsGet(string token, long memberAuthorizedServiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberAuthorizedServiceDetailsGet(token, memberAuthorizedServiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse Mercury.Server.Application.IApplication.EndMemberAuthorizedServiceDetailsGet(System.IAsyncResult result) {
            return base.Channel.EndMemberAuthorizedServiceDetailsGet(result);
        }
        
        private System.IAsyncResult OnBeginMemberAuthorizedServiceDetailsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberAuthorizedServiceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberAuthorizedServiceDetailsGet(token, memberAuthorizedServiceId, callback, asyncState);
        }
        
        private object[] OnEndMemberAuthorizedServiceDetailsGet(System.IAsyncResult result) {
            Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberAuthorizedServiceDetailsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberAuthorizedServiceDetailsGetCompleted(object state) {
            if ((this.MemberAuthorizedServiceDetailsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberAuthorizedServiceDetailsGetCompleted(this, new MemberAuthorizedServiceDetailsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberAuthorizedServiceDetailsGetAsync(string token, long memberAuthorizedServiceId) {
            this.MemberAuthorizedServiceDetailsGetAsync(token, memberAuthorizedServiceId, null);
        }
        
        public void MemberAuthorizedServiceDetailsGetAsync(string token, long memberAuthorizedServiceId, object userState) {
            if ((this.onBeginMemberAuthorizedServiceDetailsGetDelegate == null)) {
                this.onBeginMemberAuthorizedServiceDetailsGetDelegate = new BeginOperationDelegate(this.OnBeginMemberAuthorizedServiceDetailsGet);
            }
            if ((this.onEndMemberAuthorizedServiceDetailsGetDelegate == null)) {
                this.onEndMemberAuthorizedServiceDetailsGetDelegate = new EndOperationDelegate(this.OnEndMemberAuthorizedServiceDetailsGet);
            }
            if ((this.onMemberAuthorizedServiceDetailsGetCompletedDelegate == null)) {
                this.onMemberAuthorizedServiceDetailsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberAuthorizedServiceDetailsGetCompleted);
            }
            base.InvokeAsync(this.onBeginMemberAuthorizedServiceDetailsGetDelegate, new object[] {
                        token,
                        memberAuthorizedServiceId}, this.onEndMemberAuthorizedServiceDetailsGetDelegate, this.onMemberAuthorizedServiceDetailsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberClaimsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberClaimsGetCount(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMemberClaimsGetCount(System.IAsyncResult result) {
            return base.Channel.EndMemberClaimsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginMemberClaimsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberClaimsGetCount(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberClaimsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberClaimsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberClaimsGetCountCompleted(object state) {
            if ((this.MemberClaimsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberClaimsGetCountCompleted(this, new MemberClaimsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberClaimsGetCountAsync(string token, long memberId) {
            this.MemberClaimsGetCountAsync(token, memberId, null);
        }
        
        public void MemberClaimsGetCountAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberClaimsGetCountDelegate == null)) {
                this.onBeginMemberClaimsGetCountDelegate = new BeginOperationDelegate(this.OnBeginMemberClaimsGetCount);
            }
            if ((this.onEndMemberClaimsGetCountDelegate == null)) {
                this.onEndMemberClaimsGetCountDelegate = new EndOperationDelegate(this.OnEndMemberClaimsGetCount);
            }
            if ((this.onMemberClaimsGetCountCompletedDelegate == null)) {
                this.onMemberClaimsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberClaimsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginMemberClaimsGetCountDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberClaimsGetCountDelegate, this.onMemberClaimsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberClaimsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberClaimsGetByPage(token, memberId, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ClaimCollectionResponse Mercury.Server.Application.IApplication.EndMemberClaimsGetByPage(System.IAsyncResult result) {
            return base.Channel.EndMemberClaimsGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginMemberClaimsGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberClaimsGetByPage(token, memberId, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndMemberClaimsGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.ClaimCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberClaimsGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberClaimsGetByPageCompleted(object state) {
            if ((this.MemberClaimsGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberClaimsGetByPageCompleted(this, new MemberClaimsGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberClaimsGetByPageAsync(string token, long memberId, int initialRow, int count) {
            this.MemberClaimsGetByPageAsync(token, memberId, initialRow, count, null);
        }
        
        public void MemberClaimsGetByPageAsync(string token, long memberId, int initialRow, int count, object userState) {
            if ((this.onBeginMemberClaimsGetByPageDelegate == null)) {
                this.onBeginMemberClaimsGetByPageDelegate = new BeginOperationDelegate(this.OnBeginMemberClaimsGetByPage);
            }
            if ((this.onEndMemberClaimsGetByPageDelegate == null)) {
                this.onEndMemberClaimsGetByPageDelegate = new EndOperationDelegate(this.OnEndMemberClaimsGetByPage);
            }
            if ((this.onMemberClaimsGetByPageCompletedDelegate == null)) {
                this.onMemberClaimsGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberClaimsGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginMemberClaimsGetByPageDelegate, new object[] {
                        token,
                        memberId,
                        initialRow,
                        count}, this.onEndMemberClaimsGetByPageDelegate, this.onMemberClaimsGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginClaimLinesGet(string token, long claimId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClaimLinesGet(token, claimId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ClaimLineCollectionResponse Mercury.Server.Application.IApplication.EndClaimLinesGet(System.IAsyncResult result) {
            return base.Channel.EndClaimLinesGet(result);
        }
        
        private System.IAsyncResult OnBeginClaimLinesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long claimId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginClaimLinesGet(token, claimId, callback, asyncState);
        }
        
        private object[] OnEndClaimLinesGet(System.IAsyncResult result) {
            Mercury.Server.Application.ClaimLineCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndClaimLinesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClaimLinesGetCompleted(object state) {
            if ((this.ClaimLinesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClaimLinesGetCompleted(this, new ClaimLinesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClaimLinesGetAsync(string token, long claimId) {
            this.ClaimLinesGetAsync(token, claimId, null);
        }
        
        public void ClaimLinesGetAsync(string token, long claimId, object userState) {
            if ((this.onBeginClaimLinesGetDelegate == null)) {
                this.onBeginClaimLinesGetDelegate = new BeginOperationDelegate(this.OnBeginClaimLinesGet);
            }
            if ((this.onEndClaimLinesGetDelegate == null)) {
                this.onEndClaimLinesGetDelegate = new EndOperationDelegate(this.OnEndClaimLinesGet);
            }
            if ((this.onClaimLinesGetCompletedDelegate == null)) {
                this.onClaimLinesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClaimLinesGetCompleted);
            }
            base.InvokeAsync(this.onBeginClaimLinesGetDelegate, new object[] {
                        token,
                        claimId}, this.onEndClaimLinesGetDelegate, this.onClaimLinesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberPharmacyClaimsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberPharmacyClaimsGetCount(token, memberId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long Mercury.Server.Application.IApplication.EndMemberPharmacyClaimsGetCount(System.IAsyncResult result) {
            return base.Channel.EndMemberPharmacyClaimsGetCount(result);
        }
        
        private System.IAsyncResult OnBeginMemberPharmacyClaimsGetCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberPharmacyClaimsGetCount(token, memberId, callback, asyncState);
        }
        
        private object[] OnEndMemberPharmacyClaimsGetCount(System.IAsyncResult result) {
            long retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberPharmacyClaimsGetCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberPharmacyClaimsGetCountCompleted(object state) {
            if ((this.MemberPharmacyClaimsGetCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberPharmacyClaimsGetCountCompleted(this, new MemberPharmacyClaimsGetCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberPharmacyClaimsGetCountAsync(string token, long memberId) {
            this.MemberPharmacyClaimsGetCountAsync(token, memberId, null);
        }
        
        public void MemberPharmacyClaimsGetCountAsync(string token, long memberId, object userState) {
            if ((this.onBeginMemberPharmacyClaimsGetCountDelegate == null)) {
                this.onBeginMemberPharmacyClaimsGetCountDelegate = new BeginOperationDelegate(this.OnBeginMemberPharmacyClaimsGetCount);
            }
            if ((this.onEndMemberPharmacyClaimsGetCountDelegate == null)) {
                this.onEndMemberPharmacyClaimsGetCountDelegate = new EndOperationDelegate(this.OnEndMemberPharmacyClaimsGetCount);
            }
            if ((this.onMemberPharmacyClaimsGetCountCompletedDelegate == null)) {
                this.onMemberPharmacyClaimsGetCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberPharmacyClaimsGetCountCompleted);
            }
            base.InvokeAsync(this.onBeginMemberPharmacyClaimsGetCountDelegate, new object[] {
                        token,
                        memberId}, this.onEndMemberPharmacyClaimsGetCountDelegate, this.onMemberPharmacyClaimsGetCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginMemberPharmacyClaimsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMemberPharmacyClaimsGetByPage(token, memberId, initialRow, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PharmacyClaimCollectionResponse Mercury.Server.Application.IApplication.EndMemberPharmacyClaimsGetByPage(System.IAsyncResult result) {
            return base.Channel.EndMemberPharmacyClaimsGetByPage(result);
        }
        
        private System.IAsyncResult OnBeginMemberPharmacyClaimsGetByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long memberId = ((long)(inValues[1]));
            int initialRow = ((int)(inValues[2]));
            int count = ((int)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginMemberPharmacyClaimsGetByPage(token, memberId, initialRow, count, callback, asyncState);
        }
        
        private object[] OnEndMemberPharmacyClaimsGetByPage(System.IAsyncResult result) {
            Mercury.Server.Application.PharmacyClaimCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndMemberPharmacyClaimsGetByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMemberPharmacyClaimsGetByPageCompleted(object state) {
            if ((this.MemberPharmacyClaimsGetByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MemberPharmacyClaimsGetByPageCompleted(this, new MemberPharmacyClaimsGetByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MemberPharmacyClaimsGetByPageAsync(string token, long memberId, int initialRow, int count) {
            this.MemberPharmacyClaimsGetByPageAsync(token, memberId, initialRow, count, null);
        }
        
        public void MemberPharmacyClaimsGetByPageAsync(string token, long memberId, int initialRow, int count, object userState) {
            if ((this.onBeginMemberPharmacyClaimsGetByPageDelegate == null)) {
                this.onBeginMemberPharmacyClaimsGetByPageDelegate = new BeginOperationDelegate(this.OnBeginMemberPharmacyClaimsGetByPage);
            }
            if ((this.onEndMemberPharmacyClaimsGetByPageDelegate == null)) {
                this.onEndMemberPharmacyClaimsGetByPageDelegate = new EndOperationDelegate(this.OnEndMemberPharmacyClaimsGetByPage);
            }
            if ((this.onMemberPharmacyClaimsGetByPageCompletedDelegate == null)) {
                this.onMemberPharmacyClaimsGetByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMemberPharmacyClaimsGetByPageCompleted);
            }
            base.InvokeAsync(this.onBeginMemberPharmacyClaimsGetByPageDelegate, new object[] {
                        token,
                        memberId,
                        initialRow,
                        count}, this.onEndMemberPharmacyClaimsGetByPageDelegate, this.onMemberPharmacyClaimsGetByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityGet(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityGet(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Entity Mercury.Server.Application.IApplication.EndEntityGet(System.IAsyncResult result) {
            return base.Channel.EndEntityGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityGet(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityGet(System.IAsyncResult result) {
            Mercury.Server.Application.Entity retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityGetCompleted(object state) {
            if ((this.EntityGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityGetCompleted(this, new EntityGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityGetAsync(string token, long entityId) {
            this.EntityGetAsync(token, entityId, null);
        }
        
        public void EntityGetAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityGetDelegate == null)) {
                this.onBeginEntityGetDelegate = new BeginOperationDelegate(this.OnBeginEntityGet);
            }
            if ((this.onEndEntityGetDelegate == null)) {
                this.onEndEntityGetDelegate = new EndOperationDelegate(this.OnEndEntityGet);
            }
            if ((this.onEntityGetCompletedDelegate == null)) {
                this.onEntityGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityGetDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityGetDelegate, this.onEntityGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityAddressGet(string token, long entityAddressId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityAddressGet(token, entityAddressId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityAddress Mercury.Server.Application.IApplication.EndEntityAddressGet(System.IAsyncResult result) {
            return base.Channel.EndEntityAddressGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityAddressGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityAddressId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityAddressGet(token, entityAddressId, callback, asyncState);
        }
        
        private object[] OnEndEntityAddressGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityAddress retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityAddressGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityAddressGetCompleted(object state) {
            if ((this.EntityAddressGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityAddressGetCompleted(this, new EntityAddressGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityAddressGetAsync(string token, long entityAddressId) {
            this.EntityAddressGetAsync(token, entityAddressId, null);
        }
        
        public void EntityAddressGetAsync(string token, long entityAddressId, object userState) {
            if ((this.onBeginEntityAddressGetDelegate == null)) {
                this.onBeginEntityAddressGetDelegate = new BeginOperationDelegate(this.OnBeginEntityAddressGet);
            }
            if ((this.onEndEntityAddressGetDelegate == null)) {
                this.onEndEntityAddressGetDelegate = new EndOperationDelegate(this.OnEndEntityAddressGet);
            }
            if ((this.onEntityAddressGetCompletedDelegate == null)) {
                this.onEntityAddressGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityAddressGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityAddressGetDelegate, new object[] {
                        token,
                        entityAddressId}, this.onEndEntityAddressGetDelegate, this.onEntityAddressGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityAddressGetByTypeDate(string token, long entityId, Mercury.Server.Application.EntityAddressType addressType, System.DateTime forDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityAddressGetByTypeDate(token, entityId, addressType, forDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityAddress Mercury.Server.Application.IApplication.EndEntityAddressGetByTypeDate(System.IAsyncResult result) {
            return base.Channel.EndEntityAddressGetByTypeDate(result);
        }
        
        private System.IAsyncResult OnBeginEntityAddressGetByTypeDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            Mercury.Server.Application.EntityAddressType addressType = ((Mercury.Server.Application.EntityAddressType)(inValues[2]));
            System.DateTime forDate = ((System.DateTime)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityAddressGetByTypeDate(token, entityId, addressType, forDate, callback, asyncState);
        }
        
        private object[] OnEndEntityAddressGetByTypeDate(System.IAsyncResult result) {
            Mercury.Server.Application.EntityAddress retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityAddressGetByTypeDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityAddressGetByTypeDateCompleted(object state) {
            if ((this.EntityAddressGetByTypeDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityAddressGetByTypeDateCompleted(this, new EntityAddressGetByTypeDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityAddressGetByTypeDateAsync(string token, long entityId, Mercury.Server.Application.EntityAddressType addressType, System.DateTime forDate) {
            this.EntityAddressGetByTypeDateAsync(token, entityId, addressType, forDate, null);
        }
        
        public void EntityAddressGetByTypeDateAsync(string token, long entityId, Mercury.Server.Application.EntityAddressType addressType, System.DateTime forDate, object userState) {
            if ((this.onBeginEntityAddressGetByTypeDateDelegate == null)) {
                this.onBeginEntityAddressGetByTypeDateDelegate = new BeginOperationDelegate(this.OnBeginEntityAddressGetByTypeDate);
            }
            if ((this.onEndEntityAddressGetByTypeDateDelegate == null)) {
                this.onEndEntityAddressGetByTypeDateDelegate = new EndOperationDelegate(this.OnEndEntityAddressGetByTypeDate);
            }
            if ((this.onEntityAddressGetByTypeDateCompletedDelegate == null)) {
                this.onEntityAddressGetByTypeDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityAddressGetByTypeDateCompleted);
            }
            base.InvokeAsync(this.onBeginEntityAddressGetByTypeDateDelegate, new object[] {
                        token,
                        entityId,
                        addressType,
                        forDate}, this.onEndEntityAddressGetByTypeDateDelegate, this.onEntityAddressGetByTypeDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEntityAddressesGet(string token, long entityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityAddressesGet(token, entityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EntityAddressCollectionResponse Mercury.Server.Application.IApplication.EndEntityAddressesGet(System.IAsyncResult result) {
            return base.Channel.EndEntityAddressesGet(result);
        }
        
        private System.IAsyncResult OnBeginEntityAddressesGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long entityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEntityAddressesGet(token, entityId, callback, asyncState);
        }
        
        private object[] OnEndEntityAddressesGet(System.IAsyncResult result) {
            Mercury.Server.Application.EntityAddressCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEntityAddressesGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityAddressesGetCompleted(object state) {
            if ((this.EntityAddressesGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityAddressesGetCompleted(this, new EntityAddressesGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityAddressesGetAsync(string token, long entityId) {
            this.EntityAddressesGetAsync(token, entityId, null);
        }
        
        public void EntityAddressesGetAsync(string token, long entityId, object userState) {
            if ((this.onBeginEntityAddressesGetDelegate == null)) {
                this.onBeginEntityAddressesGetDelegate = new BeginOperationDelegate(this.OnBeginEntityAddressesGet);
            }
            if ((this.onEndEntityAddressesGetDelegate == null)) {
                this.onEndEntityAddressesGetDelegate = new EndOperationDelegate(this.OnEndEntityAddressesGet);
            }
            if ((this.onEntityAddressesGetCompletedDelegate == null)) {
                this.onEntityAddressesGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityAddressesGetCompleted);
            }
            base.InvokeAsync(this.onBeginEntityAddressesGetDelegate, new object[] {
                        token,
                        entityId}, this.onEndEntityAddressesGetDelegate, this.onEntityAddressesGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContactRegardingGet(string token, long contactRegardingId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContactRegardingGet(token, contactRegardingId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ContactRegarding Mercury.Server.Application.IApplication.EndContactRegardingGet(System.IAsyncResult result) {
            return base.Channel.EndContactRegardingGet(result);
        }
        
        private System.IAsyncResult OnBeginContactRegardingGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long contactRegardingId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContactRegardingGet(token, contactRegardingId, callback, asyncState);
        }
        
        private object[] OnEndContactRegardingGet(System.IAsyncResult result) {
            Mercury.Server.Application.ContactRegarding retVal = ((Mercury.Server.Application.IApplication)(this)).EndContactRegardingGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContactRegardingGetCompleted(object state) {
            if ((this.ContactRegardingGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContactRegardingGetCompleted(this, new ContactRegardingGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContactRegardingGetAsync(string token, long contactRegardingId) {
            this.ContactRegardingGetAsync(token, contactRegardingId, null);
        }
        
        public void ContactRegardingGetAsync(string token, long contactRegardingId, object userState) {
            if ((this.onBeginContactRegardingGetDelegate == null)) {
                this.onBeginContactRegardingGetDelegate = new BeginOperationDelegate(this.OnBeginContactRegardingGet);
            }
            if ((this.onEndContactRegardingGetDelegate == null)) {
                this.onEndContactRegardingGetDelegate = new EndOperationDelegate(this.OnEndContactRegardingGet);
            }
            if ((this.onContactRegardingGetCompletedDelegate == null)) {
                this.onContactRegardingGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContactRegardingGetCompleted);
            }
            base.InvokeAsync(this.onBeginContactRegardingGetDelegate, new object[] {
                        token,
                        contactRegardingId}, this.onEndContactRegardingGetDelegate, this.onContactRegardingGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContactRegardingGetByName(string token, string contactRegardingName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContactRegardingGetByName(token, contactRegardingName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ContactRegarding Mercury.Server.Application.IApplication.EndContactRegardingGetByName(System.IAsyncResult result) {
            return base.Channel.EndContactRegardingGetByName(result);
        }
        
        private System.IAsyncResult OnBeginContactRegardingGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string contactRegardingName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContactRegardingGetByName(token, contactRegardingName, callback, asyncState);
        }
        
        private object[] OnEndContactRegardingGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.ContactRegarding retVal = ((Mercury.Server.Application.IApplication)(this)).EndContactRegardingGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContactRegardingGetByNameCompleted(object state) {
            if ((this.ContactRegardingGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContactRegardingGetByNameCompleted(this, new ContactRegardingGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContactRegardingGetByNameAsync(string token, string contactRegardingName) {
            this.ContactRegardingGetByNameAsync(token, contactRegardingName, null);
        }
        
        public void ContactRegardingGetByNameAsync(string token, string contactRegardingName, object userState) {
            if ((this.onBeginContactRegardingGetByNameDelegate == null)) {
                this.onBeginContactRegardingGetByNameDelegate = new BeginOperationDelegate(this.OnBeginContactRegardingGetByName);
            }
            if ((this.onEndContactRegardingGetByNameDelegate == null)) {
                this.onEndContactRegardingGetByNameDelegate = new EndOperationDelegate(this.OnEndContactRegardingGetByName);
            }
            if ((this.onContactRegardingGetByNameCompletedDelegate == null)) {
                this.onContactRegardingGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContactRegardingGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginContactRegardingGetByNameDelegate, new object[] {
                        token,
                        contactRegardingName}, this.onEndContactRegardingGetByNameDelegate, this.onContactRegardingGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContactRegardingSave(string token, Mercury.Server.Application.ContactRegarding contactRegarding, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContactRegardingSave(token, contactRegarding, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndContactRegardingSave(System.IAsyncResult result) {
            return base.Channel.EndContactRegardingSave(result);
        }
        
        private System.IAsyncResult OnBeginContactRegardingSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.ContactRegarding contactRegarding = ((Mercury.Server.Application.ContactRegarding)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContactRegardingSave(token, contactRegarding, callback, asyncState);
        }
        
        private object[] OnEndContactRegardingSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndContactRegardingSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContactRegardingSaveCompleted(object state) {
            if ((this.ContactRegardingSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContactRegardingSaveCompleted(this, new ContactRegardingSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContactRegardingSaveAsync(string token, Mercury.Server.Application.ContactRegarding contactRegarding) {
            this.ContactRegardingSaveAsync(token, contactRegarding, null);
        }
        
        public void ContactRegardingSaveAsync(string token, Mercury.Server.Application.ContactRegarding contactRegarding, object userState) {
            if ((this.onBeginContactRegardingSaveDelegate == null)) {
                this.onBeginContactRegardingSaveDelegate = new BeginOperationDelegate(this.OnBeginContactRegardingSave);
            }
            if ((this.onEndContactRegardingSaveDelegate == null)) {
                this.onEndContactRegardingSaveDelegate = new EndOperationDelegate(this.OnEndContactRegardingSave);
            }
            if ((this.onContactRegardingSaveCompletedDelegate == null)) {
                this.onContactRegardingSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContactRegardingSaveCompleted);
            }
            base.InvokeAsync(this.onBeginContactRegardingSaveDelegate, new object[] {
                        token,
                        contactRegarding}, this.onEndContactRegardingSaveDelegate, this.onContactRegardingSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCorrespondencesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCorrespondencesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CorrespondenceCollectionResponse Mercury.Server.Application.IApplication.EndCorrespondencesAvailable(System.IAsyncResult result) {
            return base.Channel.EndCorrespondencesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginCorrespondencesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCorrespondencesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndCorrespondencesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.CorrespondenceCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCorrespondencesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCorrespondencesAvailableCompleted(object state) {
            if ((this.CorrespondencesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CorrespondencesAvailableCompleted(this, new CorrespondencesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CorrespondencesAvailableAsync(string token) {
            this.CorrespondencesAvailableAsync(token, null);
        }
        
        public void CorrespondencesAvailableAsync(string token, object userState) {
            if ((this.onBeginCorrespondencesAvailableDelegate == null)) {
                this.onBeginCorrespondencesAvailableDelegate = new BeginOperationDelegate(this.OnBeginCorrespondencesAvailable);
            }
            if ((this.onEndCorrespondencesAvailableDelegate == null)) {
                this.onEndCorrespondencesAvailableDelegate = new EndOperationDelegate(this.OnEndCorrespondencesAvailable);
            }
            if ((this.onCorrespondencesAvailableCompletedDelegate == null)) {
                this.onCorrespondencesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCorrespondencesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginCorrespondencesAvailableDelegate, new object[] {
                        token}, this.onEndCorrespondencesAvailableDelegate, this.onCorrespondencesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCorrespondenceDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCorrespondenceDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndCorrespondenceDictionary(System.IAsyncResult result) {
            return base.Channel.EndCorrespondenceDictionary(result);
        }
        
        private System.IAsyncResult OnBeginCorrespondenceDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCorrespondenceDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndCorrespondenceDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCorrespondenceDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCorrespondenceDictionaryCompleted(object state) {
            if ((this.CorrespondenceDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CorrespondenceDictionaryCompleted(this, new CorrespondenceDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CorrespondenceDictionaryAsync(string token) {
            this.CorrespondenceDictionaryAsync(token, null);
        }
        
        public void CorrespondenceDictionaryAsync(string token, object userState) {
            if ((this.onBeginCorrespondenceDictionaryDelegate == null)) {
                this.onBeginCorrespondenceDictionaryDelegate = new BeginOperationDelegate(this.OnBeginCorrespondenceDictionary);
            }
            if ((this.onEndCorrespondenceDictionaryDelegate == null)) {
                this.onEndCorrespondenceDictionaryDelegate = new EndOperationDelegate(this.OnEndCorrespondenceDictionary);
            }
            if ((this.onCorrespondenceDictionaryCompletedDelegate == null)) {
                this.onCorrespondenceDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCorrespondenceDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginCorrespondenceDictionaryDelegate, new object[] {
                        token}, this.onEndCorrespondenceDictionaryDelegate, this.onCorrespondenceDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCorrespondenceGet(string token, long correspondenceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCorrespondenceGet(token, correspondenceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Correspondence Mercury.Server.Application.IApplication.EndCorrespondenceGet(System.IAsyncResult result) {
            return base.Channel.EndCorrespondenceGet(result);
        }
        
        private System.IAsyncResult OnBeginCorrespondenceGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long correspondenceId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCorrespondenceGet(token, correspondenceId, callback, asyncState);
        }
        
        private object[] OnEndCorrespondenceGet(System.IAsyncResult result) {
            Mercury.Server.Application.Correspondence retVal = ((Mercury.Server.Application.IApplication)(this)).EndCorrespondenceGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCorrespondenceGetCompleted(object state) {
            if ((this.CorrespondenceGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CorrespondenceGetCompleted(this, new CorrespondenceGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CorrespondenceGetAsync(string token, long correspondenceId) {
            this.CorrespondenceGetAsync(token, correspondenceId, null);
        }
        
        public void CorrespondenceGetAsync(string token, long correspondenceId, object userState) {
            if ((this.onBeginCorrespondenceGetDelegate == null)) {
                this.onBeginCorrespondenceGetDelegate = new BeginOperationDelegate(this.OnBeginCorrespondenceGet);
            }
            if ((this.onEndCorrespondenceGetDelegate == null)) {
                this.onEndCorrespondenceGetDelegate = new EndOperationDelegate(this.OnEndCorrespondenceGet);
            }
            if ((this.onCorrespondenceGetCompletedDelegate == null)) {
                this.onCorrespondenceGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCorrespondenceGetCompleted);
            }
            base.InvokeAsync(this.onBeginCorrespondenceGetDelegate, new object[] {
                        token,
                        correspondenceId}, this.onEndCorrespondenceGetDelegate, this.onCorrespondenceGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCorrespondenceGetByName(string token, string correspondenceName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCorrespondenceGetByName(token, correspondenceName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Correspondence Mercury.Server.Application.IApplication.EndCorrespondenceGetByName(System.IAsyncResult result) {
            return base.Channel.EndCorrespondenceGetByName(result);
        }
        
        private System.IAsyncResult OnBeginCorrespondenceGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string correspondenceName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCorrespondenceGetByName(token, correspondenceName, callback, asyncState);
        }
        
        private object[] OnEndCorrespondenceGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.Correspondence retVal = ((Mercury.Server.Application.IApplication)(this)).EndCorrespondenceGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCorrespondenceGetByNameCompleted(object state) {
            if ((this.CorrespondenceGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CorrespondenceGetByNameCompleted(this, new CorrespondenceGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CorrespondenceGetByNameAsync(string token, string correspondenceName) {
            this.CorrespondenceGetByNameAsync(token, correspondenceName, null);
        }
        
        public void CorrespondenceGetByNameAsync(string token, string correspondenceName, object userState) {
            if ((this.onBeginCorrespondenceGetByNameDelegate == null)) {
                this.onBeginCorrespondenceGetByNameDelegate = new BeginOperationDelegate(this.OnBeginCorrespondenceGetByName);
            }
            if ((this.onEndCorrespondenceGetByNameDelegate == null)) {
                this.onEndCorrespondenceGetByNameDelegate = new EndOperationDelegate(this.OnEndCorrespondenceGetByName);
            }
            if ((this.onCorrespondenceGetByNameCompletedDelegate == null)) {
                this.onCorrespondenceGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCorrespondenceGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginCorrespondenceGetByNameDelegate, new object[] {
                        token,
                        correspondenceName}, this.onEndCorrespondenceGetByNameDelegate, this.onCorrespondenceGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCorrespondenceSave(string token, Mercury.Server.Application.Correspondence correspondence, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCorrespondenceSave(token, correspondence, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndCorrespondenceSave(System.IAsyncResult result) {
            return base.Channel.EndCorrespondenceSave(result);
        }
        
        private System.IAsyncResult OnBeginCorrespondenceSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Correspondence correspondence = ((Mercury.Server.Application.Correspondence)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCorrespondenceSave(token, correspondence, callback, asyncState);
        }
        
        private object[] OnEndCorrespondenceSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCorrespondenceSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCorrespondenceSaveCompleted(object state) {
            if ((this.CorrespondenceSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CorrespondenceSaveCompleted(this, new CorrespondenceSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CorrespondenceSaveAsync(string token, Mercury.Server.Application.Correspondence correspondence) {
            this.CorrespondenceSaveAsync(token, correspondence, null);
        }
        
        public void CorrespondenceSaveAsync(string token, Mercury.Server.Application.Correspondence correspondence, object userState) {
            if ((this.onBeginCorrespondenceSaveDelegate == null)) {
                this.onBeginCorrespondenceSaveDelegate = new BeginOperationDelegate(this.OnBeginCorrespondenceSave);
            }
            if ((this.onEndCorrespondenceSaveDelegate == null)) {
                this.onEndCorrespondenceSaveDelegate = new EndOperationDelegate(this.OnEndCorrespondenceSave);
            }
            if ((this.onCorrespondenceSaveCompletedDelegate == null)) {
                this.onCorrespondenceSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCorrespondenceSaveCompleted);
            }
            base.InvokeAsync(this.onBeginCorrespondenceSaveDelegate, new object[] {
                        token,
                        correspondence}, this.onEndCorrespondenceSaveDelegate, this.onCorrespondenceSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCorrespondenceContentGet(string token, long correspondenceContentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCorrespondenceContentGet(token, correspondenceContentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CorrespondenceContent Mercury.Server.Application.IApplication.EndCorrespondenceContentGet(System.IAsyncResult result) {
            return base.Channel.EndCorrespondenceContentGet(result);
        }
        
        private System.IAsyncResult OnBeginCorrespondenceContentGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long correspondenceContentId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCorrespondenceContentGet(token, correspondenceContentId, callback, asyncState);
        }
        
        private object[] OnEndCorrespondenceContentGet(System.IAsyncResult result) {
            Mercury.Server.Application.CorrespondenceContent retVal = ((Mercury.Server.Application.IApplication)(this)).EndCorrespondenceContentGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCorrespondenceContentGetCompleted(object state) {
            if ((this.CorrespondenceContentGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CorrespondenceContentGetCompleted(this, new CorrespondenceContentGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CorrespondenceContentGetAsync(string token, long correspondenceContentId) {
            this.CorrespondenceContentGetAsync(token, correspondenceContentId, null);
        }
        
        public void CorrespondenceContentGetAsync(string token, long correspondenceContentId, object userState) {
            if ((this.onBeginCorrespondenceContentGetDelegate == null)) {
                this.onBeginCorrespondenceContentGetDelegate = new BeginOperationDelegate(this.OnBeginCorrespondenceContentGet);
            }
            if ((this.onEndCorrespondenceContentGetDelegate == null)) {
                this.onEndCorrespondenceContentGetDelegate = new EndOperationDelegate(this.OnEndCorrespondenceContentGet);
            }
            if ((this.onCorrespondenceContentGetCompletedDelegate == null)) {
                this.onCorrespondenceContentGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCorrespondenceContentGetCompleted);
            }
            base.InvokeAsync(this.onBeginCorrespondenceContentGetDelegate, new object[] {
                        token,
                        correspondenceContentId}, this.onEndCorrespondenceContentGetDelegate, this.onCorrespondenceContentGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginNoteTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNoteTypesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.NoteTypeCollectionResponse Mercury.Server.Application.IApplication.EndNoteTypesAvailable(System.IAsyncResult result) {
            return base.Channel.EndNoteTypesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginNoteTypesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginNoteTypesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndNoteTypesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.NoteTypeCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndNoteTypesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNoteTypesAvailableCompleted(object state) {
            if ((this.NoteTypesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NoteTypesAvailableCompleted(this, new NoteTypesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NoteTypesAvailableAsync(string token) {
            this.NoteTypesAvailableAsync(token, null);
        }
        
        public void NoteTypesAvailableAsync(string token, object userState) {
            if ((this.onBeginNoteTypesAvailableDelegate == null)) {
                this.onBeginNoteTypesAvailableDelegate = new BeginOperationDelegate(this.OnBeginNoteTypesAvailable);
            }
            if ((this.onEndNoteTypesAvailableDelegate == null)) {
                this.onEndNoteTypesAvailableDelegate = new EndOperationDelegate(this.OnEndNoteTypesAvailable);
            }
            if ((this.onNoteTypesAvailableCompletedDelegate == null)) {
                this.onNoteTypesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNoteTypesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginNoteTypesAvailableDelegate, new object[] {
                        token}, this.onEndNoteTypesAvailableDelegate, this.onNoteTypesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginNoteTypeDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNoteTypeDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndNoteTypeDictionary(System.IAsyncResult result) {
            return base.Channel.EndNoteTypeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginNoteTypeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginNoteTypeDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndNoteTypeDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndNoteTypeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNoteTypeDictionaryCompleted(object state) {
            if ((this.NoteTypeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NoteTypeDictionaryCompleted(this, new NoteTypeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NoteTypeDictionaryAsync(string token) {
            this.NoteTypeDictionaryAsync(token, null);
        }
        
        public void NoteTypeDictionaryAsync(string token, object userState) {
            if ((this.onBeginNoteTypeDictionaryDelegate == null)) {
                this.onBeginNoteTypeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginNoteTypeDictionary);
            }
            if ((this.onEndNoteTypeDictionaryDelegate == null)) {
                this.onEndNoteTypeDictionaryDelegate = new EndOperationDelegate(this.OnEndNoteTypeDictionary);
            }
            if ((this.onNoteTypeDictionaryCompletedDelegate == null)) {
                this.onNoteTypeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNoteTypeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginNoteTypeDictionaryDelegate, new object[] {
                        token}, this.onEndNoteTypeDictionaryDelegate, this.onNoteTypeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginNoteTypeGet(string token, long noteTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNoteTypeGet(token, noteTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.NoteType Mercury.Server.Application.IApplication.EndNoteTypeGet(System.IAsyncResult result) {
            return base.Channel.EndNoteTypeGet(result);
        }
        
        private System.IAsyncResult OnBeginNoteTypeGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long noteTypeId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginNoteTypeGet(token, noteTypeId, callback, asyncState);
        }
        
        private object[] OnEndNoteTypeGet(System.IAsyncResult result) {
            Mercury.Server.Application.NoteType retVal = ((Mercury.Server.Application.IApplication)(this)).EndNoteTypeGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNoteTypeGetCompleted(object state) {
            if ((this.NoteTypeGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NoteTypeGetCompleted(this, new NoteTypeGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NoteTypeGetAsync(string token, long noteTypeId) {
            this.NoteTypeGetAsync(token, noteTypeId, null);
        }
        
        public void NoteTypeGetAsync(string token, long noteTypeId, object userState) {
            if ((this.onBeginNoteTypeGetDelegate == null)) {
                this.onBeginNoteTypeGetDelegate = new BeginOperationDelegate(this.OnBeginNoteTypeGet);
            }
            if ((this.onEndNoteTypeGetDelegate == null)) {
                this.onEndNoteTypeGetDelegate = new EndOperationDelegate(this.OnEndNoteTypeGet);
            }
            if ((this.onNoteTypeGetCompletedDelegate == null)) {
                this.onNoteTypeGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNoteTypeGetCompleted);
            }
            base.InvokeAsync(this.onBeginNoteTypeGetDelegate, new object[] {
                        token,
                        noteTypeId}, this.onEndNoteTypeGetDelegate, this.onNoteTypeGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginNoteTypeGetByName(string token, string noteTypeName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNoteTypeGetByName(token, noteTypeName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.NoteType Mercury.Server.Application.IApplication.EndNoteTypeGetByName(System.IAsyncResult result) {
            return base.Channel.EndNoteTypeGetByName(result);
        }
        
        private System.IAsyncResult OnBeginNoteTypeGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string noteTypeName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginNoteTypeGetByName(token, noteTypeName, callback, asyncState);
        }
        
        private object[] OnEndNoteTypeGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.NoteType retVal = ((Mercury.Server.Application.IApplication)(this)).EndNoteTypeGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNoteTypeGetByNameCompleted(object state) {
            if ((this.NoteTypeGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NoteTypeGetByNameCompleted(this, new NoteTypeGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NoteTypeGetByNameAsync(string token, string noteTypeName) {
            this.NoteTypeGetByNameAsync(token, noteTypeName, null);
        }
        
        public void NoteTypeGetByNameAsync(string token, string noteTypeName, object userState) {
            if ((this.onBeginNoteTypeGetByNameDelegate == null)) {
                this.onBeginNoteTypeGetByNameDelegate = new BeginOperationDelegate(this.OnBeginNoteTypeGetByName);
            }
            if ((this.onEndNoteTypeGetByNameDelegate == null)) {
                this.onEndNoteTypeGetByNameDelegate = new EndOperationDelegate(this.OnEndNoteTypeGetByName);
            }
            if ((this.onNoteTypeGetByNameCompletedDelegate == null)) {
                this.onNoteTypeGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNoteTypeGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginNoteTypeGetByNameDelegate, new object[] {
                        token,
                        noteTypeName}, this.onEndNoteTypeGetByNameDelegate, this.onNoteTypeGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginNoteTypeSave(string token, Mercury.Server.Application.NoteType noteType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNoteTypeSave(token, noteType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndNoteTypeSave(System.IAsyncResult result) {
            return base.Channel.EndNoteTypeSave(result);
        }
        
        private System.IAsyncResult OnBeginNoteTypeSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.NoteType noteType = ((Mercury.Server.Application.NoteType)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginNoteTypeSave(token, noteType, callback, asyncState);
        }
        
        private object[] OnEndNoteTypeSave(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndNoteTypeSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNoteTypeSaveCompleted(object state) {
            if ((this.NoteTypeSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NoteTypeSaveCompleted(this, new NoteTypeSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NoteTypeSaveAsync(string token, Mercury.Server.Application.NoteType noteType) {
            this.NoteTypeSaveAsync(token, noteType, null);
        }
        
        public void NoteTypeSaveAsync(string token, Mercury.Server.Application.NoteType noteType, object userState) {
            if ((this.onBeginNoteTypeSaveDelegate == null)) {
                this.onBeginNoteTypeSaveDelegate = new BeginOperationDelegate(this.OnBeginNoteTypeSave);
            }
            if ((this.onEndNoteTypeSaveDelegate == null)) {
                this.onEndNoteTypeSaveDelegate = new EndOperationDelegate(this.OnEndNoteTypeSave);
            }
            if ((this.onNoteTypeSaveCompletedDelegate == null)) {
                this.onNoteTypeSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNoteTypeSaveCompleted);
            }
            base.InvokeAsync(this.onBeginNoteTypeSaveDelegate, new object[] {
                        token,
                        noteType}, this.onEndNoteTypeSaveDelegate, this.onNoteTypeSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginStateReference(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStateReference(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndStateReference(System.IAsyncResult result) {
            return base.Channel.EndStateReference(result);
        }
        
        private System.IAsyncResult OnBeginStateReference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginStateReference(token, callback, asyncState);
        }
        
        private object[] OnEndStateReference(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndStateReference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStateReferenceCompleted(object state) {
            if ((this.StateReferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StateReferenceCompleted(this, new StateReferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StateReferenceAsync(string token) {
            this.StateReferenceAsync(token, null);
        }
        
        public void StateReferenceAsync(string token, object userState) {
            if ((this.onBeginStateReferenceDelegate == null)) {
                this.onBeginStateReferenceDelegate = new BeginOperationDelegate(this.OnBeginStateReference);
            }
            if ((this.onEndStateReferenceDelegate == null)) {
                this.onEndStateReferenceDelegate = new EndOperationDelegate(this.OnEndStateReference);
            }
            if ((this.onStateReferenceCompletedDelegate == null)) {
                this.onStateReferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStateReferenceCompleted);
            }
            base.InvokeAsync(this.onBeginStateReferenceDelegate, new object[] {
                        token}, this.onEndStateReferenceDelegate, this.onStateReferenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginStateReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStateReferenceByZipCode(token, zipCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mercury.Server.Application.IApplication.EndStateReferenceByZipCode(System.IAsyncResult result) {
            return base.Channel.EndStateReferenceByZipCode(result);
        }
        
        private System.IAsyncResult OnBeginStateReferenceByZipCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string zipCode = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginStateReferenceByZipCode(token, zipCode, callback, asyncState);
        }
        
        private object[] OnEndStateReferenceByZipCode(System.IAsyncResult result) {
            string retVal = ((Mercury.Server.Application.IApplication)(this)).EndStateReferenceByZipCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStateReferenceByZipCodeCompleted(object state) {
            if ((this.StateReferenceByZipCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StateReferenceByZipCodeCompleted(this, new StateReferenceByZipCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StateReferenceByZipCodeAsync(string token, string zipCode) {
            this.StateReferenceByZipCodeAsync(token, zipCode, null);
        }
        
        public void StateReferenceByZipCodeAsync(string token, string zipCode, object userState) {
            if ((this.onBeginStateReferenceByZipCodeDelegate == null)) {
                this.onBeginStateReferenceByZipCodeDelegate = new BeginOperationDelegate(this.OnBeginStateReferenceByZipCode);
            }
            if ((this.onEndStateReferenceByZipCodeDelegate == null)) {
                this.onEndStateReferenceByZipCodeDelegate = new EndOperationDelegate(this.OnEndStateReferenceByZipCode);
            }
            if ((this.onStateReferenceByZipCodeCompletedDelegate == null)) {
                this.onStateReferenceByZipCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStateReferenceByZipCodeCompleted);
            }
            base.InvokeAsync(this.onBeginStateReferenceByZipCodeDelegate, new object[] {
                        token,
                        zipCode}, this.onEndStateReferenceByZipCodeDelegate, this.onStateReferenceByZipCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCityReferenceByState(string token, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCityReferenceByState(token, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CityStateZipCodeViewCollectionResponse Mercury.Server.Application.IApplication.EndCityReferenceByState(System.IAsyncResult result) {
            return base.Channel.EndCityReferenceByState(result);
        }
        
        private System.IAsyncResult OnBeginCityReferenceByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string state = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCityReferenceByState(token, state, callback, asyncState);
        }
        
        private object[] OnEndCityReferenceByState(System.IAsyncResult result) {
            Mercury.Server.Application.CityStateZipCodeViewCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCityReferenceByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCityReferenceByStateCompleted(object state) {
            if ((this.CityReferenceByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CityReferenceByStateCompleted(this, new CityReferenceByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CityReferenceByStateAsync(string token, string state) {
            this.CityReferenceByStateAsync(token, state, null);
        }
        
        public void CityReferenceByStateAsync(string token, string state, object userState) {
            if ((this.onBeginCityReferenceByStateDelegate == null)) {
                this.onBeginCityReferenceByStateDelegate = new BeginOperationDelegate(this.OnBeginCityReferenceByState);
            }
            if ((this.onEndCityReferenceByStateDelegate == null)) {
                this.onEndCityReferenceByStateDelegate = new EndOperationDelegate(this.OnEndCityReferenceByState);
            }
            if ((this.onCityReferenceByStateCompletedDelegate == null)) {
                this.onCityReferenceByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCityReferenceByStateCompleted);
            }
            base.InvokeAsync(this.onBeginCityReferenceByStateDelegate, new object[] {
                        token,
                        state}, this.onEndCityReferenceByStateDelegate, this.onCityReferenceByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCityStateReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCityStateReferenceByZipCode(token, zipCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.CityStateZipCodeView Mercury.Server.Application.IApplication.EndCityStateReferenceByZipCode(System.IAsyncResult result) {
            return base.Channel.EndCityStateReferenceByZipCode(result);
        }
        
        private System.IAsyncResult OnBeginCityStateReferenceByZipCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string zipCode = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCityStateReferenceByZipCode(token, zipCode, callback, asyncState);
        }
        
        private object[] OnEndCityStateReferenceByZipCode(System.IAsyncResult result) {
            Mercury.Server.Application.CityStateZipCodeView retVal = ((Mercury.Server.Application.IApplication)(this)).EndCityStateReferenceByZipCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCityStateReferenceByZipCodeCompleted(object state) {
            if ((this.CityStateReferenceByZipCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CityStateReferenceByZipCodeCompleted(this, new CityStateReferenceByZipCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CityStateReferenceByZipCodeAsync(string token, string zipCode) {
            this.CityStateReferenceByZipCodeAsync(token, zipCode, null);
        }
        
        public void CityStateReferenceByZipCodeAsync(string token, string zipCode, object userState) {
            if ((this.onBeginCityStateReferenceByZipCodeDelegate == null)) {
                this.onBeginCityStateReferenceByZipCodeDelegate = new BeginOperationDelegate(this.OnBeginCityStateReferenceByZipCode);
            }
            if ((this.onEndCityStateReferenceByZipCodeDelegate == null)) {
                this.onEndCityStateReferenceByZipCodeDelegate = new EndOperationDelegate(this.OnEndCityStateReferenceByZipCode);
            }
            if ((this.onCityStateReferenceByZipCodeCompletedDelegate == null)) {
                this.onCityStateReferenceByZipCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCityStateReferenceByZipCodeCompleted);
            }
            base.InvokeAsync(this.onBeginCityStateReferenceByZipCodeDelegate, new object[] {
                        token,
                        zipCode}, this.onEndCityStateReferenceByZipCodeDelegate, this.onCityStateReferenceByZipCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCityReferenceByZipCode(string token, string ZipCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCityReferenceByZipCode(token, ZipCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mercury.Server.Application.IApplication.EndCityReferenceByZipCode(System.IAsyncResult result) {
            return base.Channel.EndCityReferenceByZipCode(result);
        }
        
        private System.IAsyncResult OnBeginCityReferenceByZipCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string ZipCode = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCityReferenceByZipCode(token, ZipCode, callback, asyncState);
        }
        
        private object[] OnEndCityReferenceByZipCode(System.IAsyncResult result) {
            string retVal = ((Mercury.Server.Application.IApplication)(this)).EndCityReferenceByZipCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCityReferenceByZipCodeCompleted(object state) {
            if ((this.CityReferenceByZipCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CityReferenceByZipCodeCompleted(this, new CityReferenceByZipCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CityReferenceByZipCodeAsync(string token, string ZipCode) {
            this.CityReferenceByZipCodeAsync(token, ZipCode, null);
        }
        
        public void CityReferenceByZipCodeAsync(string token, string ZipCode, object userState) {
            if ((this.onBeginCityReferenceByZipCodeDelegate == null)) {
                this.onBeginCityReferenceByZipCodeDelegate = new BeginOperationDelegate(this.OnBeginCityReferenceByZipCode);
            }
            if ((this.onEndCityReferenceByZipCodeDelegate == null)) {
                this.onEndCityReferenceByZipCodeDelegate = new EndOperationDelegate(this.OnEndCityReferenceByZipCode);
            }
            if ((this.onCityReferenceByZipCodeCompletedDelegate == null)) {
                this.onCityReferenceByZipCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCityReferenceByZipCodeCompleted);
            }
            base.InvokeAsync(this.onBeginCityReferenceByZipCodeDelegate, new object[] {
                        token,
                        ZipCode}, this.onEndCityReferenceByZipCodeDelegate, this.onCityReferenceByZipCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCityReferenceByStateCityName(string token, string state, string cityName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCityReferenceByStateCityName(token, state, cityName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndCityReferenceByStateCityName(System.IAsyncResult result) {
            return base.Channel.EndCityReferenceByStateCityName(result);
        }
        
        private System.IAsyncResult OnBeginCityReferenceByStateCityName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string state = ((string)(inValues[1]));
            string cityName = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCityReferenceByStateCityName(token, state, cityName, callback, asyncState);
        }
        
        private object[] OnEndCityReferenceByStateCityName(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCityReferenceByStateCityName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCityReferenceByStateCityNameCompleted(object state) {
            if ((this.CityReferenceByStateCityNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CityReferenceByStateCityNameCompleted(this, new CityReferenceByStateCityNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CityReferenceByStateCityNameAsync(string token, string state, string cityName) {
            this.CityReferenceByStateCityNameAsync(token, state, cityName, null);
        }
        
        public void CityReferenceByStateCityNameAsync(string token, string state, string cityName, object userState) {
            if ((this.onBeginCityReferenceByStateCityNameDelegate == null)) {
                this.onBeginCityReferenceByStateCityNameDelegate = new BeginOperationDelegate(this.OnBeginCityReferenceByStateCityName);
            }
            if ((this.onEndCityReferenceByStateCityNameDelegate == null)) {
                this.onEndCityReferenceByStateCityNameDelegate = new EndOperationDelegate(this.OnEndCityReferenceByStateCityName);
            }
            if ((this.onCityReferenceByStateCityNameCompletedDelegate == null)) {
                this.onCityReferenceByStateCityNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCityReferenceByStateCityNameCompleted);
            }
            base.InvokeAsync(this.onBeginCityReferenceByStateCityNameDelegate, new object[] {
                        token,
                        state,
                        cityName}, this.onEndCityReferenceByStateCityNameDelegate, this.onCityReferenceByStateCityNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCountyReferenceByState(string token, string state, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCountyReferenceByState(token, state, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndCountyReferenceByState(System.IAsyncResult result) {
            return base.Channel.EndCountyReferenceByState(result);
        }
        
        private System.IAsyncResult OnBeginCountyReferenceByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string state = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCountyReferenceByState(token, state, callback, asyncState);
        }
        
        private object[] OnEndCountyReferenceByState(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCountyReferenceByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCountyReferenceByStateCompleted(object state) {
            if ((this.CountyReferenceByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CountyReferenceByStateCompleted(this, new CountyReferenceByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CountyReferenceByStateAsync(string token, string state) {
            this.CountyReferenceByStateAsync(token, state, null);
        }
        
        public void CountyReferenceByStateAsync(string token, string state, object userState) {
            if ((this.onBeginCountyReferenceByStateDelegate == null)) {
                this.onBeginCountyReferenceByStateDelegate = new BeginOperationDelegate(this.OnBeginCountyReferenceByState);
            }
            if ((this.onEndCountyReferenceByStateDelegate == null)) {
                this.onEndCountyReferenceByStateDelegate = new EndOperationDelegate(this.OnEndCountyReferenceByState);
            }
            if ((this.onCountyReferenceByStateCompletedDelegate == null)) {
                this.onCountyReferenceByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCountyReferenceByStateCompleted);
            }
            base.InvokeAsync(this.onBeginCountyReferenceByStateDelegate, new object[] {
                        token,
                        state}, this.onEndCountyReferenceByStateDelegate, this.onCountyReferenceByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCountyReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCountyReferenceByZipCode(token, zipCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mercury.Server.Application.IApplication.EndCountyReferenceByZipCode(System.IAsyncResult result) {
            return base.Channel.EndCountyReferenceByZipCode(result);
        }
        
        private System.IAsyncResult OnBeginCountyReferenceByZipCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string zipCode = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCountyReferenceByZipCode(token, zipCode, callback, asyncState);
        }
        
        private object[] OnEndCountyReferenceByZipCode(System.IAsyncResult result) {
            string retVal = ((Mercury.Server.Application.IApplication)(this)).EndCountyReferenceByZipCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCountyReferenceByZipCodeCompleted(object state) {
            if ((this.CountyReferenceByZipCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CountyReferenceByZipCodeCompleted(this, new CountyReferenceByZipCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CountyReferenceByZipCodeAsync(string token, string zipCode) {
            this.CountyReferenceByZipCodeAsync(token, zipCode, null);
        }
        
        public void CountyReferenceByZipCodeAsync(string token, string zipCode, object userState) {
            if ((this.onBeginCountyReferenceByZipCodeDelegate == null)) {
                this.onBeginCountyReferenceByZipCodeDelegate = new BeginOperationDelegate(this.OnBeginCountyReferenceByZipCode);
            }
            if ((this.onEndCountyReferenceByZipCodeDelegate == null)) {
                this.onEndCountyReferenceByZipCodeDelegate = new EndOperationDelegate(this.OnEndCountyReferenceByZipCode);
            }
            if ((this.onCountyReferenceByZipCodeCompletedDelegate == null)) {
                this.onCountyReferenceByZipCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCountyReferenceByZipCodeCompleted);
            }
            base.InvokeAsync(this.onBeginCountyReferenceByZipCodeDelegate, new object[] {
                        token,
                        zipCode}, this.onEndCountyReferenceByZipCodeDelegate, this.onCountyReferenceByZipCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginDiagnosisDictionary(string token, string diagnosisPrefix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDiagnosisDictionary(token, diagnosisPrefix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndDiagnosisDictionary(System.IAsyncResult result) {
            return base.Channel.EndDiagnosisDictionary(result);
        }
        
        private System.IAsyncResult OnBeginDiagnosisDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string diagnosisPrefix = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginDiagnosisDictionary(token, diagnosisPrefix, callback, asyncState);
        }
        
        private object[] OnEndDiagnosisDictionary(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndDiagnosisDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDiagnosisDictionaryCompleted(object state) {
            if ((this.DiagnosisDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DiagnosisDictionaryCompleted(this, new DiagnosisDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DiagnosisDictionaryAsync(string token, string diagnosisPrefix) {
            this.DiagnosisDictionaryAsync(token, diagnosisPrefix, null);
        }
        
        public void DiagnosisDictionaryAsync(string token, string diagnosisPrefix, object userState) {
            if ((this.onBeginDiagnosisDictionaryDelegate == null)) {
                this.onBeginDiagnosisDictionaryDelegate = new BeginOperationDelegate(this.OnBeginDiagnosisDictionary);
            }
            if ((this.onEndDiagnosisDictionaryDelegate == null)) {
                this.onEndDiagnosisDictionaryDelegate = new EndOperationDelegate(this.OnEndDiagnosisDictionary);
            }
            if ((this.onDiagnosisDictionaryCompletedDelegate == null)) {
                this.onDiagnosisDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDiagnosisDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginDiagnosisDictionaryDelegate, new object[] {
                        token,
                        diagnosisPrefix}, this.onEndDiagnosisDictionaryDelegate, this.onDiagnosisDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginDiagnosisDescription(string token, string diagnosisCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDiagnosisDescription(token, diagnosisCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mercury.Server.Application.IApplication.EndDiagnosisDescription(System.IAsyncResult result) {
            return base.Channel.EndDiagnosisDescription(result);
        }
        
        private System.IAsyncResult OnBeginDiagnosisDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string diagnosisCode = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginDiagnosisDescription(token, diagnosisCode, callback, asyncState);
        }
        
        private object[] OnEndDiagnosisDescription(System.IAsyncResult result) {
            string retVal = ((Mercury.Server.Application.IApplication)(this)).EndDiagnosisDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDiagnosisDescriptionCompleted(object state) {
            if ((this.DiagnosisDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DiagnosisDescriptionCompleted(this, new DiagnosisDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DiagnosisDescriptionAsync(string token, string diagnosisCode) {
            this.DiagnosisDescriptionAsync(token, diagnosisCode, null);
        }
        
        public void DiagnosisDescriptionAsync(string token, string diagnosisCode, object userState) {
            if ((this.onBeginDiagnosisDescriptionDelegate == null)) {
                this.onBeginDiagnosisDescriptionDelegate = new BeginOperationDelegate(this.OnBeginDiagnosisDescription);
            }
            if ((this.onEndDiagnosisDescriptionDelegate == null)) {
                this.onEndDiagnosisDescriptionDelegate = new EndOperationDelegate(this.OnEndDiagnosisDescription);
            }
            if ((this.onDiagnosisDescriptionCompletedDelegate == null)) {
                this.onDiagnosisDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDiagnosisDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginDiagnosisDescriptionDelegate, new object[] {
                        token,
                        diagnosisCode}, this.onEndDiagnosisDescriptionDelegate, this.onDiagnosisDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginProcedureCodeDictionary(string token, string procedureCodePrefix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcedureCodeDictionary(token, procedureCodePrefix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> Mercury.Server.Application.IApplication.EndProcedureCodeDictionary(System.IAsyncResult result) {
            return base.Channel.EndProcedureCodeDictionary(result);
        }
        
        private System.IAsyncResult OnBeginProcedureCodeDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string procedureCodePrefix = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginProcedureCodeDictionary(token, procedureCodePrefix, callback, asyncState);
        }
        
        private object[] OnEndProcedureCodeDictionary(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((Mercury.Server.Application.IApplication)(this)).EndProcedureCodeDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcedureCodeDictionaryCompleted(object state) {
            if ((this.ProcedureCodeDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcedureCodeDictionaryCompleted(this, new ProcedureCodeDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcedureCodeDictionaryAsync(string token, string procedureCodePrefix) {
            this.ProcedureCodeDictionaryAsync(token, procedureCodePrefix, null);
        }
        
        public void ProcedureCodeDictionaryAsync(string token, string procedureCodePrefix, object userState) {
            if ((this.onBeginProcedureCodeDictionaryDelegate == null)) {
                this.onBeginProcedureCodeDictionaryDelegate = new BeginOperationDelegate(this.OnBeginProcedureCodeDictionary);
            }
            if ((this.onEndProcedureCodeDictionaryDelegate == null)) {
                this.onEndProcedureCodeDictionaryDelegate = new EndOperationDelegate(this.OnEndProcedureCodeDictionary);
            }
            if ((this.onProcedureCodeDictionaryCompletedDelegate == null)) {
                this.onProcedureCodeDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcedureCodeDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginProcedureCodeDictionaryDelegate, new object[] {
                        token,
                        procedureCodePrefix}, this.onEndProcedureCodeDictionaryDelegate, this.onProcedureCodeDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentSave(string token, Mercury.Server.Application.Environment environment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentSave(token, environment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEnvironmentSave(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentSave(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.Environment environment = ((Mercury.Server.Application.Environment)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentSave(token, environment, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentSave(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentSaveCompleted(object state) {
            if ((this.EnvironmentSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentSaveCompleted(this, new EnvironmentSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentSaveAsync(string token, Mercury.Server.Application.Environment environment) {
            this.EnvironmentSaveAsync(token, environment, null);
        }
        
        public void EnvironmentSaveAsync(string token, Mercury.Server.Application.Environment environment, object userState) {
            if ((this.onBeginEnvironmentSaveDelegate == null)) {
                this.onBeginEnvironmentSaveDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentSave);
            }
            if ((this.onEndEnvironmentSaveDelegate == null)) {
                this.onEndEnvironmentSaveDelegate = new EndOperationDelegate(this.OnEndEnvironmentSave);
            }
            if ((this.onEnvironmentSaveCompletedDelegate == null)) {
                this.onEnvironmentSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentSaveCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentSaveDelegate, new object[] {
                        token,
                        environment}, this.onEndEnvironmentSaveDelegate, this.onEnvironmentSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentDelete(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentDelete(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEnvironmentDelete(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentDelete(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentDelete(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentDelete(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentDeleteCompleted(object state) {
            if ((this.EnvironmentDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentDeleteCompleted(this, new EnvironmentDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentDeleteAsync(string token, string environmentName) {
            this.EnvironmentDeleteAsync(token, environmentName, null);
        }
        
        public void EnvironmentDeleteAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentDeleteDelegate == null)) {
                this.onBeginEnvironmentDeleteDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentDelete);
            }
            if ((this.onEndEnvironmentDeleteDelegate == null)) {
                this.onEndEnvironmentDeleteDelegate = new EndOperationDelegate(this.OnEndEnvironmentDelete);
            }
            if ((this.onEnvironmentDeleteCompletedDelegate == null)) {
                this.onEnvironmentDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentDeleteDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentDeleteDelegate, this.onEnvironmentDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentList(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentList(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndEnvironmentList(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentList(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentList(token, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentList(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentListCompleted(object state) {
            if ((this.EnvironmentListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentListCompleted(this, new EnvironmentListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentListAsync(string token) {
            this.EnvironmentListAsync(token, null);
        }
        
        public void EnvironmentListAsync(string token, object userState) {
            if ((this.onBeginEnvironmentListDelegate == null)) {
                this.onBeginEnvironmentListDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentList);
            }
            if ((this.onEndEnvironmentListDelegate == null)) {
                this.onEndEnvironmentListDelegate = new EndOperationDelegate(this.OnEndEnvironmentList);
            }
            if ((this.onEnvironmentListCompletedDelegate == null)) {
                this.onEnvironmentListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentListCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentListDelegate, new object[] {
                        token}, this.onEndEnvironmentListDelegate, this.onEnvironmentListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndEnvironmentDictionary(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentDictionary(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentDictionaryCompleted(object state) {
            if ((this.EnvironmentDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentDictionaryCompleted(this, new EnvironmentDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentDictionaryAsync(string token) {
            this.EnvironmentDictionaryAsync(token, null);
        }
        
        public void EnvironmentDictionaryAsync(string token, object userState) {
            if ((this.onBeginEnvironmentDictionaryDelegate == null)) {
                this.onBeginEnvironmentDictionaryDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentDictionary);
            }
            if ((this.onEndEnvironmentDictionaryDelegate == null)) {
                this.onEndEnvironmentDictionaryDelegate = new EndOperationDelegate(this.OnEndEnvironmentDictionary);
            }
            if ((this.onEnvironmentDictionaryCompletedDelegate == null)) {
                this.onEnvironmentDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentDictionaryDelegate, new object[] {
                        token}, this.onEndEnvironmentDictionaryDelegate, this.onEnvironmentDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EnvironmentCollectionResponse Mercury.Server.Application.IApplication.EndEnvironmentsAvailable(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.EnvironmentCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentsAvailableCompleted(object state) {
            if ((this.EnvironmentsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentsAvailableCompleted(this, new EnvironmentsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentsAvailableAsync(string token) {
            this.EnvironmentsAvailableAsync(token, null);
        }
        
        public void EnvironmentsAvailableAsync(string token, object userState) {
            if ((this.onBeginEnvironmentsAvailableDelegate == null)) {
                this.onBeginEnvironmentsAvailableDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentsAvailable);
            }
            if ((this.onEndEnvironmentsAvailableDelegate == null)) {
                this.onEndEnvironmentsAvailableDelegate = new EndOperationDelegate(this.OnEndEnvironmentsAvailable);
            }
            if ((this.onEnvironmentsAvailableCompletedDelegate == null)) {
                this.onEnvironmentsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentsAvailableDelegate, new object[] {
                        token}, this.onEndEnvironmentsAvailableDelegate, this.onEnvironmentsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginHasEnvironmentPermissionByEnvironment(string token, string environmentName, string permissionName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHasEnvironmentPermissionByEnvironment(token, environmentName, permissionName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndHasEnvironmentPermissionByEnvironment(System.IAsyncResult result) {
            return base.Channel.EndHasEnvironmentPermissionByEnvironment(result);
        }
        
        private System.IAsyncResult OnBeginHasEnvironmentPermissionByEnvironment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            string permissionName = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginHasEnvironmentPermissionByEnvironment(token, environmentName, permissionName, callback, asyncState);
        }
        
        private object[] OnEndHasEnvironmentPermissionByEnvironment(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndHasEnvironmentPermissionByEnvironment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHasEnvironmentPermissionByEnvironmentCompleted(object state) {
            if ((this.HasEnvironmentPermissionByEnvironmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HasEnvironmentPermissionByEnvironmentCompleted(this, new HasEnvironmentPermissionByEnvironmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HasEnvironmentPermissionByEnvironmentAsync(string token, string environmentName, string permissionName) {
            this.HasEnvironmentPermissionByEnvironmentAsync(token, environmentName, permissionName, null);
        }
        
        public void HasEnvironmentPermissionByEnvironmentAsync(string token, string environmentName, string permissionName, object userState) {
            if ((this.onBeginHasEnvironmentPermissionByEnvironmentDelegate == null)) {
                this.onBeginHasEnvironmentPermissionByEnvironmentDelegate = new BeginOperationDelegate(this.OnBeginHasEnvironmentPermissionByEnvironment);
            }
            if ((this.onEndHasEnvironmentPermissionByEnvironmentDelegate == null)) {
                this.onEndHasEnvironmentPermissionByEnvironmentDelegate = new EndOperationDelegate(this.OnEndHasEnvironmentPermissionByEnvironment);
            }
            if ((this.onHasEnvironmentPermissionByEnvironmentCompletedDelegate == null)) {
                this.onHasEnvironmentPermissionByEnvironmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHasEnvironmentPermissionByEnvironmentCompleted);
            }
            base.InvokeAsync(this.onBeginHasEnvironmentPermissionByEnvironmentDelegate, new object[] {
                        token,
                        environmentName,
                        permissionName}, this.onEndHasEnvironmentPermissionByEnvironmentDelegate, this.onHasEnvironmentPermissionByEnvironmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentPermissionList(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentPermissionList(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndEnvironmentPermissionList(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentPermissionList(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentPermissionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentPermissionList(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentPermissionList(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentPermissionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentPermissionListCompleted(object state) {
            if ((this.EnvironmentPermissionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentPermissionListCompleted(this, new EnvironmentPermissionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentPermissionListAsync(string token, string environmentName) {
            this.EnvironmentPermissionListAsync(token, environmentName, null);
        }
        
        public void EnvironmentPermissionListAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentPermissionListDelegate == null)) {
                this.onBeginEnvironmentPermissionListDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentPermissionList);
            }
            if ((this.onEndEnvironmentPermissionListDelegate == null)) {
                this.onEndEnvironmentPermissionListDelegate = new EndOperationDelegate(this.OnEndEnvironmentPermissionList);
            }
            if ((this.onEnvironmentPermissionListCompletedDelegate == null)) {
                this.onEnvironmentPermissionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentPermissionListCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentPermissionListDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentPermissionListDelegate, this.onEnvironmentPermissionListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentPermissionsAvailable(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentPermissionsAvailable(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PermissionCollectionResponse Mercury.Server.Application.IApplication.EndEnvironmentPermissionsAvailable(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentPermissionsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentPermissionsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentPermissionsAvailable(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentPermissionsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.PermissionCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentPermissionsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentPermissionsAvailableCompleted(object state) {
            if ((this.EnvironmentPermissionsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentPermissionsAvailableCompleted(this, new EnvironmentPermissionsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentPermissionsAvailableAsync(string token, string environmentName) {
            this.EnvironmentPermissionsAvailableAsync(token, environmentName, null);
        }
        
        public void EnvironmentPermissionsAvailableAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentPermissionsAvailableDelegate == null)) {
                this.onBeginEnvironmentPermissionsAvailableDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentPermissionsAvailable);
            }
            if ((this.onEndEnvironmentPermissionsAvailableDelegate == null)) {
                this.onEndEnvironmentPermissionsAvailableDelegate = new EndOperationDelegate(this.OnEndEnvironmentPermissionsAvailable);
            }
            if ((this.onEnvironmentPermissionsAvailableCompletedDelegate == null)) {
                this.onEnvironmentPermissionsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentPermissionsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentPermissionsAvailableDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentPermissionsAvailableDelegate, this.onEnvironmentPermissionsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleList(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleList(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleList(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleList(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleList(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleList(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleListCompleted(object state) {
            if ((this.EnvironmentRoleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleListCompleted(this, new EnvironmentRoleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleListAsync(string token, string environmentName) {
            this.EnvironmentRoleListAsync(token, environmentName, null);
        }
        
        public void EnvironmentRoleListAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentRoleListDelegate == null)) {
                this.onBeginEnvironmentRoleListDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleList);
            }
            if ((this.onEndEnvironmentRoleListDelegate == null)) {
                this.onEndEnvironmentRoleListDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleList);
            }
            if ((this.onEnvironmentRoleListCompletedDelegate == null)) {
                this.onEnvironmentRoleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleListCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleListDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentRoleListDelegate, this.onEnvironmentRoleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleDictionary(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleDictionary(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleDictionary(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleDictionary(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleDictionary(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleDictionaryCompleted(object state) {
            if ((this.EnvironmentRoleDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleDictionaryCompleted(this, new EnvironmentRoleDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleDictionaryAsync(string token, string environmentName) {
            this.EnvironmentRoleDictionaryAsync(token, environmentName, null);
        }
        
        public void EnvironmentRoleDictionaryAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentRoleDictionaryDelegate == null)) {
                this.onBeginEnvironmentRoleDictionaryDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleDictionary);
            }
            if ((this.onEndEnvironmentRoleDictionaryDelegate == null)) {
                this.onEndEnvironmentRoleDictionaryDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleDictionary);
            }
            if ((this.onEnvironmentRoleDictionaryCompletedDelegate == null)) {
                this.onEnvironmentRoleDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleDictionaryDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentRoleDictionaryDelegate, this.onEnvironmentRoleDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRolesAvailable(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRolesAvailable(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.RoleCollectionResponse Mercury.Server.Application.IApplication.EndEnvironmentRolesAvailable(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRolesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRolesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRolesAvailable(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRolesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.RoleCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRolesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRolesAvailableCompleted(object state) {
            if ((this.EnvironmentRolesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRolesAvailableCompleted(this, new EnvironmentRolesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRolesAvailableAsync(string token, string environmentName) {
            this.EnvironmentRolesAvailableAsync(token, environmentName, null);
        }
        
        public void EnvironmentRolesAvailableAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentRolesAvailableDelegate == null)) {
                this.onBeginEnvironmentRolesAvailableDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRolesAvailable);
            }
            if ((this.onEndEnvironmentRolesAvailableDelegate == null)) {
                this.onEndEnvironmentRolesAvailableDelegate = new EndOperationDelegate(this.OnEndEnvironmentRolesAvailable);
            }
            if ((this.onEnvironmentRolesAvailableCompletedDelegate == null)) {
                this.onEnvironmentRolesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRolesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRolesAvailableDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentRolesAvailableDelegate, this.onEnvironmentRolesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleGetPermissions(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleGetPermissions(token, environmentName, roleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.RolePermissionCollectionResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleGetPermissions(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleGetPermissions(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleGetPermissions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            string roleName = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleGetPermissions(token, environmentName, roleName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleGetPermissions(System.IAsyncResult result) {
            Mercury.Server.Application.RolePermissionCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleGetPermissions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleGetPermissionsCompleted(object state) {
            if ((this.EnvironmentRoleGetPermissionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleGetPermissionsCompleted(this, new EnvironmentRoleGetPermissionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleGetPermissionsAsync(string token, string environmentName, string roleName) {
            this.EnvironmentRoleGetPermissionsAsync(token, environmentName, roleName, null);
        }
        
        public void EnvironmentRoleGetPermissionsAsync(string token, string environmentName, string roleName, object userState) {
            if ((this.onBeginEnvironmentRoleGetPermissionsDelegate == null)) {
                this.onBeginEnvironmentRoleGetPermissionsDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleGetPermissions);
            }
            if ((this.onEndEnvironmentRoleGetPermissionsDelegate == null)) {
                this.onEndEnvironmentRoleGetPermissionsDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleGetPermissions);
            }
            if ((this.onEnvironmentRoleGetPermissionsCompletedDelegate == null)) {
                this.onEnvironmentRoleGetPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleGetPermissionsCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleGetPermissionsDelegate, new object[] {
                        token,
                        environmentName,
                        roleName}, this.onEndEnvironmentRoleGetPermissionsDelegate, this.onEnvironmentRoleGetPermissionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleGetMembership(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleGetMembership(token, environmentName, roleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.RoleMembershipCollectionResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleGetMembership(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleGetMembership(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleGetMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            string roleName = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleGetMembership(token, environmentName, roleName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleGetMembership(System.IAsyncResult result) {
            Mercury.Server.Application.RoleMembershipCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleGetMembership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleGetMembershipCompleted(object state) {
            if ((this.EnvironmentRoleGetMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleGetMembershipCompleted(this, new EnvironmentRoleGetMembershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleGetMembershipAsync(string token, string environmentName, string roleName) {
            this.EnvironmentRoleGetMembershipAsync(token, environmentName, roleName, null);
        }
        
        public void EnvironmentRoleGetMembershipAsync(string token, string environmentName, string roleName, object userState) {
            if ((this.onBeginEnvironmentRoleGetMembershipDelegate == null)) {
                this.onBeginEnvironmentRoleGetMembershipDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleGetMembership);
            }
            if ((this.onEndEnvironmentRoleGetMembershipDelegate == null)) {
                this.onEndEnvironmentRoleGetMembershipDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleGetMembership);
            }
            if ((this.onEnvironmentRoleGetMembershipCompletedDelegate == null)) {
                this.onEnvironmentRoleGetMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleGetMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleGetMembershipDelegate, new object[] {
                        token,
                        environmentName,
                        roleName}, this.onEndEnvironmentRoleGetMembershipDelegate, this.onEnvironmentRoleGetMembershipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleGetByEnvironment(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleGetByEnvironment(token, environmentName, roleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EnvironmentRole Mercury.Server.Application.IApplication.EndEnvironmentRoleGetByEnvironment(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleGetByEnvironment(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleGetByEnvironment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            string roleName = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleGetByEnvironment(token, environmentName, roleName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleGetByEnvironment(System.IAsyncResult result) {
            Mercury.Server.Application.EnvironmentRole retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleGetByEnvironment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleGetByEnvironmentCompleted(object state) {
            if ((this.EnvironmentRoleGetByEnvironmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleGetByEnvironmentCompleted(this, new EnvironmentRoleGetByEnvironmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleGetByEnvironmentAsync(string token, string environmentName, string roleName) {
            this.EnvironmentRoleGetByEnvironmentAsync(token, environmentName, roleName, null);
        }
        
        public void EnvironmentRoleGetByEnvironmentAsync(string token, string environmentName, string roleName, object userState) {
            if ((this.onBeginEnvironmentRoleGetByEnvironmentDelegate == null)) {
                this.onBeginEnvironmentRoleGetByEnvironmentDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleGetByEnvironment);
            }
            if ((this.onEndEnvironmentRoleGetByEnvironmentDelegate == null)) {
                this.onEndEnvironmentRoleGetByEnvironmentDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleGetByEnvironment);
            }
            if ((this.onEnvironmentRoleGetByEnvironmentCompletedDelegate == null)) {
                this.onEnvironmentRoleGetByEnvironmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleGetByEnvironmentCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleGetByEnvironmentDelegate, new object[] {
                        token,
                        environmentName,
                        roleName}, this.onEndEnvironmentRoleGetByEnvironmentDelegate, this.onEnvironmentRoleGetByEnvironmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleSaveByEnvironment(string token, string environmentName, Mercury.Server.Application.EnvironmentRole environmentRole, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleSaveByEnvironment(token, environmentName, environmentRole, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ObjectSaveResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleSaveByEnvironment(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleSaveByEnvironment(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleSaveByEnvironment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            Mercury.Server.Application.EnvironmentRole environmentRole = ((Mercury.Server.Application.EnvironmentRole)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleSaveByEnvironment(token, environmentName, environmentRole, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleSaveByEnvironment(System.IAsyncResult result) {
            Mercury.Server.Application.ObjectSaveResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleSaveByEnvironment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleSaveByEnvironmentCompleted(object state) {
            if ((this.EnvironmentRoleSaveByEnvironmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleSaveByEnvironmentCompleted(this, new EnvironmentRoleSaveByEnvironmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleSaveByEnvironmentAsync(string token, string environmentName, Mercury.Server.Application.EnvironmentRole environmentRole) {
            this.EnvironmentRoleSaveByEnvironmentAsync(token, environmentName, environmentRole, null);
        }
        
        public void EnvironmentRoleSaveByEnvironmentAsync(string token, string environmentName, Mercury.Server.Application.EnvironmentRole environmentRole, object userState) {
            if ((this.onBeginEnvironmentRoleSaveByEnvironmentDelegate == null)) {
                this.onBeginEnvironmentRoleSaveByEnvironmentDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleSaveByEnvironment);
            }
            if ((this.onEndEnvironmentRoleSaveByEnvironmentDelegate == null)) {
                this.onEndEnvironmentRoleSaveByEnvironmentDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleSaveByEnvironment);
            }
            if ((this.onEnvironmentRoleSaveByEnvironmentCompletedDelegate == null)) {
                this.onEnvironmentRoleSaveByEnvironmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleSaveByEnvironmentCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleSaveByEnvironmentDelegate, new object[] {
                        token,
                        environmentName,
                        environmentRole}, this.onEndEnvironmentRoleSaveByEnvironmentDelegate, this.onEnvironmentRoleSaveByEnvironmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleSetMembership(string token, string environmentName, string roleName, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> roleMembership, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleSetMembership(token, environmentName, roleName, roleMembership, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleSetMembership(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleSetMembership(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleSetMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            string roleName = ((string)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> roleMembership = ((System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership>)(inValues[3]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleSetMembership(token, environmentName, roleName, roleMembership, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleSetMembership(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleSetMembership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleSetMembershipCompleted(object state) {
            if ((this.EnvironmentRoleSetMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleSetMembershipCompleted(this, new EnvironmentRoleSetMembershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleSetMembershipAsync(string token, string environmentName, string roleName, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> roleMembership) {
            this.EnvironmentRoleSetMembershipAsync(token, environmentName, roleName, roleMembership, null);
        }
        
        public void EnvironmentRoleSetMembershipAsync(string token, string environmentName, string roleName, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> roleMembership, object userState) {
            if ((this.onBeginEnvironmentRoleSetMembershipDelegate == null)) {
                this.onBeginEnvironmentRoleSetMembershipDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleSetMembership);
            }
            if ((this.onEndEnvironmentRoleSetMembershipDelegate == null)) {
                this.onEndEnvironmentRoleSetMembershipDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleSetMembership);
            }
            if ((this.onEnvironmentRoleSetMembershipCompletedDelegate == null)) {
                this.onEnvironmentRoleSetMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleSetMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleSetMembershipDelegate, new object[] {
                        token,
                        environmentName,
                        roleName,
                        roleMembership}, this.onEndEnvironmentRoleSetMembershipDelegate, this.onEnvironmentRoleSetMembershipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentRoleSetPermission(string token, string environmentName, string roleName, long permissionId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentRoleSetPermission(token, environmentName, roleName, permissionId, isGranted, isDenied, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndEnvironmentRoleSetPermission(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentRoleSetPermission(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentRoleSetPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            string roleName = ((string)(inValues[2]));
            long permissionId = ((long)(inValues[3]));
            bool isGranted = ((bool)(inValues[4]));
            bool isDenied = ((bool)(inValues[5]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentRoleSetPermission(token, environmentName, roleName, permissionId, isGranted, isDenied, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentRoleSetPermission(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentRoleSetPermission(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentRoleSetPermissionCompleted(object state) {
            if ((this.EnvironmentRoleSetPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentRoleSetPermissionCompleted(this, new EnvironmentRoleSetPermissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentRoleSetPermissionAsync(string token, string environmentName, string roleName, long permissionId, bool isGranted, bool isDenied) {
            this.EnvironmentRoleSetPermissionAsync(token, environmentName, roleName, permissionId, isGranted, isDenied, null);
        }
        
        public void EnvironmentRoleSetPermissionAsync(string token, string environmentName, string roleName, long permissionId, bool isGranted, bool isDenied, object userState) {
            if ((this.onBeginEnvironmentRoleSetPermissionDelegate == null)) {
                this.onBeginEnvironmentRoleSetPermissionDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentRoleSetPermission);
            }
            if ((this.onEndEnvironmentRoleSetPermissionDelegate == null)) {
                this.onEndEnvironmentRoleSetPermissionDelegate = new EndOperationDelegate(this.OnEndEnvironmentRoleSetPermission);
            }
            if ((this.onEnvironmentRoleSetPermissionCompletedDelegate == null)) {
                this.onEnvironmentRoleSetPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentRoleSetPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentRoleSetPermissionDelegate, new object[] {
                        token,
                        environmentName,
                        roleName,
                        permissionId,
                        isGranted,
                        isDenied}, this.onEndEnvironmentRoleSetPermissionDelegate, this.onEnvironmentRoleSetPermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoreObjectDictionary(string token, string objectType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoreObjectDictionary(token, objectType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndCoreObjectDictionary(System.IAsyncResult result) {
            return base.Channel.EndCoreObjectDictionary(result);
        }
        
        private System.IAsyncResult OnBeginCoreObjectDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string objectType = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoreObjectDictionary(token, objectType, callback, asyncState);
        }
        
        private object[] OnEndCoreObjectDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoreObjectDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoreObjectDictionaryCompleted(object state) {
            if ((this.CoreObjectDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoreObjectDictionaryCompleted(this, new CoreObjectDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoreObjectDictionaryAsync(string token, string objectType) {
            this.CoreObjectDictionaryAsync(token, objectType, null);
        }
        
        public void CoreObjectDictionaryAsync(string token, string objectType, object userState) {
            if ((this.onBeginCoreObjectDictionaryDelegate == null)) {
                this.onBeginCoreObjectDictionaryDelegate = new BeginOperationDelegate(this.OnBeginCoreObjectDictionary);
            }
            if ((this.onEndCoreObjectDictionaryDelegate == null)) {
                this.onEndCoreObjectDictionaryDelegate = new EndOperationDelegate(this.OnEndCoreObjectDictionary);
            }
            if ((this.onCoreObjectDictionaryCompletedDelegate == null)) {
                this.onCoreObjectDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoreObjectDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginCoreObjectDictionaryDelegate, new object[] {
                        token,
                        objectType}, this.onEndCoreObjectDictionaryDelegate, this.onCoreObjectDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoreObject_Validate(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoreObject_Validate(token, coreObject, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryStringResponse Mercury.Server.Application.IApplication.EndCoreObject_Validate(System.IAsyncResult result) {
            return base.Channel.EndCoreObject_Validate(result);
        }
        
        private System.IAsyncResult OnBeginCoreObject_Validate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CoreObject coreObject = ((Mercury.Server.Application.CoreObject)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoreObject_Validate(token, coreObject, callback, asyncState);
        }
        
        private object[] OnEndCoreObject_Validate(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryStringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoreObject_Validate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoreObject_ValidateCompleted(object state) {
            if ((this.CoreObject_ValidateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoreObject_ValidateCompleted(this, new CoreObject_ValidateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoreObject_ValidateAsync(string token, Mercury.Server.Application.CoreObject coreObject) {
            this.CoreObject_ValidateAsync(token, coreObject, null);
        }
        
        public void CoreObject_ValidateAsync(string token, Mercury.Server.Application.CoreObject coreObject, object userState) {
            if ((this.onBeginCoreObject_ValidateDelegate == null)) {
                this.onBeginCoreObject_ValidateDelegate = new BeginOperationDelegate(this.OnBeginCoreObject_Validate);
            }
            if ((this.onEndCoreObject_ValidateDelegate == null)) {
                this.onEndCoreObject_ValidateDelegate = new EndOperationDelegate(this.OnEndCoreObject_Validate);
            }
            if ((this.onCoreObject_ValidateCompletedDelegate == null)) {
                this.onCoreObject_ValidateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoreObject_ValidateCompleted);
            }
            base.InvokeAsync(this.onBeginCoreObject_ValidateDelegate, new object[] {
                        token,
                        coreObject}, this.onEndCoreObject_ValidateDelegate, this.onCoreObject_ValidateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoreObject_DataBindingContexts(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoreObject_DataBindingContexts(token, coreObject, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryStringResponse Mercury.Server.Application.IApplication.EndCoreObject_DataBindingContexts(System.IAsyncResult result) {
            return base.Channel.EndCoreObject_DataBindingContexts(result);
        }
        
        private System.IAsyncResult OnBeginCoreObject_DataBindingContexts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CoreObject coreObject = ((Mercury.Server.Application.CoreObject)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoreObject_DataBindingContexts(token, coreObject, callback, asyncState);
        }
        
        private object[] OnEndCoreObject_DataBindingContexts(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryStringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoreObject_DataBindingContexts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoreObject_DataBindingContextsCompleted(object state) {
            if ((this.CoreObject_DataBindingContextsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoreObject_DataBindingContextsCompleted(this, new CoreObject_DataBindingContextsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoreObject_DataBindingContextsAsync(string token, Mercury.Server.Application.CoreObject coreObject) {
            this.CoreObject_DataBindingContextsAsync(token, coreObject, null);
        }
        
        public void CoreObject_DataBindingContextsAsync(string token, Mercury.Server.Application.CoreObject coreObject, object userState) {
            if ((this.onBeginCoreObject_DataBindingContextsDelegate == null)) {
                this.onBeginCoreObject_DataBindingContextsDelegate = new BeginOperationDelegate(this.OnBeginCoreObject_DataBindingContexts);
            }
            if ((this.onEndCoreObject_DataBindingContextsDelegate == null)) {
                this.onEndCoreObject_DataBindingContextsDelegate = new EndOperationDelegate(this.OnEndCoreObject_DataBindingContexts);
            }
            if ((this.onCoreObject_DataBindingContextsCompletedDelegate == null)) {
                this.onCoreObject_DataBindingContextsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoreObject_DataBindingContextsCompleted);
            }
            base.InvokeAsync(this.onBeginCoreObject_DataBindingContextsDelegate, new object[] {
                        token,
                        coreObject}, this.onEndCoreObject_DataBindingContextsDelegate, this.onCoreObject_DataBindingContextsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoreObject_EvaluateDataBinding(string token, Mercury.Server.Application.CoreObject coreObject, string bindingContext, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoreObject_EvaluateDataBinding(token, coreObject, bindingContext, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringResponse Mercury.Server.Application.IApplication.EndCoreObject_EvaluateDataBinding(System.IAsyncResult result) {
            return base.Channel.EndCoreObject_EvaluateDataBinding(result);
        }
        
        private System.IAsyncResult OnBeginCoreObject_EvaluateDataBinding(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CoreObject coreObject = ((Mercury.Server.Application.CoreObject)(inValues[1]));
            string bindingContext = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoreObject_EvaluateDataBinding(token, coreObject, bindingContext, callback, asyncState);
        }
        
        private object[] OnEndCoreObject_EvaluateDataBinding(System.IAsyncResult result) {
            Mercury.Server.Application.StringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoreObject_EvaluateDataBinding(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoreObject_EvaluateDataBindingCompleted(object state) {
            if ((this.CoreObject_EvaluateDataBindingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoreObject_EvaluateDataBindingCompleted(this, new CoreObject_EvaluateDataBindingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoreObject_EvaluateDataBindingAsync(string token, Mercury.Server.Application.CoreObject coreObject, string bindingContext) {
            this.CoreObject_EvaluateDataBindingAsync(token, coreObject, bindingContext, null);
        }
        
        public void CoreObject_EvaluateDataBindingAsync(string token, Mercury.Server.Application.CoreObject coreObject, string bindingContext, object userState) {
            if ((this.onBeginCoreObject_EvaluateDataBindingDelegate == null)) {
                this.onBeginCoreObject_EvaluateDataBindingDelegate = new BeginOperationDelegate(this.OnBeginCoreObject_EvaluateDataBinding);
            }
            if ((this.onEndCoreObject_EvaluateDataBindingDelegate == null)) {
                this.onEndCoreObject_EvaluateDataBindingDelegate = new EndOperationDelegate(this.OnEndCoreObject_EvaluateDataBinding);
            }
            if ((this.onCoreObject_EvaluateDataBindingCompletedDelegate == null)) {
                this.onCoreObject_EvaluateDataBindingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoreObject_EvaluateDataBindingCompleted);
            }
            base.InvokeAsync(this.onBeginCoreObject_EvaluateDataBindingDelegate, new object[] {
                        token,
                        coreObject,
                        bindingContext}, this.onEndCoreObject_EvaluateDataBindingDelegate, this.onCoreObject_EvaluateDataBindingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoreObject_XmlSerialize(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoreObject_XmlSerialize(token, coreObject, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringResponse Mercury.Server.Application.IApplication.EndCoreObject_XmlSerialize(System.IAsyncResult result) {
            return base.Channel.EndCoreObject_XmlSerialize(result);
        }
        
        private System.IAsyncResult OnBeginCoreObject_XmlSerialize(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.CoreObject coreObject = ((Mercury.Server.Application.CoreObject)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoreObject_XmlSerialize(token, coreObject, callback, asyncState);
        }
        
        private object[] OnEndCoreObject_XmlSerialize(System.IAsyncResult result) {
            Mercury.Server.Application.StringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoreObject_XmlSerialize(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoreObject_XmlSerializeCompleted(object state) {
            if ((this.CoreObject_XmlSerializeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoreObject_XmlSerializeCompleted(this, new CoreObject_XmlSerializeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoreObject_XmlSerializeAsync(string token, Mercury.Server.Application.CoreObject coreObject) {
            this.CoreObject_XmlSerializeAsync(token, coreObject, null);
        }
        
        public void CoreObject_XmlSerializeAsync(string token, Mercury.Server.Application.CoreObject coreObject, object userState) {
            if ((this.onBeginCoreObject_XmlSerializeDelegate == null)) {
                this.onBeginCoreObject_XmlSerializeDelegate = new BeginOperationDelegate(this.OnBeginCoreObject_XmlSerialize);
            }
            if ((this.onEndCoreObject_XmlSerializeDelegate == null)) {
                this.onEndCoreObject_XmlSerializeDelegate = new EndOperationDelegate(this.OnEndCoreObject_XmlSerialize);
            }
            if ((this.onCoreObject_XmlSerializeCompletedDelegate == null)) {
                this.onCoreObject_XmlSerializeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoreObject_XmlSerializeCompleted);
            }
            base.InvokeAsync(this.onBeginCoreObject_XmlSerializeDelegate, new object[] {
                        token,
                        coreObject}, this.onEndCoreObject_XmlSerializeDelegate, this.onCoreObject_XmlSerializeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginCoreObject_XmlImport(string token, string serializedXml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoreObject_XmlImport(token, serializedXml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ImportExportResponse Mercury.Server.Application.IApplication.EndCoreObject_XmlImport(System.IAsyncResult result) {
            return base.Channel.EndCoreObject_XmlImport(result);
        }
        
        private System.IAsyncResult OnBeginCoreObject_XmlImport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string serializedXml = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginCoreObject_XmlImport(token, serializedXml, callback, asyncState);
        }
        
        private object[] OnEndCoreObject_XmlImport(System.IAsyncResult result) {
            Mercury.Server.Application.ImportExportResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndCoreObject_XmlImport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoreObject_XmlImportCompleted(object state) {
            if ((this.CoreObject_XmlImportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CoreObject_XmlImportCompleted(this, new CoreObject_XmlImportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CoreObject_XmlImportAsync(string token, string serializedXml) {
            this.CoreObject_XmlImportAsync(token, serializedXml, null);
        }
        
        public void CoreObject_XmlImportAsync(string token, string serializedXml, object userState) {
            if ((this.onBeginCoreObject_XmlImportDelegate == null)) {
                this.onBeginCoreObject_XmlImportDelegate = new BeginOperationDelegate(this.OnBeginCoreObject_XmlImport);
            }
            if ((this.onEndCoreObject_XmlImportDelegate == null)) {
                this.onEndCoreObject_XmlImportDelegate = new EndOperationDelegate(this.OnEndCoreObject_XmlImport);
            }
            if ((this.onCoreObject_XmlImportCompletedDelegate == null)) {
                this.onCoreObject_XmlImportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoreObject_XmlImportCompleted);
            }
            base.InvokeAsync(this.onBeginCoreObject_XmlImportDelegate, new object[] {
                        token,
                        serializedXml}, this.onEndCoreObject_XmlImportDelegate, this.onCoreObject_XmlImportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContactRegardingsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContactRegardingsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.ContactRegardingCollectionResponse Mercury.Server.Application.IApplication.EndContactRegardingsAvailable(System.IAsyncResult result) {
            return base.Channel.EndContactRegardingsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginContactRegardingsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContactRegardingsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndContactRegardingsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.ContactRegardingCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndContactRegardingsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContactRegardingsAvailableCompleted(object state) {
            if ((this.ContactRegardingsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContactRegardingsAvailableCompleted(this, new ContactRegardingsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContactRegardingsAvailableAsync(string token) {
            this.ContactRegardingsAvailableAsync(token, null);
        }
        
        public void ContactRegardingsAvailableAsync(string token, object userState) {
            if ((this.onBeginContactRegardingsAvailableDelegate == null)) {
                this.onBeginContactRegardingsAvailableDelegate = new BeginOperationDelegate(this.OnBeginContactRegardingsAvailable);
            }
            if ((this.onEndContactRegardingsAvailableDelegate == null)) {
                this.onEndContactRegardingsAvailableDelegate = new EndOperationDelegate(this.OnEndContactRegardingsAvailable);
            }
            if ((this.onContactRegardingsAvailableCompletedDelegate == null)) {
                this.onContactRegardingsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContactRegardingsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginContactRegardingsAvailableDelegate, new object[] {
                        token}, this.onEndContactRegardingsAvailableDelegate, this.onContactRegardingsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginContactRegardingDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContactRegardingDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndContactRegardingDictionary(System.IAsyncResult result) {
            return base.Channel.EndContactRegardingDictionary(result);
        }
        
        private System.IAsyncResult OnBeginContactRegardingDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginContactRegardingDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndContactRegardingDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndContactRegardingDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContactRegardingDictionaryCompleted(object state) {
            if ((this.ContactRegardingDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContactRegardingDictionaryCompleted(this, new ContactRegardingDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContactRegardingDictionaryAsync(string token) {
            this.ContactRegardingDictionaryAsync(token, null);
        }
        
        public void ContactRegardingDictionaryAsync(string token, object userState) {
            if ((this.onBeginContactRegardingDictionaryDelegate == null)) {
                this.onBeginContactRegardingDictionaryDelegate = new BeginOperationDelegate(this.OnBeginContactRegardingDictionary);
            }
            if ((this.onEndContactRegardingDictionaryDelegate == null)) {
                this.onEndContactRegardingDictionaryDelegate = new EndOperationDelegate(this.OnEndContactRegardingDictionary);
            }
            if ((this.onContactRegardingDictionaryCompletedDelegate == null)) {
                this.onContactRegardingDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContactRegardingDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginContactRegardingDictionaryDelegate, new object[] {
                        token}, this.onEndContactRegardingDictionaryDelegate, this.onContactRegardingDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginVersionServer(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVersionServer(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Mercury.Server.Application.IApplication.EndVersionServer(System.IAsyncResult result) {
            return base.Channel.EndVersionServer(result);
        }
        
        private System.IAsyncResult OnBeginVersionServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginVersionServer(token, callback, asyncState);
        }
        
        private object[] OnEndVersionServer(System.IAsyncResult result) {
            string retVal = ((Mercury.Server.Application.IApplication)(this)).EndVersionServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVersionServerCompleted(object state) {
            if ((this.VersionServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VersionServerCompleted(this, new VersionServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VersionServerAsync(string token) {
            this.VersionServerAsync(token, null);
        }
        
        public void VersionServerAsync(string token, object userState) {
            if ((this.onBeginVersionServerDelegate == null)) {
                this.onBeginVersionServerDelegate = new BeginOperationDelegate(this.OnBeginVersionServer);
            }
            if ((this.onEndVersionServerDelegate == null)) {
                this.onEndVersionServerDelegate = new EndOperationDelegate(this.OnEndVersionServer);
            }
            if ((this.onVersionServerCompletedDelegate == null)) {
                this.onVersionServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVersionServerCompleted);
            }
            base.InvokeAsync(this.onBeginVersionServerDelegate, new object[] {
                        token}, this.onEndVersionServerDelegate, this.onVersionServerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSessionGet(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSessionGet(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Session Mercury.Server.Application.IApplication.EndSessionGet(System.IAsyncResult result) {
            return base.Channel.EndSessionGet(result);
        }
        
        private System.IAsyncResult OnBeginSessionGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSessionGet(token, callback, asyncState);
        }
        
        private object[] OnEndSessionGet(System.IAsyncResult result) {
            Mercury.Server.Application.Session retVal = ((Mercury.Server.Application.IApplication)(this)).EndSessionGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSessionGetCompleted(object state) {
            if ((this.SessionGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SessionGetCompleted(this, new SessionGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SessionGetAsync(string token) {
            this.SessionGetAsync(token, null);
        }
        
        public void SessionGetAsync(string token, object userState) {
            if ((this.onBeginSessionGetDelegate == null)) {
                this.onBeginSessionGetDelegate = new BeginOperationDelegate(this.OnBeginSessionGet);
            }
            if ((this.onEndSessionGetDelegate == null)) {
                this.onEndSessionGetDelegate = new EndOperationDelegate(this.OnEndSessionGet);
            }
            if ((this.onSessionGetCompletedDelegate == null)) {
                this.onSessionGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSessionGetCompleted);
            }
            base.InvokeAsync(this.onBeginSessionGetDelegate, new object[] {
                        token}, this.onEndSessionGetDelegate, this.onSessionGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginActiveSessionsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActiveSessionsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.AuditAuthenticationCollectionResponse Mercury.Server.Application.IApplication.EndActiveSessionsAvailable(System.IAsyncResult result) {
            return base.Channel.EndActiveSessionsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginActiveSessionsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginActiveSessionsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndActiveSessionsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.AuditAuthenticationCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndActiveSessionsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActiveSessionsAvailableCompleted(object state) {
            if ((this.ActiveSessionsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActiveSessionsAvailableCompleted(this, new ActiveSessionsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActiveSessionsAvailableAsync(string token) {
            this.ActiveSessionsAvailableAsync(token, null);
        }
        
        public void ActiveSessionsAvailableAsync(string token, object userState) {
            if ((this.onBeginActiveSessionsAvailableDelegate == null)) {
                this.onBeginActiveSessionsAvailableDelegate = new BeginOperationDelegate(this.OnBeginActiveSessionsAvailable);
            }
            if ((this.onEndActiveSessionsAvailableDelegate == null)) {
                this.onEndActiveSessionsAvailableDelegate = new EndOperationDelegate(this.OnEndActiveSessionsAvailable);
            }
            if ((this.onActiveSessionsAvailableCompletedDelegate == null)) {
                this.onActiveSessionsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActiveSessionsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginActiveSessionsAvailableDelegate, new object[] {
                        token}, this.onEndActiveSessionsAvailableDelegate, this.onActiveSessionsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnterprisePermissionList(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnterprisePermissionList(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.StringListResponse Mercury.Server.Application.IApplication.EndEnterprisePermissionList(System.IAsyncResult result) {
            return base.Channel.EndEnterprisePermissionList(result);
        }
        
        private System.IAsyncResult OnBeginEnterprisePermissionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnterprisePermissionList(token, callback, asyncState);
        }
        
        private object[] OnEndEnterprisePermissionList(System.IAsyncResult result) {
            Mercury.Server.Application.StringListResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnterprisePermissionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnterprisePermissionListCompleted(object state) {
            if ((this.EnterprisePermissionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnterprisePermissionListCompleted(this, new EnterprisePermissionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnterprisePermissionListAsync(string token) {
            this.EnterprisePermissionListAsync(token, null);
        }
        
        public void EnterprisePermissionListAsync(string token, object userState) {
            if ((this.onBeginEnterprisePermissionListDelegate == null)) {
                this.onBeginEnterprisePermissionListDelegate = new BeginOperationDelegate(this.OnBeginEnterprisePermissionList);
            }
            if ((this.onEndEnterprisePermissionListDelegate == null)) {
                this.onEndEnterprisePermissionListDelegate = new EndOperationDelegate(this.OnEndEnterprisePermissionList);
            }
            if ((this.onEnterprisePermissionListCompletedDelegate == null)) {
                this.onEnterprisePermissionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnterprisePermissionListCompleted);
            }
            base.InvokeAsync(this.onBeginEnterprisePermissionListDelegate, new object[] {
                        token}, this.onEndEnterprisePermissionListDelegate, this.onEnterprisePermissionListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnterprisePermissionDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnterprisePermissionDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndEnterprisePermissionDictionary(System.IAsyncResult result) {
            return base.Channel.EndEnterprisePermissionDictionary(result);
        }
        
        private System.IAsyncResult OnBeginEnterprisePermissionDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnterprisePermissionDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndEnterprisePermissionDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnterprisePermissionDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnterprisePermissionDictionaryCompleted(object state) {
            if ((this.EnterprisePermissionDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnterprisePermissionDictionaryCompleted(this, new EnterprisePermissionDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnterprisePermissionDictionaryAsync(string token) {
            this.EnterprisePermissionDictionaryAsync(token, null);
        }
        
        public void EnterprisePermissionDictionaryAsync(string token, object userState) {
            if ((this.onBeginEnterprisePermissionDictionaryDelegate == null)) {
                this.onBeginEnterprisePermissionDictionaryDelegate = new BeginOperationDelegate(this.OnBeginEnterprisePermissionDictionary);
            }
            if ((this.onEndEnterprisePermissionDictionaryDelegate == null)) {
                this.onEndEnterprisePermissionDictionaryDelegate = new EndOperationDelegate(this.OnEndEnterprisePermissionDictionary);
            }
            if ((this.onEnterprisePermissionDictionaryCompletedDelegate == null)) {
                this.onEnterprisePermissionDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnterprisePermissionDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginEnterprisePermissionDictionaryDelegate, new object[] {
                        token}, this.onEndEnterprisePermissionDictionaryDelegate, this.onEnterprisePermissionDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnterprisePermissionsAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnterprisePermissionsAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.PermissionCollectionResponse Mercury.Server.Application.IApplication.EndEnterprisePermissionsAvailable(System.IAsyncResult result) {
            return base.Channel.EndEnterprisePermissionsAvailable(result);
        }
        
        private System.IAsyncResult OnBeginEnterprisePermissionsAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnterprisePermissionsAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndEnterprisePermissionsAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.PermissionCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnterprisePermissionsAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnterprisePermissionsAvailableCompleted(object state) {
            if ((this.EnterprisePermissionsAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnterprisePermissionsAvailableCompleted(this, new EnterprisePermissionsAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnterprisePermissionsAvailableAsync(string token) {
            this.EnterprisePermissionsAvailableAsync(token, null);
        }
        
        public void EnterprisePermissionsAvailableAsync(string token, object userState) {
            if ((this.onBeginEnterprisePermissionsAvailableDelegate == null)) {
                this.onBeginEnterprisePermissionsAvailableDelegate = new BeginOperationDelegate(this.OnBeginEnterprisePermissionsAvailable);
            }
            if ((this.onEndEnterprisePermissionsAvailableDelegate == null)) {
                this.onEndEnterprisePermissionsAvailableDelegate = new EndOperationDelegate(this.OnEndEnterprisePermissionsAvailable);
            }
            if ((this.onEnterprisePermissionsAvailableCompletedDelegate == null)) {
                this.onEnterprisePermissionsAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnterprisePermissionsAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginEnterprisePermissionsAvailableDelegate, new object[] {
                        token}, this.onEndEnterprisePermissionsAvailableDelegate, this.onEnterprisePermissionsAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityGroupEnterprisePermissionsGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityGroupEnterprisePermissionsGet(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SecurityGroupPermissionCollectionResponse Mercury.Server.Application.IApplication.EndSecurityGroupEnterprisePermissionsGet(System.IAsyncResult result) {
            return base.Channel.EndSecurityGroupEnterprisePermissionsGet(result);
        }
        
        private System.IAsyncResult OnBeginSecurityGroupEnterprisePermissionsGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityGroupEnterprisePermissionsGet(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        private object[] OnEndSecurityGroupEnterprisePermissionsGet(System.IAsyncResult result) {
            Mercury.Server.Application.SecurityGroupPermissionCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityGroupEnterprisePermissionsGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityGroupEnterprisePermissionsGetCompleted(object state) {
            if ((this.SecurityGroupEnterprisePermissionsGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityGroupEnterprisePermissionsGetCompleted(this, new SecurityGroupEnterprisePermissionsGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityGroupEnterprisePermissionsGetAsync(string token, string securityAuthorityName, string securityGroupId) {
            this.SecurityGroupEnterprisePermissionsGetAsync(token, securityAuthorityName, securityGroupId, null);
        }
        
        public void SecurityGroupEnterprisePermissionsGetAsync(string token, string securityAuthorityName, string securityGroupId, object userState) {
            if ((this.onBeginSecurityGroupEnterprisePermissionsGetDelegate == null)) {
                this.onBeginSecurityGroupEnterprisePermissionsGetDelegate = new BeginOperationDelegate(this.OnBeginSecurityGroupEnterprisePermissionsGet);
            }
            if ((this.onEndSecurityGroupEnterprisePermissionsGetDelegate == null)) {
                this.onEndSecurityGroupEnterprisePermissionsGetDelegate = new EndOperationDelegate(this.OnEndSecurityGroupEnterprisePermissionsGet);
            }
            if ((this.onSecurityGroupEnterprisePermissionsGetCompletedDelegate == null)) {
                this.onSecurityGroupEnterprisePermissionsGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityGroupEnterprisePermissionsGetCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityGroupEnterprisePermissionsGetDelegate, new object[] {
                        token,
                        securityAuthorityName,
                        securityGroupId}, this.onEndSecurityGroupEnterprisePermissionsGetDelegate, this.onSecurityGroupEnterprisePermissionsGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityGroupEnterprisePermissionSave(string token, long securityAuthorityId, string securityGroupId, long permissionId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityGroupEnterprisePermissionSave(token, securityAuthorityId, securityGroupId, permissionId, isGranted, isDenied, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndSecurityGroupEnterprisePermissionSave(System.IAsyncResult result) {
            return base.Channel.EndSecurityGroupEnterprisePermissionSave(result);
        }
        
        private System.IAsyncResult OnBeginSecurityGroupEnterprisePermissionSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long securityAuthorityId = ((long)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            long permissionId = ((long)(inValues[3]));
            bool isGranted = ((bool)(inValues[4]));
            bool isDenied = ((bool)(inValues[5]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityGroupEnterprisePermissionSave(token, securityAuthorityId, securityGroupId, permissionId, isGranted, isDenied, callback, asyncState);
        }
        
        private object[] OnEndSecurityGroupEnterprisePermissionSave(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityGroupEnterprisePermissionSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityGroupEnterprisePermissionSaveCompleted(object state) {
            if ((this.SecurityGroupEnterprisePermissionSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityGroupEnterprisePermissionSaveCompleted(this, new SecurityGroupEnterprisePermissionSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityGroupEnterprisePermissionSaveAsync(string token, long securityAuthorityId, string securityGroupId, long permissionId, bool isGranted, bool isDenied) {
            this.SecurityGroupEnterprisePermissionSaveAsync(token, securityAuthorityId, securityGroupId, permissionId, isGranted, isDenied, null);
        }
        
        public void SecurityGroupEnterprisePermissionSaveAsync(string token, long securityAuthorityId, string securityGroupId, long permissionId, bool isGranted, bool isDenied, object userState) {
            if ((this.onBeginSecurityGroupEnterprisePermissionSaveDelegate == null)) {
                this.onBeginSecurityGroupEnterprisePermissionSaveDelegate = new BeginOperationDelegate(this.OnBeginSecurityGroupEnterprisePermissionSave);
            }
            if ((this.onEndSecurityGroupEnterprisePermissionSaveDelegate == null)) {
                this.onEndSecurityGroupEnterprisePermissionSaveDelegate = new EndOperationDelegate(this.OnEndSecurityGroupEnterprisePermissionSave);
            }
            if ((this.onSecurityGroupEnterprisePermissionSaveCompletedDelegate == null)) {
                this.onSecurityGroupEnterprisePermissionSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityGroupEnterprisePermissionSaveCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityGroupEnterprisePermissionSaveDelegate, new object[] {
                        token,
                        securityAuthorityId,
                        securityGroupId,
                        permissionId,
                        isGranted,
                        isDenied}, this.onEndSecurityGroupEnterprisePermissionSaveDelegate, this.onSecurityGroupEnterprisePermissionSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthoritiesAvailable(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthoritiesAvailable(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SecurityAuthorityCollectionResponse Mercury.Server.Application.IApplication.EndSecurityAuthoritiesAvailable(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthoritiesAvailable(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthoritiesAvailable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthoritiesAvailable(token, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthoritiesAvailable(System.IAsyncResult result) {
            Mercury.Server.Application.SecurityAuthorityCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthoritiesAvailable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthoritiesAvailableCompleted(object state) {
            if ((this.SecurityAuthoritiesAvailableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthoritiesAvailableCompleted(this, new SecurityAuthoritiesAvailableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthoritiesAvailableAsync(string token) {
            this.SecurityAuthoritiesAvailableAsync(token, null);
        }
        
        public void SecurityAuthoritiesAvailableAsync(string token, object userState) {
            if ((this.onBeginSecurityAuthoritiesAvailableDelegate == null)) {
                this.onBeginSecurityAuthoritiesAvailableDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthoritiesAvailable);
            }
            if ((this.onEndSecurityAuthoritiesAvailableDelegate == null)) {
                this.onEndSecurityAuthoritiesAvailableDelegate = new EndOperationDelegate(this.OnEndSecurityAuthoritiesAvailable);
            }
            if ((this.onSecurityAuthoritiesAvailableCompletedDelegate == null)) {
                this.onSecurityAuthoritiesAvailableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthoritiesAvailableCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthoritiesAvailableDelegate, new object[] {
                        token}, this.onEndSecurityAuthoritiesAvailableDelegate, this.onSecurityAuthoritiesAvailableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthorityDictionary(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthorityDictionary(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryResponse Mercury.Server.Application.IApplication.EndSecurityAuthorityDictionary(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthorityDictionary(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthorityDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthorityDictionary(token, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthorityDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthorityDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthorityDictionaryCompleted(object state) {
            if ((this.SecurityAuthorityDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthorityDictionaryCompleted(this, new SecurityAuthorityDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthorityDictionaryAsync(string token) {
            this.SecurityAuthorityDictionaryAsync(token, null);
        }
        
        public void SecurityAuthorityDictionaryAsync(string token, object userState) {
            if ((this.onBeginSecurityAuthorityDictionaryDelegate == null)) {
                this.onBeginSecurityAuthorityDictionaryDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthorityDictionary);
            }
            if ((this.onEndSecurityAuthorityDictionaryDelegate == null)) {
                this.onEndSecurityAuthorityDictionaryDelegate = new EndOperationDelegate(this.OnEndSecurityAuthorityDictionary);
            }
            if ((this.onSecurityAuthorityDictionaryCompletedDelegate == null)) {
                this.onSecurityAuthorityDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthorityDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthorityDictionaryDelegate, new object[] {
                        token}, this.onEndSecurityAuthorityDictionaryDelegate, this.onSecurityAuthorityDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthorityGroupGetMembership(string token, long securityAuthorityId, string securityGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthorityGroupGetMembership(token, securityAuthorityId, securityGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DirectoryEntryCollectionResponse Mercury.Server.Application.IApplication.EndSecurityAuthorityGroupGetMembership(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthorityGroupGetMembership(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthorityGroupGetMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long securityAuthorityId = ((long)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthorityGroupGetMembership(token, securityAuthorityId, securityGroupId, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthorityGroupGetMembership(System.IAsyncResult result) {
            Mercury.Server.Application.DirectoryEntryCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthorityGroupGetMembership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthorityGroupGetMembershipCompleted(object state) {
            if ((this.SecurityAuthorityGroupGetMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthorityGroupGetMembershipCompleted(this, new SecurityAuthorityGroupGetMembershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthorityGroupGetMembershipAsync(string token, long securityAuthorityId, string securityGroupId) {
            this.SecurityAuthorityGroupGetMembershipAsync(token, securityAuthorityId, securityGroupId, null);
        }
        
        public void SecurityAuthorityGroupGetMembershipAsync(string token, long securityAuthorityId, string securityGroupId, object userState) {
            if ((this.onBeginSecurityAuthorityGroupGetMembershipDelegate == null)) {
                this.onBeginSecurityAuthorityGroupGetMembershipDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthorityGroupGetMembership);
            }
            if ((this.onEndSecurityAuthorityGroupGetMembershipDelegate == null)) {
                this.onEndSecurityAuthorityGroupGetMembershipDelegate = new EndOperationDelegate(this.OnEndSecurityAuthorityGroupGetMembership);
            }
            if ((this.onSecurityAuthorityGroupGetMembershipCompletedDelegate == null)) {
                this.onSecurityAuthorityGroupGetMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthorityGroupGetMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthorityGroupGetMembershipDelegate, new object[] {
                        token,
                        securityAuthorityId,
                        securityGroupId}, this.onEndSecurityAuthorityGroupGetMembershipDelegate, this.onSecurityAuthorityGroupGetMembershipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthorityGetByName(string token, string securityAuthorityName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthorityGetByName(token, securityAuthorityName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SecurityAuthority Mercury.Server.Application.IApplication.EndSecurityAuthorityGetByName(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthorityGetByName(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthorityGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthorityGetByName(token, securityAuthorityName, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthorityGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.SecurityAuthority retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthorityGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthorityGetByNameCompleted(object state) {
            if ((this.SecurityAuthorityGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthorityGetByNameCompleted(this, new SecurityAuthorityGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthorityGetByNameAsync(string token, string securityAuthorityName) {
            this.SecurityAuthorityGetByNameAsync(token, securityAuthorityName, null);
        }
        
        public void SecurityAuthorityGetByNameAsync(string token, string securityAuthorityName, object userState) {
            if ((this.onBeginSecurityAuthorityGetByNameDelegate == null)) {
                this.onBeginSecurityAuthorityGetByNameDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthorityGetByName);
            }
            if ((this.onEndSecurityAuthorityGetByNameDelegate == null)) {
                this.onEndSecurityAuthorityGetByNameDelegate = new EndOperationDelegate(this.OnEndSecurityAuthorityGetByName);
            }
            if ((this.onSecurityAuthorityGetByNameCompletedDelegate == null)) {
                this.onSecurityAuthorityGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthorityGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthorityGetByNameDelegate, new object[] {
                        token,
                        securityAuthorityName}, this.onEndSecurityAuthorityGetByNameDelegate, this.onSecurityAuthorityGetByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthorityGet(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthorityGet(token, securityAuthorityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SecurityAuthority Mercury.Server.Application.IApplication.EndSecurityAuthorityGet(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthorityGet(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthorityGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long securityAuthorityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthorityGet(token, securityAuthorityId, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthorityGet(System.IAsyncResult result) {
            Mercury.Server.Application.SecurityAuthority retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthorityGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthorityGetCompleted(object state) {
            if ((this.SecurityAuthorityGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthorityGetCompleted(this, new SecurityAuthorityGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthorityGetAsync(string token, long securityAuthorityId) {
            this.SecurityAuthorityGetAsync(token, securityAuthorityId, null);
        }
        
        public void SecurityAuthorityGetAsync(string token, long securityAuthorityId, object userState) {
            if ((this.onBeginSecurityAuthorityGetDelegate == null)) {
                this.onBeginSecurityAuthorityGetDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthorityGet);
            }
            if ((this.onEndSecurityAuthorityGetDelegate == null)) {
                this.onEndSecurityAuthorityGetDelegate = new EndOperationDelegate(this.OnEndSecurityAuthorityGet);
            }
            if ((this.onSecurityAuthorityGetCompletedDelegate == null)) {
                this.onSecurityAuthorityGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthorityGetCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthorityGetDelegate, new object[] {
                        token,
                        securityAuthorityId}, this.onEndSecurityAuthorityGetDelegate, this.onSecurityAuthorityGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthoritySave(string token, Mercury.Server.Application.SecurityAuthority securityAuthority, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthoritySave(token, securityAuthority, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndSecurityAuthoritySave(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthoritySave(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthoritySave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Mercury.Server.Application.SecurityAuthority securityAuthority = ((Mercury.Server.Application.SecurityAuthority)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthoritySave(token, securityAuthority, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthoritySave(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthoritySave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthoritySaveCompleted(object state) {
            if ((this.SecurityAuthoritySaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthoritySaveCompleted(this, new SecurityAuthoritySaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthoritySaveAsync(string token, Mercury.Server.Application.SecurityAuthority securityAuthority) {
            this.SecurityAuthoritySaveAsync(token, securityAuthority, null);
        }
        
        public void SecurityAuthoritySaveAsync(string token, Mercury.Server.Application.SecurityAuthority securityAuthority, object userState) {
            if ((this.onBeginSecurityAuthoritySaveDelegate == null)) {
                this.onBeginSecurityAuthoritySaveDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthoritySave);
            }
            if ((this.onEndSecurityAuthoritySaveDelegate == null)) {
                this.onEndSecurityAuthoritySaveDelegate = new EndOperationDelegate(this.OnEndSecurityAuthoritySave);
            }
            if ((this.onSecurityAuthoritySaveCompletedDelegate == null)) {
                this.onSecurityAuthoritySaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthoritySaveCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthoritySaveDelegate, new object[] {
                        token,
                        securityAuthority}, this.onEndSecurityAuthoritySaveDelegate, this.onSecurityAuthoritySaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthorityDelete(string token, string securityAuthorityName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthorityDelete(token, securityAuthorityName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndSecurityAuthorityDelete(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthorityDelete(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthorityDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthorityDelete(token, securityAuthorityName, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthorityDelete(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthorityDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthorityDeleteCompleted(object state) {
            if ((this.SecurityAuthorityDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthorityDeleteCompleted(this, new SecurityAuthorityDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthorityDeleteAsync(string token, string securityAuthorityName) {
            this.SecurityAuthorityDeleteAsync(token, securityAuthorityName, null);
        }
        
        public void SecurityAuthorityDeleteAsync(string token, string securityAuthorityName, object userState) {
            if ((this.onBeginSecurityAuthorityDeleteDelegate == null)) {
                this.onBeginSecurityAuthorityDeleteDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthorityDelete);
            }
            if ((this.onEndSecurityAuthorityDeleteDelegate == null)) {
                this.onEndSecurityAuthorityDeleteDelegate = new EndOperationDelegate(this.OnEndSecurityAuthorityDelete);
            }
            if ((this.onSecurityAuthorityDeleteCompletedDelegate == null)) {
                this.onSecurityAuthorityDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthorityDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthorityDeleteDelegate, new object[] {
                        token,
                        securityAuthorityName}, this.onEndSecurityAuthorityDeleteDelegate, this.onSecurityAuthorityDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthorityProviderBrowseDirectory(string token, string securityAuthorityName, string directoryPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthorityProviderBrowseDirectory(token, securityAuthorityName, directoryPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DirectoryEntryCollectionResponse Mercury.Server.Application.IApplication.EndSecurityAuthorityProviderBrowseDirectory(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthorityProviderBrowseDirectory(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthorityProviderBrowseDirectory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            string directoryPath = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthorityProviderBrowseDirectory(token, securityAuthorityName, directoryPath, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthorityProviderBrowseDirectory(System.IAsyncResult result) {
            Mercury.Server.Application.DirectoryEntryCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthorityProviderBrowseDirectory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthorityProviderBrowseDirectoryCompleted(object state) {
            if ((this.SecurityAuthorityProviderBrowseDirectoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthorityProviderBrowseDirectoryCompleted(this, new SecurityAuthorityProviderBrowseDirectoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthorityProviderBrowseDirectoryAsync(string token, string securityAuthorityName, string directoryPath) {
            this.SecurityAuthorityProviderBrowseDirectoryAsync(token, securityAuthorityName, directoryPath, null);
        }
        
        public void SecurityAuthorityProviderBrowseDirectoryAsync(string token, string securityAuthorityName, string directoryPath, object userState) {
            if ((this.onBeginSecurityAuthorityProviderBrowseDirectoryDelegate == null)) {
                this.onBeginSecurityAuthorityProviderBrowseDirectoryDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthorityProviderBrowseDirectory);
            }
            if ((this.onEndSecurityAuthorityProviderBrowseDirectoryDelegate == null)) {
                this.onEndSecurityAuthorityProviderBrowseDirectoryDelegate = new EndOperationDelegate(this.OnEndSecurityAuthorityProviderBrowseDirectory);
            }
            if ((this.onSecurityAuthorityProviderBrowseDirectoryCompletedDelegate == null)) {
                this.onSecurityAuthorityProviderBrowseDirectoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthorityProviderBrowseDirectoryCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthorityProviderBrowseDirectoryDelegate, new object[] {
                        token,
                        securityAuthorityName,
                        directoryPath}, this.onEndSecurityAuthorityProviderBrowseDirectoryDelegate, this.onSecurityAuthorityProviderBrowseDirectoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthoritySecurityGroupDictionary(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthoritySecurityGroupDictionary(token, securityAuthorityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DictionaryStringResponse Mercury.Server.Application.IApplication.EndSecurityAuthoritySecurityGroupDictionary(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthoritySecurityGroupDictionary(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthoritySecurityGroupDictionary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long securityAuthorityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthoritySecurityGroupDictionary(token, securityAuthorityId, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthoritySecurityGroupDictionary(System.IAsyncResult result) {
            Mercury.Server.Application.DictionaryStringResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthoritySecurityGroupDictionary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthoritySecurityGroupDictionaryCompleted(object state) {
            if ((this.SecurityAuthoritySecurityGroupDictionaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthoritySecurityGroupDictionaryCompleted(this, new SecurityAuthoritySecurityGroupDictionaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthoritySecurityGroupDictionaryAsync(string token, long securityAuthorityId) {
            this.SecurityAuthoritySecurityGroupDictionaryAsync(token, securityAuthorityId, null);
        }
        
        public void SecurityAuthoritySecurityGroupDictionaryAsync(string token, long securityAuthorityId, object userState) {
            if ((this.onBeginSecurityAuthoritySecurityGroupDictionaryDelegate == null)) {
                this.onBeginSecurityAuthoritySecurityGroupDictionaryDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthoritySecurityGroupDictionary);
            }
            if ((this.onEndSecurityAuthoritySecurityGroupDictionaryDelegate == null)) {
                this.onEndSecurityAuthoritySecurityGroupDictionaryDelegate = new EndOperationDelegate(this.OnEndSecurityAuthoritySecurityGroupDictionary);
            }
            if ((this.onSecurityAuthoritySecurityGroupDictionaryCompletedDelegate == null)) {
                this.onSecurityAuthoritySecurityGroupDictionaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthoritySecurityGroupDictionaryCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthoritySecurityGroupDictionaryDelegate, new object[] {
                        token,
                        securityAuthorityId}, this.onEndSecurityAuthoritySecurityGroupDictionaryDelegate, this.onSecurityAuthoritySecurityGroupDictionaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthoritySecurityGroups(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthoritySecurityGroups(token, securityAuthorityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SecurityGroupCollectionResponse Mercury.Server.Application.IApplication.EndSecurityAuthoritySecurityGroups(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthoritySecurityGroups(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthoritySecurityGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long securityAuthorityId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthoritySecurityGroups(token, securityAuthorityId, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthoritySecurityGroups(System.IAsyncResult result) {
            Mercury.Server.Application.SecurityGroupCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthoritySecurityGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthoritySecurityGroupsCompleted(object state) {
            if ((this.SecurityAuthoritySecurityGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthoritySecurityGroupsCompleted(this, new SecurityAuthoritySecurityGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthoritySecurityGroupsAsync(string token, long securityAuthorityId) {
            this.SecurityAuthoritySecurityGroupsAsync(token, securityAuthorityId, null);
        }
        
        public void SecurityAuthoritySecurityGroupsAsync(string token, long securityAuthorityId, object userState) {
            if ((this.onBeginSecurityAuthoritySecurityGroupsDelegate == null)) {
                this.onBeginSecurityAuthoritySecurityGroupsDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthoritySecurityGroups);
            }
            if ((this.onEndSecurityAuthoritySecurityGroupsDelegate == null)) {
                this.onEndSecurityAuthoritySecurityGroupsDelegate = new EndOperationDelegate(this.OnEndSecurityAuthoritySecurityGroups);
            }
            if ((this.onSecurityAuthoritySecurityGroupsCompletedDelegate == null)) {
                this.onSecurityAuthoritySecurityGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthoritySecurityGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthoritySecurityGroupsDelegate, new object[] {
                        token,
                        securityAuthorityId}, this.onEndSecurityAuthoritySecurityGroupsDelegate, this.onSecurityAuthoritySecurityGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthoritySecurityGroupGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthoritySecurityGroupGet(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.SecurityGroup Mercury.Server.Application.IApplication.EndSecurityAuthoritySecurityGroupGet(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthoritySecurityGroupGet(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthoritySecurityGroupGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthoritySecurityGroupGet(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthoritySecurityGroupGet(System.IAsyncResult result) {
            Mercury.Server.Application.SecurityGroup retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthoritySecurityGroupGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthoritySecurityGroupGetCompleted(object state) {
            if ((this.SecurityAuthoritySecurityGroupGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthoritySecurityGroupGetCompleted(this, new SecurityAuthoritySecurityGroupGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthoritySecurityGroupGetAsync(string token, string securityAuthorityName, string securityGroupId) {
            this.SecurityAuthoritySecurityGroupGetAsync(token, securityAuthorityName, securityGroupId, null);
        }
        
        public void SecurityAuthoritySecurityGroupGetAsync(string token, string securityAuthorityName, string securityGroupId, object userState) {
            if ((this.onBeginSecurityAuthoritySecurityGroupGetDelegate == null)) {
                this.onBeginSecurityAuthoritySecurityGroupGetDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthoritySecurityGroupGet);
            }
            if ((this.onEndSecurityAuthoritySecurityGroupGetDelegate == null)) {
                this.onEndSecurityAuthoritySecurityGroupGetDelegate = new EndOperationDelegate(this.OnEndSecurityAuthoritySecurityGroupGet);
            }
            if ((this.onSecurityAuthoritySecurityGroupGetCompletedDelegate == null)) {
                this.onSecurityAuthoritySecurityGroupGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthoritySecurityGroupGetCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthoritySecurityGroupGetDelegate, new object[] {
                        token,
                        securityAuthorityName,
                        securityGroupId}, this.onEndSecurityAuthoritySecurityGroupGetDelegate, this.onSecurityAuthoritySecurityGroupGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityAuthoritySecurityGroupMembership(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityAuthoritySecurityGroupMembership(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.DirectoryEntryCollectionResponse Mercury.Server.Application.IApplication.EndSecurityAuthoritySecurityGroupMembership(System.IAsyncResult result) {
            return base.Channel.EndSecurityAuthoritySecurityGroupMembership(result);
        }
        
        private System.IAsyncResult OnBeginSecurityAuthoritySecurityGroupMembership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityAuthoritySecurityGroupMembership(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        private object[] OnEndSecurityAuthoritySecurityGroupMembership(System.IAsyncResult result) {
            Mercury.Server.Application.DirectoryEntryCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityAuthoritySecurityGroupMembership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityAuthoritySecurityGroupMembershipCompleted(object state) {
            if ((this.SecurityAuthoritySecurityGroupMembershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityAuthoritySecurityGroupMembershipCompleted(this, new SecurityAuthoritySecurityGroupMembershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityAuthoritySecurityGroupMembershipAsync(string token, string securityAuthorityName, string securityGroupId) {
            this.SecurityAuthoritySecurityGroupMembershipAsync(token, securityAuthorityName, securityGroupId, null);
        }
        
        public void SecurityAuthoritySecurityGroupMembershipAsync(string token, string securityAuthorityName, string securityGroupId, object userState) {
            if ((this.onBeginSecurityAuthoritySecurityGroupMembershipDelegate == null)) {
                this.onBeginSecurityAuthoritySecurityGroupMembershipDelegate = new BeginOperationDelegate(this.OnBeginSecurityAuthoritySecurityGroupMembership);
            }
            if ((this.onEndSecurityAuthoritySecurityGroupMembershipDelegate == null)) {
                this.onEndSecurityAuthoritySecurityGroupMembershipDelegate = new EndOperationDelegate(this.OnEndSecurityAuthoritySecurityGroupMembership);
            }
            if ((this.onSecurityAuthoritySecurityGroupMembershipCompletedDelegate == null)) {
                this.onSecurityAuthoritySecurityGroupMembershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityAuthoritySecurityGroupMembershipCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityAuthoritySecurityGroupMembershipDelegate, new object[] {
                        token,
                        securityAuthorityName,
                        securityGroupId}, this.onEndSecurityAuthoritySecurityGroupMembershipDelegate, this.onSecurityAuthoritySecurityGroupMembershipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentAccessGetByEnvironmentName(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentAccessGetByEnvironmentName(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EnvironmentAccessCollectionResponse Mercury.Server.Application.IApplication.EndEnvironmentAccessGetByEnvironmentName(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentAccessGetByEnvironmentName(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentAccessGetByEnvironmentName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentAccessGetByEnvironmentName(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentAccessGetByEnvironmentName(System.IAsyncResult result) {
            Mercury.Server.Application.EnvironmentAccessCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentAccessGetByEnvironmentName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentAccessGetByEnvironmentNameCompleted(object state) {
            if ((this.EnvironmentAccessGetByEnvironmentNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentAccessGetByEnvironmentNameCompleted(this, new EnvironmentAccessGetByEnvironmentNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentAccessGetByEnvironmentNameAsync(string token, string environmentName) {
            this.EnvironmentAccessGetByEnvironmentNameAsync(token, environmentName, null);
        }
        
        public void EnvironmentAccessGetByEnvironmentNameAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentAccessGetByEnvironmentNameDelegate == null)) {
                this.onBeginEnvironmentAccessGetByEnvironmentNameDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentAccessGetByEnvironmentName);
            }
            if ((this.onEndEnvironmentAccessGetByEnvironmentNameDelegate == null)) {
                this.onEndEnvironmentAccessGetByEnvironmentNameDelegate = new EndOperationDelegate(this.OnEndEnvironmentAccessGetByEnvironmentName);
            }
            if ((this.onEnvironmentAccessGetByEnvironmentNameCompletedDelegate == null)) {
                this.onEnvironmentAccessGetByEnvironmentNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentAccessGetByEnvironmentNameCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentAccessGetByEnvironmentNameDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentAccessGetByEnvironmentNameDelegate, this.onEnvironmentAccessGetByEnvironmentNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityGroupEnvironmentAccessGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityGroupEnvironmentAccessGet(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.EnvironmentAccessCollectionResponse Mercury.Server.Application.IApplication.EndSecurityGroupEnvironmentAccessGet(System.IAsyncResult result) {
            return base.Channel.EndSecurityGroupEnvironmentAccessGet(result);
        }
        
        private System.IAsyncResult OnBeginSecurityGroupEnvironmentAccessGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string securityAuthorityName = ((string)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityGroupEnvironmentAccessGet(token, securityAuthorityName, securityGroupId, callback, asyncState);
        }
        
        private object[] OnEndSecurityGroupEnvironmentAccessGet(System.IAsyncResult result) {
            Mercury.Server.Application.EnvironmentAccessCollectionResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityGroupEnvironmentAccessGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityGroupEnvironmentAccessGetCompleted(object state) {
            if ((this.SecurityGroupEnvironmentAccessGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityGroupEnvironmentAccessGetCompleted(this, new SecurityGroupEnvironmentAccessGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityGroupEnvironmentAccessGetAsync(string token, string securityAuthorityName, string securityGroupId) {
            this.SecurityGroupEnvironmentAccessGetAsync(token, securityAuthorityName, securityGroupId, null);
        }
        
        public void SecurityGroupEnvironmentAccessGetAsync(string token, string securityAuthorityName, string securityGroupId, object userState) {
            if ((this.onBeginSecurityGroupEnvironmentAccessGetDelegate == null)) {
                this.onBeginSecurityGroupEnvironmentAccessGetDelegate = new BeginOperationDelegate(this.OnBeginSecurityGroupEnvironmentAccessGet);
            }
            if ((this.onEndSecurityGroupEnvironmentAccessGetDelegate == null)) {
                this.onEndSecurityGroupEnvironmentAccessGetDelegate = new EndOperationDelegate(this.OnEndSecurityGroupEnvironmentAccessGet);
            }
            if ((this.onSecurityGroupEnvironmentAccessGetCompletedDelegate == null)) {
                this.onSecurityGroupEnvironmentAccessGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityGroupEnvironmentAccessGetCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityGroupEnvironmentAccessGetDelegate, new object[] {
                        token,
                        securityAuthorityName,
                        securityGroupId}, this.onEndSecurityGroupEnvironmentAccessGetDelegate, this.onSecurityGroupEnvironmentAccessGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginSecurityGroupEnvironmentAccessSave(string token, long securityAuthorityId, string securityGroupId, long environmentId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSecurityGroupEnvironmentAccessSave(token, securityAuthorityId, securityGroupId, environmentId, isGranted, isDenied, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.BooleanResponse Mercury.Server.Application.IApplication.EndSecurityGroupEnvironmentAccessSave(System.IAsyncResult result) {
            return base.Channel.EndSecurityGroupEnvironmentAccessSave(result);
        }
        
        private System.IAsyncResult OnBeginSecurityGroupEnvironmentAccessSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long securityAuthorityId = ((long)(inValues[1]));
            string securityGroupId = ((string)(inValues[2]));
            long environmentId = ((long)(inValues[3]));
            bool isGranted = ((bool)(inValues[4]));
            bool isDenied = ((bool)(inValues[5]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginSecurityGroupEnvironmentAccessSave(token, securityAuthorityId, securityGroupId, environmentId, isGranted, isDenied, callback, asyncState);
        }
        
        private object[] OnEndSecurityGroupEnvironmentAccessSave(System.IAsyncResult result) {
            Mercury.Server.Application.BooleanResponse retVal = ((Mercury.Server.Application.IApplication)(this)).EndSecurityGroupEnvironmentAccessSave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSecurityGroupEnvironmentAccessSaveCompleted(object state) {
            if ((this.SecurityGroupEnvironmentAccessSaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SecurityGroupEnvironmentAccessSaveCompleted(this, new SecurityGroupEnvironmentAccessSaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SecurityGroupEnvironmentAccessSaveAsync(string token, long securityAuthorityId, string securityGroupId, long environmentId, bool isGranted, bool isDenied) {
            this.SecurityGroupEnvironmentAccessSaveAsync(token, securityAuthorityId, securityGroupId, environmentId, isGranted, isDenied, null);
        }
        
        public void SecurityGroupEnvironmentAccessSaveAsync(string token, long securityAuthorityId, string securityGroupId, long environmentId, bool isGranted, bool isDenied, object userState) {
            if ((this.onBeginSecurityGroupEnvironmentAccessSaveDelegate == null)) {
                this.onBeginSecurityGroupEnvironmentAccessSaveDelegate = new BeginOperationDelegate(this.OnBeginSecurityGroupEnvironmentAccessSave);
            }
            if ((this.onEndSecurityGroupEnvironmentAccessSaveDelegate == null)) {
                this.onEndSecurityGroupEnvironmentAccessSaveDelegate = new EndOperationDelegate(this.OnEndSecurityGroupEnvironmentAccessSave);
            }
            if ((this.onSecurityGroupEnvironmentAccessSaveCompletedDelegate == null)) {
                this.onSecurityGroupEnvironmentAccessSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSecurityGroupEnvironmentAccessSaveCompleted);
            }
            base.InvokeAsync(this.onBeginSecurityGroupEnvironmentAccessSaveDelegate, new object[] {
                        token,
                        securityAuthorityId,
                        securityGroupId,
                        environmentId,
                        isGranted,
                        isDenied}, this.onEndSecurityGroupEnvironmentAccessSaveDelegate, this.onSecurityGroupEnvironmentAccessSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentGet(string token, long environmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentGet(token, environmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Environment Mercury.Server.Application.IApplication.EndEnvironmentGet(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentGet(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            long environmentId = ((long)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentGet(token, environmentId, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentGet(System.IAsyncResult result) {
            Mercury.Server.Application.Environment retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentGetCompleted(object state) {
            if ((this.EnvironmentGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentGetCompleted(this, new EnvironmentGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentGetAsync(string token, long environmentId) {
            this.EnvironmentGetAsync(token, environmentId, null);
        }
        
        public void EnvironmentGetAsync(string token, long environmentId, object userState) {
            if ((this.onBeginEnvironmentGetDelegate == null)) {
                this.onBeginEnvironmentGetDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentGet);
            }
            if ((this.onEndEnvironmentGetDelegate == null)) {
                this.onEndEnvironmentGetDelegate = new EndOperationDelegate(this.OnEndEnvironmentGet);
            }
            if ((this.onEnvironmentGetCompletedDelegate == null)) {
                this.onEnvironmentGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentGetCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentGetDelegate, new object[] {
                        token,
                        environmentId}, this.onEndEnvironmentGetDelegate, this.onEnvironmentGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Mercury.Server.Application.IApplication.BeginEnvironmentGetByName(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnvironmentGetByName(token, environmentName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Mercury.Server.Application.Environment Mercury.Server.Application.IApplication.EndEnvironmentGetByName(System.IAsyncResult result) {
            return base.Channel.EndEnvironmentGetByName(result);
        }
        
        private System.IAsyncResult OnBeginEnvironmentGetByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string environmentName = ((string)(inValues[1]));
            return ((Mercury.Server.Application.IApplication)(this)).BeginEnvironmentGetByName(token, environmentName, callback, asyncState);
        }
        
        private object[] OnEndEnvironmentGetByName(System.IAsyncResult result) {
            Mercury.Server.Application.Environment retVal = ((Mercury.Server.Application.IApplication)(this)).EndEnvironmentGetByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnvironmentGetByNameCompleted(object state) {
            if ((this.EnvironmentGetByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnvironmentGetByNameCompleted(this, new EnvironmentGetByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnvironmentGetByNameAsync(string token, string environmentName) {
            this.EnvironmentGetByNameAsync(token, environmentName, null);
        }
        
        public void EnvironmentGetByNameAsync(string token, string environmentName, object userState) {
            if ((this.onBeginEnvironmentGetByNameDelegate == null)) {
                this.onBeginEnvironmentGetByNameDelegate = new BeginOperationDelegate(this.OnBeginEnvironmentGetByName);
            }
            if ((this.onEndEnvironmentGetByNameDelegate == null)) {
                this.onEndEnvironmentGetByNameDelegate = new EndOperationDelegate(this.OnEndEnvironmentGetByName);
            }
            if ((this.onEnvironmentGetByNameCompletedDelegate == null)) {
                this.onEnvironmentGetByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnvironmentGetByNameCompleted);
            }
            base.InvokeAsync(this.onBeginEnvironmentGetByNameDelegate, new object[] {
                        token,
                        environmentName}, this.onEndEnvironmentGetByNameDelegate, this.onEnvironmentGetByNameCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Mercury.Server.Application.IApplication CreateChannel() {
            return new ApplicationClientChannel(this);
        }
        
        private class ApplicationClientChannel : ChannelBase<Mercury.Server.Application.IApplication>, Mercury.Server.Application.IApplication {
            
            public ApplicationClientChannel(System.ServiceModel.ClientBase<Mercury.Server.Application.IApplication> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginReportingServerGet(string token, long reportingServerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = reportingServerId;
                System.IAsyncResult _result = base.BeginInvoke("ReportingServerGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ReportingServer EndReportingServerGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ReportingServer _result = ((Mercury.Server.Application.ReportingServer)(base.EndInvoke("ReportingServerGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportingServerGetByName(string token, string reportingServerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = reportingServerName;
                System.IAsyncResult _result = base.BeginInvoke("ReportingServerGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ReportingServer EndReportingServerGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ReportingServer _result = ((Mercury.Server.Application.ReportingServer)(base.EndInvoke("ReportingServerGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportingServerSave(string token, Mercury.Server.Application.ReportingServer reportingServer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = reportingServer;
                System.IAsyncResult _result = base.BeginInvoke("ReportingServerSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndReportingServerSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("ReportingServerSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFaxServersAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("FaxServersAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FaxServerCollectionResponse EndFaxServersAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FaxServerCollectionResponse _result = ((Mercury.Server.Application.FaxServerCollectionResponse)(base.EndInvoke("FaxServersAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFaxServerDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("FaxServerDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndFaxServerDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("FaxServerDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFaxServerGet(string token, long reportingServerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = reportingServerId;
                System.IAsyncResult _result = base.BeginInvoke("FaxServerGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FaxServer EndFaxServerGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FaxServer _result = ((Mercury.Server.Application.FaxServer)(base.EndInvoke("FaxServerGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFaxServerGetByName(string token, string reportingServerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = reportingServerName;
                System.IAsyncResult _result = base.BeginInvoke("FaxServerGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FaxServer EndFaxServerGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FaxServer _result = ((Mercury.Server.Application.FaxServer)(base.EndInvoke("FaxServerGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFaxServerSave(string token, Mercury.Server.Application.FaxServer reportingServer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = reportingServer;
                System.IAsyncResult _result = base.BeginInvoke("FaxServerSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndFaxServerSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("FaxServerSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrintersAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("PrintersAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PrinterCollectionResponse EndPrintersAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PrinterCollectionResponse _result = ((Mercury.Server.Application.PrinterCollectionResponse)(base.EndInvoke("PrintersAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrintQueuesAvailable(string token, string printServerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = printServerName;
                System.IAsyncResult _result = base.BeginInvoke("PrintQueuesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryStringResponse EndPrintQueuesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryStringResponse _result = ((Mercury.Server.Application.DictionaryStringResponse)(base.EndInvoke("PrintQueuesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrinterDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("PrinterDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndPrinterDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("PrinterDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrinterGet(string token, long printerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = printerId;
                System.IAsyncResult _result = base.BeginInvoke("PrinterGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Printer EndPrinterGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Printer _result = ((Mercury.Server.Application.Printer)(base.EndInvoke("PrinterGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrinterGetByName(string token, string printerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = printerName;
                System.IAsyncResult _result = base.BeginInvoke("PrinterGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Printer EndPrinterGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Printer _result = ((Mercury.Server.Application.Printer)(base.EndInvoke("PrinterGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrinterCapabilitiesGet(string token, string printServerName, string printQueueName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = printServerName;
                _args[2] = printQueueName;
                System.IAsyncResult _result = base.BeginInvoke("PrinterCapabilitiesGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PrinterCapabilities EndPrinterCapabilitiesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PrinterCapabilities _result = ((Mercury.Server.Application.PrinterCapabilities)(base.EndInvoke("PrinterCapabilitiesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPrinterSave(string token, Mercury.Server.Application.Printer printer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = printer;
                System.IAsyncResult _result = base.BeginInvoke("PrinterSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndPrinterSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("PrinterSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchGlobal(string token, string criteria, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = criteria;
                System.IAsyncResult _result = base.BeginInvoke("SearchGlobal", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultsGlobalResponse EndSearchGlobal(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultsGlobalResponse _result = ((Mercury.Server.Application.SearchResultsGlobalResponse)(base.EndInvoke("SearchGlobal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchMemberByName(string token, string memberName, System.Nullable<System.DateTime> birthDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = memberName;
                _args[2] = birthDate;
                System.IAsyncResult _result = base.BeginInvoke("SearchMemberByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultsMemberResponse EndSearchMemberByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultsMemberResponse _result = ((Mercury.Server.Application.SearchResultsMemberResponse)(base.EndInvoke("SearchMemberByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchMemberById(string token, string memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("SearchMemberById", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultsMemberResponse EndSearchMemberById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultsMemberResponse _result = ((Mercury.Server.Application.SearchResultsMemberResponse)(base.EndInvoke("SearchMemberById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchMember(string token, string memberName, System.Nullable<System.DateTime> birthDate, string memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = memberName;
                _args[2] = birthDate;
                _args[3] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("SearchMember", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultsMemberResponse EndSearchMember(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultsMemberResponse _result = ((Mercury.Server.Application.SearchResultsMemberResponse)(base.EndInvoke("SearchMember", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchProvider(string token, string memberName, string providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = memberName;
                _args[2] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("SearchProvider", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultsProviderResponse EndSearchProvider(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultsProviderResponse _result = ((Mercury.Server.Application.SearchResultsProviderResponse)(base.EndInvoke("SearchProvider", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchProviderByName(string token, string providerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerName;
                System.IAsyncResult _result = base.BeginInvoke("SearchProviderByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultsProviderResponse EndSearchProviderByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultsProviderResponse _result = ((Mercury.Server.Application.SearchResultsProviderResponse)(base.EndInvoke("SearchProviderByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemClose(string token, long workQueueItemId, long workOutcomeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = workQueueItemId;
                _args[2] = workOutcomeId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemClose", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndWorkQueueItemClose(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("WorkQueueItemClose", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemSuspend(string token, long workQueueItemId, string lastStep, string nextStep, int constraintDays, int milestoneDays, bool releaseItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = token;
                _args[1] = workQueueItemId;
                _args[2] = lastStep;
                _args[3] = nextStep;
                _args[4] = constraintDays;
                _args[5] = milestoneDays;
                _args[6] = releaseItem;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemSuspend", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndWorkQueueItemSuspend(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("WorkQueueItemSuspend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemSendersGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueItemId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemSendersGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueItemSenderCollectionResponse EndWorkQueueItemSendersGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueItemSenderCollectionResponse _result = ((Mercury.Server.Application.WorkQueueItemSenderCollectionResponse)(base.EndInvoke("WorkQueueItemSendersGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemAssignmentHistoryGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueItemId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemAssignmentHistoryGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse EndWorkQueueItemAssignmentHistoryGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse _result = ((Mercury.Server.Application.WorkQueueItemAssignmentHistoryCollectionResponse)(base.EndInvoke("WorkQueueItemAssignmentHistoryGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemWorkflowStepsGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueItemId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemWorkflowStepsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse EndWorkQueueItemWorkflowStepsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse _result = ((Mercury.Server.Application.WorkQueueItemWorkflowStepCollectionResponse)(base.EndInvoke("WorkQueueItemWorkflowStepsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemsGetCount(string token, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = filters;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndWorkQueueItemsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("WorkQueueItemsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemsGetCountByView(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = workQueueView;
                _args[2] = filters;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemsGetCountByView", _args, callback, asyncState);
                return _result;
            }
            
            public long EndWorkQueueItemsGetCountByView(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("WorkQueueItemsGetCountByView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemsGetByViewPage(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataFilterDescriptor> filters, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.DataSortDescriptor> sorts, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = token;
                _args[1] = workQueueView;
                _args[2] = filters;
                _args[3] = sorts;
                _args[4] = initialRow;
                _args[5] = count;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemsGetByViewPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueItemCollectionResponse EndWorkQueueItemsGetByViewPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueItemCollectionResponse _result = ((Mercury.Server.Application.WorkQueueItemCollectionResponse)(base.EndInvoke("WorkQueueItemsGetByViewPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkTeamsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkTeamsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkTeamCollectionResponse EndWorkTeamsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkTeamCollectionResponse _result = ((Mercury.Server.Application.WorkTeamCollectionResponse)(base.EndInvoke("WorkTeamsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkTeamsForSession(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkTeamsForSession", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkTeamCollectionResponse EndWorkTeamsForSession(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkTeamCollectionResponse _result = ((Mercury.Server.Application.WorkTeamCollectionResponse)(base.EndInvoke("WorkTeamsForSession", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkTeamGet(string token, long workTeamId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workTeamId;
                System.IAsyncResult _result = base.BeginInvoke("WorkTeamGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkTeam EndWorkTeamGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkTeam _result = ((Mercury.Server.Application.WorkTeam)(base.EndInvoke("WorkTeamGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkTeamGetByName(string token, string workTeamName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workTeamName;
                System.IAsyncResult _result = base.BeginInvoke("WorkTeamGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkTeam EndWorkTeamGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkTeam _result = ((Mercury.Server.Application.WorkTeam)(base.EndInvoke("WorkTeamGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkTeamSave(string token, Mercury.Server.Application.WorkTeam workTeam, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workTeam;
                System.IAsyncResult _result = base.BeginInvoke("WorkTeamSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndWorkTeamSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("WorkTeamSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueViewsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueViewsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueViewCollectionResponse EndWorkQueueViewsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueViewCollectionResponse _result = ((Mercury.Server.Application.WorkQueueViewCollectionResponse)(base.EndInvoke("WorkQueueViewsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueViewDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueViewDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndWorkQueueViewDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("WorkQueueViewDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueViewGet(string token, long workQueueViewId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueViewId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueViewGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueView EndWorkQueueViewGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueView _result = ((Mercury.Server.Application.WorkQueueView)(base.EndInvoke("WorkQueueViewGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueViewGetByName(string token, string workQueueViewName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueViewName;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueViewGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueView EndWorkQueueViewGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueView _result = ((Mercury.Server.Application.WorkQueueView)(base.EndInvoke("WorkQueueViewGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueViewSave(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueView;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueViewSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndWorkQueueViewSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("WorkQueueViewSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueView_ValidateFieldDefinition(string token, Mercury.Server.Application.WorkQueueView workQueueView, Mercury.Server.Application.WorkQueueViewFieldDefinition fieldDefinition, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = workQueueView;
                _args[2] = fieldDefinition;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueView_ValidateFieldDefinition", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryStringResponse EndWorkQueueView_ValidateFieldDefinition(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryStringResponse _result = ((Mercury.Server.Application.DictionaryStringResponse)(base.EndInvoke("WorkQueueView_ValidateFieldDefinition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueView_WellKnownFields(string token, Mercury.Server.Application.WorkQueueView workQueueView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueView;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueView_WellKnownFields", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, bool> EndWorkQueueView_WellKnownFields(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, bool> _result = ((System.Collections.Generic.Dictionary<string, bool>)(base.EndInvoke("WorkQueueView_WellKnownFields", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueMonitorSummary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueMonitorSummary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueSummaryCollectionResponse EndWorkQueueMonitorSummary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueSummaryCollectionResponse _result = ((Mercury.Server.Application.WorkQueueSummaryCollectionResponse)(base.EndInvoke("WorkQueueMonitorSummary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueMonitorAgingByWorkQueue(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueMonitorAgingByWorkQueue", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryKeyCountResponse EndWorkQueueMonitorAgingByWorkQueue(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryKeyCountResponse _result = ((Mercury.Server.Application.DictionaryKeyCountResponse)(base.EndInvoke("WorkQueueMonitorAgingByWorkQueue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueMonitorAgingAvailableByWorkQueue(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueMonitorAgingAvailableByWorkQueue", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryKeyCountResponse EndWorkQueueMonitorAgingAvailableByWorkQueue(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryKeyCountResponse _result = ((Mercury.Server.Application.DictionaryKeyCountResponse)(base.EndInvoke("WorkQueueMonitorAgingAvailableByWorkQueue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportingServersAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ReportingServersAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ReportingServerCollectionResponse EndReportingServersAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ReportingServerCollectionResponse _result = ((Mercury.Server.Application.ReportingServerCollectionResponse)(base.EndInvoke("ReportingServersAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReportingServerDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ReportingServerDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndReportingServerDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("ReportingServerDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoutingRuleGet(string token, long routingRuleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = routingRuleId;
                System.IAsyncResult _result = base.BeginInvoke("RoutingRuleGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.RoutingRule EndRoutingRuleGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.RoutingRule _result = ((Mercury.Server.Application.RoutingRule)(base.EndInvoke("RoutingRuleGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoutingRuleSave(string token, Mercury.Server.Application.RoutingRule routingRule, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = routingRule;
                System.IAsyncResult _result = base.BeginInvoke("RoutingRuleSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndRoutingRuleSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("RoutingRuleSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkflowCollectionResponse EndWorkflowsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkflowCollectionResponse _result = ((Mercury.Server.Application.WorkflowCollectionResponse)(base.EndInvoke("WorkflowsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowGet(string token, long workflowId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workflowId;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Workflow EndWorkflowGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Workflow _result = ((Mercury.Server.Application.Workflow)(base.EndInvoke("WorkflowGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowGetByName(string token, string workflowName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workflowName;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Workflow EndWorkflowGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Workflow _result = ((Mercury.Server.Application.Workflow)(base.EndInvoke("WorkflowGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowGetByWorkQueueId(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueId;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowGetByWorkQueueId", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Workflow EndWorkflowGetByWorkQueueId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Workflow _result = ((Mercury.Server.Application.Workflow)(base.EndInvoke("WorkflowGetByWorkQueueId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowSave(string token, Mercury.Server.Application.Workflow workflow, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workflow;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndWorkflowSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("WorkflowSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowStart(string token, Mercury.Server.Application.WorkflowStartRequest startRequest, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = startRequest;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowStart", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkflowResponse EndWorkflowStart(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkflowResponse _result = ((Mercury.Server.Application.WorkflowResponse)(base.EndInvoke("WorkflowStart", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkflowContinue(string token, string workflowName, System.Guid workflowInstanceId, Mercury.Server.Application.WorkflowUserInteractionResponseBase userInteractionResponse, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = workflowName;
                _args[2] = workflowInstanceId;
                _args[3] = userInteractionResponse;
                System.IAsyncResult _result = base.BeginInvoke("WorkflowContinue", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkflowResponse EndWorkflowContinue(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkflowResponse _result = ((Mercury.Server.Application.WorkflowResponse)(base.EndInvoke("WorkflowContinue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkOutcomesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkOutcomesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkOutcomeCollectionResponse EndWorkOutcomesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkOutcomeCollectionResponse _result = ((Mercury.Server.Application.WorkOutcomeCollectionResponse)(base.EndInvoke("WorkOutcomesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkOutcomeDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkOutcomeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndWorkOutcomeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("WorkOutcomeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkOutcomeGet(string token, long workOutcomeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workOutcomeId;
                System.IAsyncResult _result = base.BeginInvoke("WorkOutcomeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkOutcome EndWorkOutcomeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkOutcome _result = ((Mercury.Server.Application.WorkOutcome)(base.EndInvoke("WorkOutcomeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkOutcomeGetByName(string token, string workOutcomeName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workOutcomeName;
                System.IAsyncResult _result = base.BeginInvoke("WorkOutcomeGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkOutcome EndWorkOutcomeGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkOutcome _result = ((Mercury.Server.Application.WorkOutcome)(base.EndInvoke("WorkOutcomeGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkOutcomeSave(string token, Mercury.Server.Application.WorkOutcome workOutcome, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workOutcome;
                System.IAsyncResult _result = base.BeginInvoke("WorkOutcomeSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndWorkOutcomeSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("WorkOutcomeSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueuesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueuesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueCollectionResponse EndWorkQueuesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueCollectionResponse _result = ((Mercury.Server.Application.WorkQueueCollectionResponse)(base.EndInvoke("WorkQueuesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndWorkQueueDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("WorkQueueDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueGet(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueue EndWorkQueueGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueue _result = ((Mercury.Server.Application.WorkQueue)(base.EndInvoke("WorkQueueGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueGetByName(string token, string workQueueName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueName;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueue EndWorkQueueGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueue _result = ((Mercury.Server.Application.WorkQueue)(base.EndInvoke("WorkQueueGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueGetByWorkQueueItem(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueItemId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueGetByWorkQueueItem", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueue EndWorkQueueGetByWorkQueueItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueue _result = ((Mercury.Server.Application.WorkQueue)(base.EndInvoke("WorkQueueGetByWorkQueueItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueSave(string token, Mercury.Server.Application.WorkQueue workQueue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueue;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndWorkQueueSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("WorkQueueSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueGetWork(string token, long workQueueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueGetWork", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.GetWorkResponse EndWorkQueueGetWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.GetWorkResponse _result = ((Mercury.Server.Application.GetWorkResponse)(base.EndInvoke("WorkQueueGetWork", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueInsertEntity(string token, long workQueueId, long entityId, Mercury.Server.Application.CoreObject sender, Mercury.Server.Application.CoreObject eventObject, long eventInstanceId, string eventDescription, int priority, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = token;
                _args[1] = workQueueId;
                _args[2] = entityId;
                _args[3] = sender;
                _args[4] = eventObject;
                _args[5] = eventInstanceId;
                _args[6] = eventDescription;
                _args[7] = priority;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueInsertEntity", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndWorkQueueInsertEntity(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("WorkQueueInsertEntity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemGet(string token, long workQueueItemId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = workQueueItemId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.WorkQueueItem EndWorkQueueItemGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.WorkQueueItem _result = ((Mercury.Server.Application.WorkQueueItem)(base.EndInvoke("WorkQueueItemGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemAssignTo(string token, long workQueueItemId, long securityAuthorityId, string userAccountId, string userAccountName, string userDisplayName, string assignmentSource, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = token;
                _args[1] = workQueueItemId;
                _args[2] = securityAuthorityId;
                _args[3] = userAccountId;
                _args[4] = userAccountName;
                _args[5] = userDisplayName;
                _args[6] = assignmentSource;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemAssignTo", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndWorkQueueItemAssignTo(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("WorkQueueItemAssignTo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWorkQueueItemMoveToQueue(string token, long workQueueItemId, long workQueueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = workQueueItemId;
                _args[2] = workQueueId;
                System.IAsyncResult _result = base.BeginInvoke("WorkQueueItemMoveToQueue", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndWorkQueueItemMoveToQueue(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("WorkQueueItemMoveToQueue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationGet(string token, long populationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Population EndPopulationGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Population _result = ((Mercury.Server.Application.Population)(base.EndInvoke("PopulationGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationServiceEventGet(string token, long populationServiceEventId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationServiceEventId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationServiceEventGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationServiceEvent EndPopulationServiceEventGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationServiceEvent _result = ((Mercury.Server.Application.PopulationServiceEvent)(base.EndInvoke("PopulationServiceEventGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationSave(string token, Mercury.Server.Application.Population population, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = population;
                System.IAsyncResult _result = base.BeginInvoke("PopulationSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndPopulationSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("PopulationSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationDelete(string token, long populationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationDelete", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndPopulationDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("PopulationDelete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulation_DataBindingContexts(string token, Mercury.Server.Application.Population population, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = population;
                System.IAsyncResult _result = base.BeginInvoke("Population_DataBindingContexts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndPopulation_DataBindingContexts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("Population_DataBindingContexts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipGet(string token, long populationMembershipId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationMembershipId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembership EndPopulationMembershipGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembership _result = ((Mercury.Server.Application.PopulationMembership)(base.EndInvoke("PopulationMembershipGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipServiceEventsGetByPopulationMembership(string token, long populationMembershipId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationMembershipId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipServiceEventsGetByPopulationMembership", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse EndPopulationMembershipServiceEventsGetByPopulationMembership(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse _result = ((Mercury.Server.Application.PopulationMembershipServiceEventCollectionResponse)(base.EndInvoke("PopulationMembershipServiceEventsGetByPopulationMembership", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipServiceEventGet(string token, long populationMembershipServiceEventId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationMembershipServiceEventId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipServiceEventGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipServiceEvent EndPopulationMembershipServiceEventGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipServiceEvent _result = ((Mercury.Server.Application.PopulationMembershipServiceEvent)(base.EndInvoke("PopulationMembershipServiceEventGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipGetByMember(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipGetByMember", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipCollectionResponse EndPopulationMembershipGetByMember(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipCollectionResponse _result = ((Mercury.Server.Application.PopulationMembershipCollectionResponse)(base.EndInvoke("PopulationMembershipGetByMember", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipSummaryByMember(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipSummaryByMember", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse EndPopulationMembershipSummaryByMember(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse _result = ((Mercury.Server.Application.PopulationMembershipSummaryCollectionResponse)(base.EndInvoke("PopulationMembershipSummaryByMember", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipServiceEventsByMembershipDataView(string token, long membershipId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = membershipId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipServiceEventsByMembershipDataView", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse EndPopulationMembershipServiceEventsByMembershipDataView(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse _result = ((Mercury.Server.Application.PopulationMembershipServiceEventDataViewCollectionResponse)(base.EndInvoke("PopulationMembershipServiceEventsByMembershipDataView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipTriggerEventsByMembershipDataView(string token, long membershipId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = membershipId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipTriggerEventsByMembershipDataView", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse EndPopulationMembershipTriggerEventsByMembershipDataView(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse _result = ((Mercury.Server.Application.PopulationMembershipTriggerEventDataViewCollectionResponse)(base.EndInvoke("PopulationMembershipTriggerEventsByMembershipDataView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipGetCountByName(string token, long populationId, string namePrefix, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = populationId;
                _args[2] = namePrefix;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipGetCountByName", _args, callback, asyncState);
                return _result;
            }
            
            public long EndPopulationMembershipGetCountByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("PopulationMembershipGetCountByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationMembershipGetByMembershipPage(string token, long populationId, string namePrefix, long initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = token;
                _args[1] = populationId;
                _args[2] = namePrefix;
                _args[3] = initialRow;
                _args[4] = count;
                System.IAsyncResult _result = base.BeginInvoke("PopulationMembershipGetByMembershipPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse EndPopulationMembershipGetByMembershipPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse _result = ((Mercury.Server.Application.PopulationMembershipEntryStatusDataViewCollectionResponse)(base.EndInvoke("PopulationMembershipGetByMembershipPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Provider EndProviderGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Provider _result = ((Mercury.Server.Application.Provider)(base.EndInvoke("ProviderGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderGetByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderGetByEntityId", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Provider EndProviderGetByEntityId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Provider _result = ((Mercury.Server.Application.Provider)(base.EndInvoke("ProviderGetByEntityId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderEnrollmentsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderEnrollmentsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderEnrollmentCollectionResponse EndProviderEnrollmentsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderEnrollmentCollectionResponse _result = ((Mercury.Server.Application.ProviderEnrollmentCollectionResponse)(base.EndInvoke("ProviderEnrollmentsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderEnrollmentGet(string token, long providerEnrollmentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerEnrollmentId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderEnrollmentGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderEnrollment EndProviderEnrollmentGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderEnrollment _result = ((Mercury.Server.Application.ProviderEnrollment)(base.EndInvoke("ProviderEnrollmentGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderAffiliationsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderAffiliationsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderAffiliationCollectionResponse EndProviderAffiliationsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderAffiliationCollectionResponse _result = ((Mercury.Server.Application.ProviderAffiliationCollectionResponse)(base.EndInvoke("ProviderAffiliationsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderAffiliationGet(string token, long providerAffiliationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerAffiliationId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderAffiliationGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderAffiliation EndProviderAffiliationGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderAffiliation _result = ((Mercury.Server.Application.ProviderAffiliation)(base.EndInvoke("ProviderAffiliationGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderContractsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderContractsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderContractCollectionResponse EndProviderContractsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderContractCollectionResponse _result = ((Mercury.Server.Application.ProviderContractCollectionResponse)(base.EndInvoke("ProviderContractsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderContractGet(string token, long providerContractId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerContractId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderContractGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderContract EndProviderContractGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderContract _result = ((Mercury.Server.Application.ProviderContract)(base.EndInvoke("ProviderContractGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProviderServiceLocationsGet(string token, long providerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = providerId;
                System.IAsyncResult _result = base.BeginInvoke("ProviderServiceLocationsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProviderServiceLocationCollectionResponse EndProviderServiceLocationsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProviderServiceLocationCollectionResponse _result = ((Mercury.Server.Application.ProviderServiceLocationCollectionResponse)(base.EndInvoke("ProviderServiceLocationsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSponsorGet(string token, long sponsorId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = sponsorId;
                System.IAsyncResult _result = base.BeginInvoke("SponsorGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Sponsor EndSponsorGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Sponsor _result = ((Mercury.Server.Application.Sponsor)(base.EndInvoke("SponsorGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRoutingRulesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("RoutingRulesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.RoutingRuleCollectionResponse EndRoutingRulesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.RoutingRuleCollectionResponse _result = ((Mercury.Server.Application.RoutingRuleCollectionResponse)(base.EndInvoke("RoutingRulesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Member EndMemberGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Member _result = ((Mercury.Server.Application.Member)(base.EndInvoke("MemberGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberGetByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("MemberGetByEntityId", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Member EndMemberGetByEntityId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Member _result = ((Mercury.Server.Application.Member)(base.EndInvoke("MemberGetByEntityId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberGetDemographics(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberGetDemographics", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberDemographicsResponse EndMemberGetDemographics(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberDemographicsResponse _result = ((Mercury.Server.Application.MemberDemographicsResponse)(base.EndInvoke("MemberGetDemographics", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberGetDemographicsByEntityId(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("MemberGetDemographicsByEntityId", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberDemographicsResponse EndMemberGetDemographicsByEntityId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberDemographicsResponse _result = ((Mercury.Server.Application.MemberDemographicsResponse)(base.EndInvoke("MemberGetDemographicsByEntityId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberEnrollmentId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollment EndMemberEnrollmentGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollment _result = ((Mercury.Server.Application.MemberEnrollment)(base.EndInvoke("MemberEnrollmentGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentsGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentCollectionResponse EndMemberEnrollmentsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentCollectionResponse _result = ((Mercury.Server.Application.MemberEnrollmentCollectionResponse)(base.EndInvoke("MemberEnrollmentsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentCoverageGet(string token, long memberEnrollmentCoverageId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberEnrollmentCoverageId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentCoverageGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentCoverage EndMemberEnrollmentCoverageGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentCoverage _result = ((Mercury.Server.Application.MemberEnrollmentCoverage)(base.EndInvoke("MemberEnrollmentCoverageGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentCoveragesGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberEnrollmentId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentCoveragesGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse EndMemberEnrollmentCoveragesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse _result = ((Mercury.Server.Application.MemberEnrollmentCoverageCollectionResponse)(base.EndInvoke("MemberEnrollmentCoveragesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentPcpGet(string token, long memberEnrollmentPcpId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberEnrollmentPcpId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentPcpGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentPcp EndMemberEnrollmentPcpGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentPcp _result = ((Mercury.Server.Application.MemberEnrollmentPcp)(base.EndInvoke("MemberEnrollmentPcpGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentPcpsGet(string token, long memberEnrollmentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberEnrollmentId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentPcpsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse EndMemberEnrollmentPcpsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse _result = ((Mercury.Server.Application.MemberEnrollmentPcpCollectionResponse)(base.EndInvoke("MemberEnrollmentPcpsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentTplCobGet(string token, long memberEnrollmentTplCobId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberEnrollmentTplCobId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentTplCobGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentTplCob EndMemberEnrollmentTplCobGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentTplCob _result = ((Mercury.Server.Application.MemberEnrollmentTplCob)(base.EndInvoke("MemberEnrollmentTplCobGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberEnrollmentTplCobsGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberEnrollmentTplCobsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse EndMemberEnrollmentTplCobsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse _result = ((Mercury.Server.Application.MemberEnrollmentTplCobCollectionResponse)(base.EndInvoke("MemberEnrollmentTplCobsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberRelationshipGet(string token, long memberRelationshipId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberRelationshipId;
                System.IAsyncResult _result = base.BeginInvoke("MemberRelationshipGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberRelationship EndMemberRelationshipGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberRelationship _result = ((Mercury.Server.Application.MemberRelationship)(base.EndInvoke("MemberRelationshipGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberRelationshipsGet(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberRelationshipsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberRelationshipCollectionResponse EndMemberRelationshipsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberRelationshipCollectionResponse _result = ((Mercury.Server.Application.MemberRelationshipCollectionResponse)(base.EndInvoke("MemberRelationshipsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMetricsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("MetricsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MetricCollectionResponse EndMetricsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MetricCollectionResponse _result = ((Mercury.Server.Application.MetricCollectionResponse)(base.EndInvoke("MetricsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMetricGet(string token, long metricId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = metricId;
                System.IAsyncResult _result = base.BeginInvoke("MetricGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Metric EndMetricGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Metric _result = ((Mercury.Server.Application.Metric)(base.EndInvoke("MetricGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMetricSave(string token, Mercury.Server.Application.Metric metric, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = metric;
                System.IAsyncResult _result = base.BeginInvoke("MetricSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndMetricSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("MetricSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberMetricAddManual(string token, long memberId, long metricId, System.DateTime eventDate, decimal value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = metricId;
                _args[3] = eventDate;
                _args[4] = value;
                System.IAsyncResult _result = base.BeginInvoke("MemberMetricAddManual", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndMemberMetricAddManual(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("MemberMetricAddManual", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberMetricRemoveManual(string token, long memberMetricId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberMetricId;
                System.IAsyncResult _result = base.BeginInvoke("MemberMetricRemoveManual", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndMemberMetricRemoveManual(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("MemberMetricRemoveManual", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberMetricsGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = showHidden;
                System.IAsyncResult _result = base.BeginInvoke("MemberMetricsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMemberMetricsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MemberMetricsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberMetricsGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = initialRow;
                _args[3] = count;
                _args[4] = showHidden;
                System.IAsyncResult _result = base.BeginInvoke("MemberMetricsGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberMetricCollectionResponse EndMemberMetricsGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberMetricCollectionResponse _result = ((Mercury.Server.Application.MemberMetricCollectionResponse)(base.EndInvoke("MemberMetricsGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("PopulationTypesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationTypeCollectionResponse EndPopulationTypesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationTypeCollectionResponse _result = ((Mercury.Server.Application.PopulationTypeCollectionResponse)(base.EndInvoke("PopulationTypesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationTypeGet(string token, long populationTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationTypeId;
                System.IAsyncResult _result = base.BeginInvoke("PopulationTypeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationType EndPopulationTypeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationType _result = ((Mercury.Server.Application.PopulationType)(base.EndInvoke("PopulationTypeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationTypeSave(string token, Mercury.Server.Application.PopulationType populationType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = populationType;
                System.IAsyncResult _result = base.BeginInvoke("PopulationTypeSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndPopulationTypeSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("PopulationTypeSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPopulationsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("PopulationsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PopulationHeadersCollectionResponse EndPopulationsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PopulationHeadersCollectionResponse _result = ((Mercury.Server.Application.PopulationHeadersCollectionResponse)(base.EndInvoke("PopulationsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsurerDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("InsurerDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndInsurerDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("InsurerDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsurerGet(string token, long insurerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = insurerId;
                System.IAsyncResult _result = base.BeginInvoke("InsurerGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Insurer EndInsurerGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Insurer _result = ((Mercury.Server.Application.Insurer)(base.EndInvoke("InsurerGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProgramsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ProgramsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProgramCollectionResponse EndProgramsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProgramCollectionResponse _result = ((Mercury.Server.Application.ProgramCollectionResponse)(base.EndInvoke("ProgramsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProgramDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ProgramDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndProgramDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("ProgramDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProgramGet(string token, long programId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = programId;
                System.IAsyncResult _result = base.BeginInvoke("ProgramGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Program EndProgramGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Program _result = ((Mercury.Server.Application.Program)(base.EndInvoke("ProgramGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceHeadersGet(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceHeadersGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse EndMedicalServiceHeadersGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse _result = ((Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse)(base.EndInvoke("MedicalServiceHeadersGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceHeadersGetByType(string token, Mercury.Server.Application.MedicalServiceType serviceType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceType;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceHeadersGetByType", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse EndMedicalServiceHeadersGetByType(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse _result = ((Mercury.Server.Application.SearchResultMedicalServiceHeaderCollectionResponse)(base.EndInvoke("MedicalServiceHeadersGetByType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceGet(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceId;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Service EndMedicalServiceGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Service _result = ((Mercury.Server.Application.Service)(base.EndInvoke("MedicalServiceGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceGetIdByName(string token, string serviceName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceName;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceGetIdByName", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMedicalServiceGetIdByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MedicalServiceGetIdByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceDelete(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceId;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceDelete", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndMedicalServiceDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("MedicalServiceDelete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSingletonGet(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceId;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSingletonGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ServiceSingleton EndMedicalServiceSingletonGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ServiceSingleton _result = ((Mercury.Server.Application.ServiceSingleton)(base.EndInvoke("MedicalServiceSingletonGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSingletonSave(string token, Mercury.Server.Application.ServiceSingleton singleton, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = singleton;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSingletonSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndMedicalServiceSingletonSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("MedicalServiceSingletonSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSingletonDefinitionValidate(string token, Mercury.Server.Application.ServiceSingletonDefinition singletonDefinition, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = singletonDefinition;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSingletonDefinitionValidate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndMedicalServiceSingletonDefinitionValidate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("MedicalServiceSingletonDefinitionValidate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSingletonPreview(string token, Mercury.Server.Application.ServiceSingleton serviceSingleton, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceSingleton;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSingletonPreview", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse EndMedicalServiceSingletonPreview(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse _result = ((Mercury.Server.Application.MedicalServiceDetailSingletonCollectionResponse)(base.EndInvoke("MedicalServiceSingletonPreview", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSetPreview(string token, Mercury.Server.Application.ServiceSet serviceSet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceSet;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSetPreview", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse EndMedicalServiceSetPreview(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse _result = ((Mercury.Server.Application.MedicalServiceDetailSetCollectionResponse)(base.EndInvoke("MedicalServiceSetPreview", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSetGet(string token, long serviceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceId;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSetGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ServiceSet EndMedicalServiceSetGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ServiceSet _result = ((Mercury.Server.Application.ServiceSet)(base.EndInvoke("MedicalServiceSetGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSetDefinitionValidate(string token, Mercury.Server.Application.ServiceSetDefinition setDefinition, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = setDefinition;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSetDefinitionValidate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndMedicalServiceSetDefinitionValidate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("MedicalServiceSetDefinitionValidate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMedicalServiceSetSave(string token, Mercury.Server.Application.ServiceSet serviceSet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serviceSet;
                System.IAsyncResult _result = base.BeginInvoke("MedicalServiceSetSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndMedicalServiceSetSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("MedicalServiceSetSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServiceGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberServiceId;
                System.IAsyncResult _result = base.BeginInvoke("MemberServiceGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberService EndMemberServiceGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberService _result = ((Mercury.Server.Application.MemberService)(base.EndInvoke("MemberServiceGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServiceAddManual(string token, long memberId, long serviceId, System.DateTime eventDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = serviceId;
                _args[3] = eventDate;
                System.IAsyncResult _result = base.BeginInvoke("MemberServiceAddManual", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndMemberServiceAddManual(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("MemberServiceAddManual", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServiceRemoveManual(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberServiceId;
                System.IAsyncResult _result = base.BeginInvoke("MemberServiceRemoveManual", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndMemberServiceRemoveManual(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("MemberServiceRemoveManual", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServicesGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = showHidden;
                System.IAsyncResult _result = base.BeginInvoke("MemberServicesGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMemberServicesGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MemberServicesGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServicesGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = initialRow;
                _args[3] = count;
                _args[4] = showHidden;
                System.IAsyncResult _result = base.BeginInvoke("MemberServicesGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberServiceCollectionResponse EndMemberServicesGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberServiceCollectionResponse _result = ((Mercury.Server.Application.MemberServiceCollectionResponse)(base.EndInvoke("MemberServicesGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServiceDetailSingletonGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberServiceId;
                System.IAsyncResult _result = base.BeginInvoke("MemberServiceDetailSingletonGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse EndMemberServiceDetailSingletonGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse _result = ((Mercury.Server.Application.MemberServiceDetailSingletonCollectionResponse)(base.EndInvoke("MemberServiceDetailSingletonGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberServiceDetailSetGet(string token, long memberServiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberServiceId;
                System.IAsyncResult _result = base.BeginInvoke("MemberServiceDetailSetGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberServiceDetailSetCollectionResponse EndMemberServiceDetailSetGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberServiceDetailSetCollectionResponse _result = ((Mercury.Server.Application.MemberServiceDetailSetCollectionResponse)(base.EndInvoke("MemberServiceDetailSetGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProblemStatementGet(string token, long problemStatementId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = problemStatementId;
                System.IAsyncResult _result = base.BeginInvoke("ProblemStatementGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProblemStatement EndProblemStatementGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProblemStatement _result = ((Mercury.Server.Application.ProblemStatement)(base.EndInvoke("ProblemStatementGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProblemStatementSave(string token, Mercury.Server.Application.ProblemStatement problemStatement, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = problemStatement;
                System.IAsyncResult _result = base.BeginInvoke("ProblemStatementSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndProblemStatementSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("ProblemStatementSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareOutcomesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CareOutcomesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CareOutcomeCollectionResponse EndCareOutcomesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CareOutcomeCollectionResponse _result = ((Mercury.Server.Application.CareOutcomeCollectionResponse)(base.EndInvoke("CareOutcomesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareOutcomeDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CareOutcomeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndCareOutcomeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("CareOutcomeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareOutcomeGet(string token, long careOutcomeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = careOutcomeId;
                System.IAsyncResult _result = base.BeginInvoke("CareOutcomeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CareOutcome EndCareOutcomeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CareOutcome _result = ((Mercury.Server.Application.CareOutcome)(base.EndInvoke("CareOutcomeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareOutcomeGetByName(string token, string careOutcomeName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = careOutcomeName;
                System.IAsyncResult _result = base.BeginInvoke("CareOutcomeGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CareOutcome EndCareOutcomeGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CareOutcome _result = ((Mercury.Server.Application.CareOutcome)(base.EndInvoke("CareOutcomeGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareOutcomeSave(string token, Mercury.Server.Application.CareOutcome careOutcome, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = careOutcome;
                System.IAsyncResult _result = base.BeginInvoke("CareOutcomeSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndCareOutcomeSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("CareOutcomeSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberCaseCreate(string token, long memberId, bool ignoreExisting, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = ignoreExisting;
                System.IAsyncResult _result = base.BeginInvoke("MemberCaseCreate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberCaseCreateResponse EndMemberCaseCreate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberCaseCreateResponse _result = ((Mercury.Server.Application.MemberCaseCreateResponse)(base.EndInvoke("MemberCaseCreate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberCaseGet(string token, long memberCaseId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberCaseId;
                System.IAsyncResult _result = base.BeginInvoke("MemberCaseGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberCase EndMemberCaseGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberCase _result = ((Mercury.Server.Application.MemberCase)(base.EndInvoke("MemberCaseGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBenefitPlansAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("BenefitPlansAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BenefitPlanCollectionResponse EndBenefitPlansAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BenefitPlanCollectionResponse _result = ((Mercury.Server.Application.BenefitPlanCollectionResponse)(base.EndInvoke("BenefitPlansAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBenefitPlanDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("BenefitPlanDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndBenefitPlanDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("BenefitPlanDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBenefitPlanGet(string token, long benefitPlanId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = benefitPlanId;
                System.IAsyncResult _result = base.BeginInvoke("BenefitPlanGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BenefitPlan EndBenefitPlanGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BenefitPlan _result = ((Mercury.Server.Application.BenefitPlan)(base.EndInvoke("BenefitPlanGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ContractsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ContractCollectionResponse EndContractsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ContractCollectionResponse _result = ((Mercury.Server.Application.ContractCollectionResponse)(base.EndInvoke("ContractsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ContractDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndContractDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("ContractDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractGet(string token, long contractId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = contractId;
                System.IAsyncResult _result = base.BeginInvoke("ContractGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Contract EndContractGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Contract _result = ((Mercury.Server.Application.Contract)(base.EndInvoke("ContractGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoverageLevelsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CoverageLevelsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CoverageLevelCollectionResponse EndCoverageLevelsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CoverageLevelCollectionResponse _result = ((Mercury.Server.Application.CoverageLevelCollectionResponse)(base.EndInvoke("CoverageLevelsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoverageLevelDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CoverageLevelDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndCoverageLevelDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("CoverageLevelDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoverageLevelGet(string token, long coverageLevelId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = coverageLevelId;
                System.IAsyncResult _result = base.BeginInvoke("CoverageLevelGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CoverageLevel EndCoverageLevelGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CoverageLevel _result = ((Mercury.Server.Application.CoverageLevel)(base.EndInvoke("CoverageLevelGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoverageTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CoverageTypesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CoverageTypeCollectionResponse EndCoverageTypesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CoverageTypeCollectionResponse _result = ((Mercury.Server.Application.CoverageTypeCollectionResponse)(base.EndInvoke("CoverageTypesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoverageTypeDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CoverageTypeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndCoverageTypeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("CoverageTypeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoverageTypeGet(string token, long coverageTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = coverageTypeId;
                System.IAsyncResult _result = base.BeginInvoke("CoverageTypeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CoverageType EndCoverageTypeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CoverageType _result = ((Mercury.Server.Application.CoverageType)(base.EndInvoke("CoverageTypeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsuranceTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("InsuranceTypesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.InsuranceTypeCollectionResponse EndInsuranceTypesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.InsuranceTypeCollectionResponse _result = ((Mercury.Server.Application.InsuranceTypeCollectionResponse)(base.EndInvoke("InsuranceTypesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsuranceTypeDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("InsuranceTypeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndInsuranceTypeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("InsuranceTypeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsuranceTypeGet(string token, long insuranceTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = insuranceTypeId;
                System.IAsyncResult _result = base.BeginInvoke("InsuranceTypeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.InsuranceType EndInsuranceTypeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.InsuranceType _result = ((Mercury.Server.Application.InsuranceType)(base.EndInvoke("InsuranceTypeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsurersAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("InsurersAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.InsurerCollectionResponse EndInsurersAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.InsurerCollectionResponse _result = ((Mercury.Server.Application.InsurerCollectionResponse)(base.EndInvoke("InsurersAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteGetMostRecentByType(string token, long entityId, long noteTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = noteTypeId;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteGetMostRecentByType", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityNote EndEntityNoteGetMostRecentByType(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityNote _result = ((Mercury.Server.Application.EntityNote)(base.EndInvoke("EntityNoteGetMostRecentByType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("FormsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SearchResultFormHeaderCollectionResponse EndFormsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SearchResultFormHeaderCollectionResponse _result = ((Mercury.Server.Application.SearchResultFormHeaderCollectionResponse)(base.EndInvoke("FormsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormGet(string token, long formId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = formId;
                System.IAsyncResult _result = base.BeginInvoke("FormGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Form EndFormGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Form _result = ((Mercury.Server.Application.Form)(base.EndInvoke("FormGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormGetByName(string token, string formName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = formName;
                System.IAsyncResult _result = base.BeginInvoke("FormGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Form EndFormGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Form _result = ((Mercury.Server.Application.Form)(base.EndInvoke("FormGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormGetByEntityFormId(string token, long entityFormId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityFormId;
                System.IAsyncResult _result = base.BeginInvoke("FormGetByEntityFormId", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Form EndFormGetByEntityFormId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Form _result = ((Mercury.Server.Application.Form)(base.EndInvoke("FormGetByEntityFormId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormCompile(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = form;
                System.IAsyncResult _result = base.BeginInvoke("FormCompile", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FormCompileMessageCollectionResponse EndFormCompile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FormCompileMessageCollectionResponse _result = ((Mercury.Server.Application.FormCompileMessageCollectionResponse)(base.EndInvoke("FormCompile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormSubmit(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = form;
                System.IAsyncResult _result = base.BeginInvoke("FormSubmit", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FormSubmitResponse EndFormSubmit(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FormSubmitResponse _result = ((Mercury.Server.Application.FormSubmitResponse)(base.EndInvoke("FormSubmit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormSave(string token, Mercury.Server.Application.Form form, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = form;
                System.IAsyncResult _result = base.BeginInvoke("FormSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndFormSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("FormSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_DataBindableProperties(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_DataBindableProperties", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndFormControl_DataBindableProperties(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("FormControl_DataBindableProperties", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_DataBindingContexts(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_DataBindingContexts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndFormControl_DataBindingContexts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("FormControl_DataBindingContexts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_DataBindingAllowed(string token, Mercury.Server.Application.Form form, System.Guid controlId, string bindableProperty, string forDataType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                _args[3] = bindableProperty;
                _args[4] = forDataType;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_DataBindingAllowed", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndFormControl_DataBindingAllowed(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("FormControl_DataBindingAllowed", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_EvaluateDataBinding(string token, Mercury.Server.Application.Form form, System.Guid controlId, Mercury.Server.Application.FormControlDataBinding dataBinding, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                _args[3] = dataBinding;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_EvaluateDataBinding", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFormControl_EvaluateDataBinding(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FormControl_EvaluateDataBinding", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginForm_OnDataSourceChanged(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                System.IAsyncResult _result = base.BeginInvoke("Form_OnDataSourceChanged", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Form EndForm_OnDataSourceChanged(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Form _result = ((Mercury.Server.Application.Form)(base.EndInvoke("Form_OnDataSourceChanged", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_Events(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_Events", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndFormControl_Events(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("FormControl_Events", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_EventHandler_Compile(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                _args[3] = eventName;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_EventHandler_Compile", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FormCompileMessageCollectionResponse EndFormControl_EventHandler_Compile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FormCompileMessageCollectionResponse _result = ((Mercury.Server.Application.FormCompileMessageCollectionResponse)(base.EndInvoke("FormControl_EventHandler_Compile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_RaiseEvent(string token, Mercury.Server.Application.Form form, System.Guid controlId, string eventName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                _args[3] = eventName;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_RaiseEvent", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FormControlRaiseEventResponse EndFormControl_RaiseEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FormControlRaiseEventResponse _result = ((Mercury.Server.Application.FormControlRaiseEventResponse)(base.EndInvoke("FormControl_RaiseEvent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControl_ValueChanged(string token, Mercury.Server.Application.Form form, System.Guid controlId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                System.IAsyncResult _result = base.BeginInvoke("FormControl_ValueChanged", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.FormControlValueChangedResponse EndFormControl_ValueChanged(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.FormControlValueChangedResponse _result = ((Mercury.Server.Application.FormControlValueChangedResponse)(base.EndInvoke("FormControl_ValueChanged", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFormControlSelection_ReferenceGetPage(string token, Mercury.Server.Application.Form form, System.Guid controlId, string text, int initialRow, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = token;
                _args[1] = form;
                _args[2] = controlId;
                _args[3] = text;
                _args[4] = initialRow;
                _args[5] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("FormControlSelection_ReferenceGetPage", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndFormControlSelection_ReferenceGetPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("FormControlSelection_ReferenceGetPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareLevelsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CareLevelsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CareLevelCollectionResponse EndCareLevelsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CareLevelCollectionResponse _result = ((Mercury.Server.Application.CareLevelCollectionResponse)(base.EndInvoke("CareLevelsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareLevelGet(string token, long careLevelId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = careLevelId;
                System.IAsyncResult _result = base.BeginInvoke("CareLevelGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CareLevel EndCareLevelGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CareLevel _result = ((Mercury.Server.Application.CareLevel)(base.EndInvoke("CareLevelGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCareLevelSave(string token, Mercury.Server.Application.CareLevel careLevel, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = careLevel;
                System.IAsyncResult _result = base.BeginInvoke("CareLevelSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndCareLevelSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("CareLevelSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCarePlansAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CarePlansAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CarePlanCollectionResponse EndCarePlansAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CarePlanCollectionResponse _result = ((Mercury.Server.Application.CarePlanCollectionResponse)(base.EndInvoke("CarePlansAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCarePlanGet(string token, long carePlanId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = carePlanId;
                System.IAsyncResult _result = base.BeginInvoke("CarePlanGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CarePlan EndCarePlanGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CarePlan _result = ((Mercury.Server.Application.CarePlan)(base.EndInvoke("CarePlanGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCarePlanSave(string token, Mercury.Server.Application.CarePlan carePlan, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = carePlan;
                System.IAsyncResult _result = base.BeginInvoke("CarePlanSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndCarePlanSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("CarePlanSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProblemStatementsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ProblemStatementsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ProblemStatementCollectionResponse EndProblemStatementsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ProblemStatementCollectionResponse _result = ((Mercury.Server.Application.ProblemStatementCollectionResponse)(base.EndInvoke("ProblemStatementsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityAddressSave(string token, Mercury.Server.Application.EntityAddress entityAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityAddress;
                System.IAsyncResult _result = base.BeginInvoke("EntityAddressSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEntityAddressSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EntityAddressSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityAddressTerminate(string token, Mercury.Server.Application.EntityAddress entityAddress, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityAddress;
                _args[2] = terminationDate;
                System.IAsyncResult _result = base.BeginInvoke("EntityAddressTerminate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEntityAddressTerminate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EntityAddressTerminate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactGet(string token, long entityContactId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityContactId;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityContact EndEntityContactGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityContact _result = ((Mercury.Server.Application.EntityContact)(base.EndInvoke("EntityContactGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactsGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndEntityContactsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("EntityContactsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactsGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = initialRow;
                _args[3] = count;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactsGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityContactCollectionResponse EndEntityContactsGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityContactCollectionResponse _result = ((Mercury.Server.Application.EntityContactCollectionResponse)(base.EndInvoke("EntityContactsGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactSave(string token, Mercury.Server.Application.EntityContact entityContact, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityContact;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEntityContactSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EntityContactSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactInformationGet(string token, long entityContactInformationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityContactInformationId;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactInformationGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityContactInformation EndEntityContactInformationGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityContactInformation _result = ((Mercury.Server.Application.EntityContactInformation)(base.EndInvoke("EntityContactInformationGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactInformationGetByTypeDate(string token, long entityId, Mercury.Server.Application.EntityContactType contactType, System.DateTime forDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = contactType;
                _args[3] = forDate;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactInformationGetByTypeDate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityContactInformation EndEntityContactInformationGetByTypeDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityContactInformation _result = ((Mercury.Server.Application.EntityContactInformation)(base.EndInvoke("EntityContactInformationGetByTypeDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactInformationsGet(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactInformationsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityContactInformationCollectionResponse EndEntityContactInformationsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityContactInformationCollectionResponse _result = ((Mercury.Server.Application.EntityContactInformationCollectionResponse)(base.EndInvoke("EntityContactInformationsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactInformationSave(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityContactInformation;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactInformationSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEntityContactInformationSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EntityContactInformationSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityContactInformationTerminate(string token, Mercury.Server.Application.EntityContactInformation entityContactInformation, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityContactInformation;
                _args[2] = terminationDate;
                System.IAsyncResult _result = base.BeginInvoke("EntityContactInformationTerminate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEntityContactInformationTerminate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EntityContactInformationTerminate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityCorrespondenceGet(string token, long entityCorrespondenceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityCorrespondenceId;
                System.IAsyncResult _result = base.BeginInvoke("EntityCorrespondenceGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityCorrespondence EndEntityCorrespondenceGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityCorrespondence _result = ((Mercury.Server.Application.EntityCorrespondence)(base.EndInvoke("EntityCorrespondenceGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityCorrespondenceImageGet(string token, long entityCorrespondenceId, bool render, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityCorrespondenceId;
                _args[2] = render;
                System.IAsyncResult _result = base.BeginInvoke("EntityCorrespondenceImageGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ImageResponse EndEntityCorrespondenceImageGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ImageResponse _result = ((Mercury.Server.Application.ImageResponse)(base.EndInvoke("EntityCorrespondenceImageGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityCorrespondenceSave(string token, Mercury.Server.Application.EntityCorrespondence entityCorrespondence, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityCorrespondence;
                System.IAsyncResult _result = base.BeginInvoke("EntityCorrespondenceSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEntityCorrespondenceSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EntityCorrespondenceSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityDocumentsGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityDocumentsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndEntityDocumentsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("EntityDocumentsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityDocumentsGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = initialRow;
                _args[3] = count;
                System.IAsyncResult _result = base.BeginInvoke("EntityDocumentsGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityDocumentCollectionResponse EndEntityDocumentsGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityDocumentCollectionResponse _result = ((Mercury.Server.Application.EntityDocumentCollectionResponse)(base.EndInvoke("EntityDocumentsGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteGet(string token, long entityNoteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityNoteId;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityNote EndEntityNoteGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityNote _result = ((Mercury.Server.Application.EntityNote)(base.EndInvoke("EntityNoteGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteSave(string token, Mercury.Server.Application.EntityNote entityNote, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityNote;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEntityNoteSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EntityNoteSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteTerminate(string token, Mercury.Server.Application.EntityNote entityNote, System.DateTime terminationDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityNote;
                _args[2] = terminationDate;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteTerminate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEntityNoteTerminate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EntityNoteTerminate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteContentsGet(string token, long entityNoteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityNoteId;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteContentsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityNoteContentCollectionResponse EndEntityNoteContentsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityNoteContentCollectionResponse _result = ((Mercury.Server.Application.EntityNoteContentCollectionResponse)(base.EndInvoke("EntityNoteContentsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteContentAppend(string token, Mercury.Server.Application.EntityNote entityNote, string content, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityNote;
                _args[2] = content;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteContentAppend", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEntityNoteContentAppend(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EntityNoteContentAppend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNotesGetCount(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityNotesGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndEntityNotesGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("EntityNotesGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNotesGetByPage(string token, long entityId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = initialRow;
                _args[3] = count;
                System.IAsyncResult _result = base.BeginInvoke("EntityNotesGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityNoteCollectionResponse EndEntityNotesGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityNoteCollectionResponse _result = ((Mercury.Server.Application.EntityNoteCollectionResponse)(base.EndInvoke("EntityNotesGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteGetMostRecentByImportance(string token, long entityId, Mercury.Server.Application.NoteImportance importance, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = importance;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteGetMostRecentByImportance", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityNote EndEntityNoteGetMostRecentByImportance(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityNote _result = ((Mercury.Server.Application.EntityNote)(base.EndInvoke("EntityNoteGetMostRecentByImportance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityNoteGetMostRecentByAllImportances(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityNoteGetMostRecentByAllImportances", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityNoteCollectionResponse EndEntityNoteGetMostRecentByAllImportances(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityNoteCollectionResponse _result = ((Mercury.Server.Application.EntityNoteCollectionResponse)(base.EndInvoke("EntityNoteGetMostRecentByAllImportances", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRevenueCodeDictionary(string token, string revenueCodePrefix, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = revenueCodePrefix;
                System.IAsyncResult _result = base.BeginInvoke("RevenueCodeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndRevenueCodeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("RevenueCodeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBillTypeDictionary(string token, string billTypePrefix, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = billTypePrefix;
                System.IAsyncResult _result = base.BeginInvoke("BillTypeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndBillTypeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("BillTypeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIcd9ProcedureCodeDictionary(string token, string icd9Icd9ProcedureCodePrefix, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = icd9Icd9ProcedureCodePrefix;
                System.IAsyncResult _result = base.BeginInvoke("Icd9ProcedureCodeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndIcd9ProcedureCodeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("Icd9ProcedureCodeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActionsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ActionsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ActionCollectionResponse EndActionsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ActionCollectionResponse _result = ((Mercury.Server.Application.ActionCollectionResponse)(base.EndInvoke("ActionsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizationTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizationTypesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuthorizationTypeCollectionResponse EndAuthorizationTypesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuthorizationTypeCollectionResponse _result = ((Mercury.Server.Application.AuthorizationTypeCollectionResponse)(base.EndInvoke("AuthorizationTypesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizationTypeGet(string token, long authorizationTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = authorizationTypeId;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizationTypeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuthorizationType EndAuthorizationTypeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuthorizationType _result = ((Mercury.Server.Application.AuthorizationType)(base.EndInvoke("AuthorizationTypeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberAuthorizationsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberAuthorizationsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMemberAuthorizationsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MemberAuthorizationsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberAuthorizationsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = initialRow;
                _args[3] = count;
                System.IAsyncResult _result = base.BeginInvoke("MemberAuthorizationsGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuthorizationCollectionResponse EndMemberAuthorizationsGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuthorizationCollectionResponse _result = ((Mercury.Server.Application.AuthorizationCollectionResponse)(base.EndInvoke("MemberAuthorizationsGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizationLineGetByAuthorization(string token, long authorizationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = authorizationId;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizationLineGetByAuthorization", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuthorizationLineCollectionResponse EndAuthorizationLineGetByAuthorization(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuthorizationLineCollectionResponse _result = ((Mercury.Server.Application.AuthorizationLineCollectionResponse)(base.EndInvoke("AuthorizationLineGetByAuthorization", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizedServicesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizedServicesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuthorizedServiceCollectionResponse EndAuthorizedServicesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuthorizedServiceCollectionResponse _result = ((Mercury.Server.Application.AuthorizedServiceCollectionResponse)(base.EndInvoke("AuthorizedServicesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizedServiceGet(string token, long metricId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = metricId;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizedServiceGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuthorizedService EndAuthorizedServiceGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuthorizedService _result = ((Mercury.Server.Application.AuthorizedService)(base.EndInvoke("AuthorizedServiceGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizedServiceSave(string token, Mercury.Server.Application.AuthorizedService metric, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = metric;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizedServiceSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndAuthorizedServiceSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("AuthorizedServiceSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizedServicePreview(string token, Mercury.Server.Application.AuthorizedService authorizedService, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = authorizedService;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizedServicePreview", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse EndAuthorizedServicePreview(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse _result = ((Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse)(base.EndInvoke("AuthorizedServicePreview", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberAuthorizedServicesGetCount(string token, long memberId, bool showHidden, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = showHidden;
                System.IAsyncResult _result = base.BeginInvoke("MemberAuthorizedServicesGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMemberAuthorizedServicesGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MemberAuthorizedServicesGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberAuthorizedServicesGetByPage(string token, long memberId, int initialRow, int count, bool showHidden, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = initialRow;
                _args[3] = count;
                _args[4] = showHidden;
                System.IAsyncResult _result = base.BeginInvoke("MemberAuthorizedServicesGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse EndMemberAuthorizedServicesGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse _result = ((Mercury.Server.Application.MemberAuthorizedServiceCollectionResponse)(base.EndInvoke("MemberAuthorizedServicesGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberAuthorizedServiceDetailsGet(string token, long memberAuthorizedServiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberAuthorizedServiceId;
                System.IAsyncResult _result = base.BeginInvoke("MemberAuthorizedServiceDetailsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse EndMemberAuthorizedServiceDetailsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse _result = ((Mercury.Server.Application.MemberAuthorizedServiceDetailCollectionResponse)(base.EndInvoke("MemberAuthorizedServiceDetailsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberClaimsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberClaimsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMemberClaimsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MemberClaimsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberClaimsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = initialRow;
                _args[3] = count;
                System.IAsyncResult _result = base.BeginInvoke("MemberClaimsGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ClaimCollectionResponse EndMemberClaimsGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ClaimCollectionResponse _result = ((Mercury.Server.Application.ClaimCollectionResponse)(base.EndInvoke("MemberClaimsGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClaimLinesGet(string token, long claimId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = claimId;
                System.IAsyncResult _result = base.BeginInvoke("ClaimLinesGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ClaimLineCollectionResponse EndClaimLinesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ClaimLineCollectionResponse _result = ((Mercury.Server.Application.ClaimLineCollectionResponse)(base.EndInvoke("ClaimLinesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberPharmacyClaimsGetCount(string token, long memberId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = memberId;
                System.IAsyncResult _result = base.BeginInvoke("MemberPharmacyClaimsGetCount", _args, callback, asyncState);
                return _result;
            }
            
            public long EndMemberPharmacyClaimsGetCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("MemberPharmacyClaimsGetCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMemberPharmacyClaimsGetByPage(string token, long memberId, int initialRow, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = memberId;
                _args[2] = initialRow;
                _args[3] = count;
                System.IAsyncResult _result = base.BeginInvoke("MemberPharmacyClaimsGetByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PharmacyClaimCollectionResponse EndMemberPharmacyClaimsGetByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PharmacyClaimCollectionResponse _result = ((Mercury.Server.Application.PharmacyClaimCollectionResponse)(base.EndInvoke("MemberPharmacyClaimsGetByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityGet(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Entity EndEntityGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Entity _result = ((Mercury.Server.Application.Entity)(base.EndInvoke("EntityGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityAddressGet(string token, long entityAddressId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityAddressId;
                System.IAsyncResult _result = base.BeginInvoke("EntityAddressGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityAddress EndEntityAddressGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityAddress _result = ((Mercury.Server.Application.EntityAddress)(base.EndInvoke("EntityAddressGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityAddressGetByTypeDate(string token, long entityId, Mercury.Server.Application.EntityAddressType addressType, System.DateTime forDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = entityId;
                _args[2] = addressType;
                _args[3] = forDate;
                System.IAsyncResult _result = base.BeginInvoke("EntityAddressGetByTypeDate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityAddress EndEntityAddressGetByTypeDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityAddress _result = ((Mercury.Server.Application.EntityAddress)(base.EndInvoke("EntityAddressGetByTypeDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityAddressesGet(string token, long entityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = entityId;
                System.IAsyncResult _result = base.BeginInvoke("EntityAddressesGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EntityAddressCollectionResponse EndEntityAddressesGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EntityAddressCollectionResponse _result = ((Mercury.Server.Application.EntityAddressCollectionResponse)(base.EndInvoke("EntityAddressesGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContactRegardingGet(string token, long contactRegardingId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = contactRegardingId;
                System.IAsyncResult _result = base.BeginInvoke("ContactRegardingGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ContactRegarding EndContactRegardingGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ContactRegarding _result = ((Mercury.Server.Application.ContactRegarding)(base.EndInvoke("ContactRegardingGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContactRegardingGetByName(string token, string contactRegardingName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = contactRegardingName;
                System.IAsyncResult _result = base.BeginInvoke("ContactRegardingGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ContactRegarding EndContactRegardingGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ContactRegarding _result = ((Mercury.Server.Application.ContactRegarding)(base.EndInvoke("ContactRegardingGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContactRegardingSave(string token, Mercury.Server.Application.ContactRegarding contactRegarding, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = contactRegarding;
                System.IAsyncResult _result = base.BeginInvoke("ContactRegardingSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndContactRegardingSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("ContactRegardingSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCorrespondencesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CorrespondencesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CorrespondenceCollectionResponse EndCorrespondencesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CorrespondenceCollectionResponse _result = ((Mercury.Server.Application.CorrespondenceCollectionResponse)(base.EndInvoke("CorrespondencesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCorrespondenceDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("CorrespondenceDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndCorrespondenceDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("CorrespondenceDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCorrespondenceGet(string token, long correspondenceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = correspondenceId;
                System.IAsyncResult _result = base.BeginInvoke("CorrespondenceGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Correspondence EndCorrespondenceGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Correspondence _result = ((Mercury.Server.Application.Correspondence)(base.EndInvoke("CorrespondenceGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCorrespondenceGetByName(string token, string correspondenceName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = correspondenceName;
                System.IAsyncResult _result = base.BeginInvoke("CorrespondenceGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Correspondence EndCorrespondenceGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Correspondence _result = ((Mercury.Server.Application.Correspondence)(base.EndInvoke("CorrespondenceGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCorrespondenceSave(string token, Mercury.Server.Application.Correspondence correspondence, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = correspondence;
                System.IAsyncResult _result = base.BeginInvoke("CorrespondenceSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndCorrespondenceSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("CorrespondenceSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCorrespondenceContentGet(string token, long correspondenceContentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = correspondenceContentId;
                System.IAsyncResult _result = base.BeginInvoke("CorrespondenceContentGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CorrespondenceContent EndCorrespondenceContentGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CorrespondenceContent _result = ((Mercury.Server.Application.CorrespondenceContent)(base.EndInvoke("CorrespondenceContentGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNoteTypesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("NoteTypesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.NoteTypeCollectionResponse EndNoteTypesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.NoteTypeCollectionResponse _result = ((Mercury.Server.Application.NoteTypeCollectionResponse)(base.EndInvoke("NoteTypesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNoteTypeDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("NoteTypeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndNoteTypeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("NoteTypeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNoteTypeGet(string token, long noteTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = noteTypeId;
                System.IAsyncResult _result = base.BeginInvoke("NoteTypeGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.NoteType EndNoteTypeGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.NoteType _result = ((Mercury.Server.Application.NoteType)(base.EndInvoke("NoteTypeGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNoteTypeGetByName(string token, string noteTypeName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = noteTypeName;
                System.IAsyncResult _result = base.BeginInvoke("NoteTypeGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.NoteType EndNoteTypeGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.NoteType _result = ((Mercury.Server.Application.NoteType)(base.EndInvoke("NoteTypeGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNoteTypeSave(string token, Mercury.Server.Application.NoteType noteType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = noteType;
                System.IAsyncResult _result = base.BeginInvoke("NoteTypeSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndNoteTypeSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("NoteTypeSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStateReference(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("StateReference", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndStateReference(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("StateReference", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStateReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = zipCode;
                System.IAsyncResult _result = base.BeginInvoke("StateReferenceByZipCode", _args, callback, asyncState);
                return _result;
            }
            
            public string EndStateReferenceByZipCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("StateReferenceByZipCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCityReferenceByState(string token, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = state;
                System.IAsyncResult _result = base.BeginInvoke("CityReferenceByState", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CityStateZipCodeViewCollectionResponse EndCityReferenceByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CityStateZipCodeViewCollectionResponse _result = ((Mercury.Server.Application.CityStateZipCodeViewCollectionResponse)(base.EndInvoke("CityReferenceByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCityStateReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = zipCode;
                System.IAsyncResult _result = base.BeginInvoke("CityStateReferenceByZipCode", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.CityStateZipCodeView EndCityStateReferenceByZipCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.CityStateZipCodeView _result = ((Mercury.Server.Application.CityStateZipCodeView)(base.EndInvoke("CityStateReferenceByZipCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCityReferenceByZipCode(string token, string ZipCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = ZipCode;
                System.IAsyncResult _result = base.BeginInvoke("CityReferenceByZipCode", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCityReferenceByZipCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CityReferenceByZipCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCityReferenceByStateCityName(string token, string state, string cityName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = state;
                _args[2] = cityName;
                System.IAsyncResult _result = base.BeginInvoke("CityReferenceByStateCityName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndCityReferenceByStateCityName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("CityReferenceByStateCityName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCountyReferenceByState(string token, string state, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = state;
                System.IAsyncResult _result = base.BeginInvoke("CountyReferenceByState", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndCountyReferenceByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("CountyReferenceByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCountyReferenceByZipCode(string token, string zipCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = zipCode;
                System.IAsyncResult _result = base.BeginInvoke("CountyReferenceByZipCode", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCountyReferenceByZipCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CountyReferenceByZipCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDiagnosisDictionary(string token, string diagnosisPrefix, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = diagnosisPrefix;
                System.IAsyncResult _result = base.BeginInvoke("DiagnosisDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndDiagnosisDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("DiagnosisDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDiagnosisDescription(string token, string diagnosisCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = diagnosisCode;
                System.IAsyncResult _result = base.BeginInvoke("DiagnosisDescription", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDiagnosisDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DiagnosisDescription", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProcedureCodeDictionary(string token, string procedureCodePrefix, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = procedureCodePrefix;
                System.IAsyncResult _result = base.BeginInvoke("ProcedureCodeDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndProcedureCodeDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("ProcedureCodeDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentSave(string token, Mercury.Server.Application.Environment environment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environment;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEnvironmentSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EnvironmentSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentDelete(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentDelete", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEnvironmentDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EnvironmentDelete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentList(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentList", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndEnvironmentList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("EnvironmentList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndEnvironmentDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("EnvironmentDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EnvironmentCollectionResponse EndEnvironmentsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EnvironmentCollectionResponse _result = ((Mercury.Server.Application.EnvironmentCollectionResponse)(base.EndInvoke("EnvironmentsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHasEnvironmentPermissionByEnvironment(string token, string environmentName, string permissionName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = permissionName;
                System.IAsyncResult _result = base.BeginInvoke("HasEnvironmentPermissionByEnvironment", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndHasEnvironmentPermissionByEnvironment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("HasEnvironmentPermissionByEnvironment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentPermissionList(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentPermissionList", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndEnvironmentPermissionList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("EnvironmentPermissionList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentPermissionsAvailable(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentPermissionsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PermissionCollectionResponse EndEnvironmentPermissionsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PermissionCollectionResponse _result = ((Mercury.Server.Application.PermissionCollectionResponse)(base.EndInvoke("EnvironmentPermissionsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleList(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleList", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndEnvironmentRoleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("EnvironmentRoleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleDictionary(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndEnvironmentRoleDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("EnvironmentRoleDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRolesAvailable(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRolesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.RoleCollectionResponse EndEnvironmentRolesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.RoleCollectionResponse _result = ((Mercury.Server.Application.RoleCollectionResponse)(base.EndInvoke("EnvironmentRolesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleGetPermissions(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = roleName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleGetPermissions", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.RolePermissionCollectionResponse EndEnvironmentRoleGetPermissions(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.RolePermissionCollectionResponse _result = ((Mercury.Server.Application.RolePermissionCollectionResponse)(base.EndInvoke("EnvironmentRoleGetPermissions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleGetMembership(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = roleName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleGetMembership", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.RoleMembershipCollectionResponse EndEnvironmentRoleGetMembership(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.RoleMembershipCollectionResponse _result = ((Mercury.Server.Application.RoleMembershipCollectionResponse)(base.EndInvoke("EnvironmentRoleGetMembership", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleGetByEnvironment(string token, string environmentName, string roleName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = roleName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleGetByEnvironment", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EnvironmentRole EndEnvironmentRoleGetByEnvironment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EnvironmentRole _result = ((Mercury.Server.Application.EnvironmentRole)(base.EndInvoke("EnvironmentRoleGetByEnvironment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleSaveByEnvironment(string token, string environmentName, Mercury.Server.Application.EnvironmentRole environmentRole, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = environmentRole;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleSaveByEnvironment", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ObjectSaveResponse EndEnvironmentRoleSaveByEnvironment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ObjectSaveResponse _result = ((Mercury.Server.Application.ObjectSaveResponse)(base.EndInvoke("EnvironmentRoleSaveByEnvironment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleSetMembership(string token, string environmentName, string roleName, System.Collections.ObjectModel.ObservableCollection<Mercury.Server.Application.EnvironmentRoleMembership> roleMembership, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = roleName;
                _args[3] = roleMembership;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleSetMembership", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEnvironmentRoleSetMembership(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EnvironmentRoleSetMembership", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentRoleSetPermission(string token, string environmentName, string roleName, long permissionId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = token;
                _args[1] = environmentName;
                _args[2] = roleName;
                _args[3] = permissionId;
                _args[4] = isGranted;
                _args[5] = isDenied;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentRoleSetPermission", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndEnvironmentRoleSetPermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("EnvironmentRoleSetPermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoreObjectDictionary(string token, string objectType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = objectType;
                System.IAsyncResult _result = base.BeginInvoke("CoreObjectDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndCoreObjectDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("CoreObjectDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoreObject_Validate(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = coreObject;
                System.IAsyncResult _result = base.BeginInvoke("CoreObject_Validate", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryStringResponse EndCoreObject_Validate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryStringResponse _result = ((Mercury.Server.Application.DictionaryStringResponse)(base.EndInvoke("CoreObject_Validate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoreObject_DataBindingContexts(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = coreObject;
                System.IAsyncResult _result = base.BeginInvoke("CoreObject_DataBindingContexts", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryStringResponse EndCoreObject_DataBindingContexts(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryStringResponse _result = ((Mercury.Server.Application.DictionaryStringResponse)(base.EndInvoke("CoreObject_DataBindingContexts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoreObject_EvaluateDataBinding(string token, Mercury.Server.Application.CoreObject coreObject, string bindingContext, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = coreObject;
                _args[2] = bindingContext;
                System.IAsyncResult _result = base.BeginInvoke("CoreObject_EvaluateDataBinding", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringResponse EndCoreObject_EvaluateDataBinding(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringResponse _result = ((Mercury.Server.Application.StringResponse)(base.EndInvoke("CoreObject_EvaluateDataBinding", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoreObject_XmlSerialize(string token, Mercury.Server.Application.CoreObject coreObject, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = coreObject;
                System.IAsyncResult _result = base.BeginInvoke("CoreObject_XmlSerialize", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringResponse EndCoreObject_XmlSerialize(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringResponse _result = ((Mercury.Server.Application.StringResponse)(base.EndInvoke("CoreObject_XmlSerialize", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCoreObject_XmlImport(string token, string serializedXml, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = serializedXml;
                System.IAsyncResult _result = base.BeginInvoke("CoreObject_XmlImport", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ImportExportResponse EndCoreObject_XmlImport(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ImportExportResponse _result = ((Mercury.Server.Application.ImportExportResponse)(base.EndInvoke("CoreObject_XmlImport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContactRegardingsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ContactRegardingsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.ContactRegardingCollectionResponse EndContactRegardingsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.ContactRegardingCollectionResponse _result = ((Mercury.Server.Application.ContactRegardingCollectionResponse)(base.EndInvoke("ContactRegardingsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContactRegardingDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ContactRegardingDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndContactRegardingDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("ContactRegardingDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVersionServer(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("VersionServer", _args, callback, asyncState);
                return _result;
            }
            
            public string EndVersionServer(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("VersionServer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSessionGet(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("SessionGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Session EndSessionGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Session _result = ((Mercury.Server.Application.Session)(base.EndInvoke("SessionGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginActiveSessionsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("ActiveSessionsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.AuditAuthenticationCollectionResponse EndActiveSessionsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.AuditAuthenticationCollectionResponse _result = ((Mercury.Server.Application.AuditAuthenticationCollectionResponse)(base.EndInvoke("ActiveSessionsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnterprisePermissionList(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("EnterprisePermissionList", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.StringListResponse EndEnterprisePermissionList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.StringListResponse _result = ((Mercury.Server.Application.StringListResponse)(base.EndInvoke("EnterprisePermissionList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnterprisePermissionDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("EnterprisePermissionDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndEnterprisePermissionDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("EnterprisePermissionDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnterprisePermissionsAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("EnterprisePermissionsAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.PermissionCollectionResponse EndEnterprisePermissionsAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.PermissionCollectionResponse _result = ((Mercury.Server.Application.PermissionCollectionResponse)(base.EndInvoke("EnterprisePermissionsAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityGroupEnterprisePermissionsGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                _args[2] = securityGroupId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityGroupEnterprisePermissionsGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SecurityGroupPermissionCollectionResponse EndSecurityGroupEnterprisePermissionsGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SecurityGroupPermissionCollectionResponse _result = ((Mercury.Server.Application.SecurityGroupPermissionCollectionResponse)(base.EndInvoke("SecurityGroupEnterprisePermissionsGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityGroupEnterprisePermissionSave(string token, long securityAuthorityId, string securityGroupId, long permissionId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = token;
                _args[1] = securityAuthorityId;
                _args[2] = securityGroupId;
                _args[3] = permissionId;
                _args[4] = isGranted;
                _args[5] = isDenied;
                System.IAsyncResult _result = base.BeginInvoke("SecurityGroupEnterprisePermissionSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndSecurityGroupEnterprisePermissionSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("SecurityGroupEnterprisePermissionSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthoritiesAvailable(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthoritiesAvailable", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SecurityAuthorityCollectionResponse EndSecurityAuthoritiesAvailable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SecurityAuthorityCollectionResponse _result = ((Mercury.Server.Application.SecurityAuthorityCollectionResponse)(base.EndInvoke("SecurityAuthoritiesAvailable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthorityDictionary(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthorityDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryResponse EndSecurityAuthorityDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryResponse _result = ((Mercury.Server.Application.DictionaryResponse)(base.EndInvoke("SecurityAuthorityDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthorityGroupGetMembership(string token, long securityAuthorityId, string securityGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = securityAuthorityId;
                _args[2] = securityGroupId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthorityGroupGetMembership", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DirectoryEntryCollectionResponse EndSecurityAuthorityGroupGetMembership(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DirectoryEntryCollectionResponse _result = ((Mercury.Server.Application.DirectoryEntryCollectionResponse)(base.EndInvoke("SecurityAuthorityGroupGetMembership", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthorityGetByName(string token, string securityAuthorityName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthorityGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SecurityAuthority EndSecurityAuthorityGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SecurityAuthority _result = ((Mercury.Server.Application.SecurityAuthority)(base.EndInvoke("SecurityAuthorityGetByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthorityGet(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = securityAuthorityId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthorityGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SecurityAuthority EndSecurityAuthorityGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SecurityAuthority _result = ((Mercury.Server.Application.SecurityAuthority)(base.EndInvoke("SecurityAuthorityGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthoritySave(string token, Mercury.Server.Application.SecurityAuthority securityAuthority, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = securityAuthority;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthoritySave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndSecurityAuthoritySave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("SecurityAuthoritySave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthorityDelete(string token, string securityAuthorityName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthorityDelete", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndSecurityAuthorityDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("SecurityAuthorityDelete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthorityProviderBrowseDirectory(string token, string securityAuthorityName, string directoryPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                _args[2] = directoryPath;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthorityProviderBrowseDirectory", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DirectoryEntryCollectionResponse EndSecurityAuthorityProviderBrowseDirectory(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DirectoryEntryCollectionResponse _result = ((Mercury.Server.Application.DirectoryEntryCollectionResponse)(base.EndInvoke("SecurityAuthorityProviderBrowseDirectory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthoritySecurityGroupDictionary(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = securityAuthorityId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthoritySecurityGroupDictionary", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DictionaryStringResponse EndSecurityAuthoritySecurityGroupDictionary(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DictionaryStringResponse _result = ((Mercury.Server.Application.DictionaryStringResponse)(base.EndInvoke("SecurityAuthoritySecurityGroupDictionary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthoritySecurityGroups(string token, long securityAuthorityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = securityAuthorityId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthoritySecurityGroups", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SecurityGroupCollectionResponse EndSecurityAuthoritySecurityGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SecurityGroupCollectionResponse _result = ((Mercury.Server.Application.SecurityGroupCollectionResponse)(base.EndInvoke("SecurityAuthoritySecurityGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthoritySecurityGroupGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                _args[2] = securityGroupId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthoritySecurityGroupGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.SecurityGroup EndSecurityAuthoritySecurityGroupGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.SecurityGroup _result = ((Mercury.Server.Application.SecurityGroup)(base.EndInvoke("SecurityAuthoritySecurityGroupGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityAuthoritySecurityGroupMembership(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                _args[2] = securityGroupId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityAuthoritySecurityGroupMembership", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.DirectoryEntryCollectionResponse EndSecurityAuthoritySecurityGroupMembership(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.DirectoryEntryCollectionResponse _result = ((Mercury.Server.Application.DirectoryEntryCollectionResponse)(base.EndInvoke("SecurityAuthoritySecurityGroupMembership", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentAccessGetByEnvironmentName(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentAccessGetByEnvironmentName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EnvironmentAccessCollectionResponse EndEnvironmentAccessGetByEnvironmentName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EnvironmentAccessCollectionResponse _result = ((Mercury.Server.Application.EnvironmentAccessCollectionResponse)(base.EndInvoke("EnvironmentAccessGetByEnvironmentName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityGroupEnvironmentAccessGet(string token, string securityAuthorityName, string securityGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = token;
                _args[1] = securityAuthorityName;
                _args[2] = securityGroupId;
                System.IAsyncResult _result = base.BeginInvoke("SecurityGroupEnvironmentAccessGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.EnvironmentAccessCollectionResponse EndSecurityGroupEnvironmentAccessGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.EnvironmentAccessCollectionResponse _result = ((Mercury.Server.Application.EnvironmentAccessCollectionResponse)(base.EndInvoke("SecurityGroupEnvironmentAccessGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSecurityGroupEnvironmentAccessSave(string token, long securityAuthorityId, string securityGroupId, long environmentId, bool isGranted, bool isDenied, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = token;
                _args[1] = securityAuthorityId;
                _args[2] = securityGroupId;
                _args[3] = environmentId;
                _args[4] = isGranted;
                _args[5] = isDenied;
                System.IAsyncResult _result = base.BeginInvoke("SecurityGroupEnvironmentAccessSave", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.BooleanResponse EndSecurityGroupEnvironmentAccessSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.BooleanResponse _result = ((Mercury.Server.Application.BooleanResponse)(base.EndInvoke("SecurityGroupEnvironmentAccessSave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentGet(string token, long environmentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentId;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentGet", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Environment EndEnvironmentGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Environment _result = ((Mercury.Server.Application.Environment)(base.EndInvoke("EnvironmentGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnvironmentGetByName(string token, string environmentName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = environmentName;
                System.IAsyncResult _result = base.BeginInvoke("EnvironmentGetByName", _args, callback, asyncState);
                return _result;
            }
            
            public Mercury.Server.Application.Environment EndEnvironmentGetByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Mercury.Server.Application.Environment _result = ((Mercury.Server.Application.Environment)(base.EndInvoke("EnvironmentGetByName", _args, result)));
                return _result;
            }
        }
    }
}
